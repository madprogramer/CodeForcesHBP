{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1511146194,"rating":1708,"authorHandle":"MikeMirzayanov","modificationTimeSeconds":1511148641,"id":55902,"title":"\u003cp\u003eNew: Diagnostics of Solutions in C++\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cimg src\u003d\"/predownloaded/b5/d2/b5d246ffc32dfe82c3cbac77d1898c5fcb62fa57.jpg\" style\u003d\"float: right;margin: 0 1.0em 1.0em 1.0em;max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eHello!\u003c/p\u003e\u003cp\u003eI am pleased to report that two rounds of Codeforces have gone quite well in terms of the work of Codeforces, I am very glad about it. These \u003cs\u003edays\u003c/s\u003e nights I spent in a profiler, fixing the code, researching the settings of MariaDB.\u003c/p\u003e\u003cp\u003eIn addition, I managed to allocate several hours on Sunday (to be honest, until Monday morning) to finish the long-planned innovation.\u003c/p\u003e\u003cp\u003eMeet, diagnostics of solutions in C++!\u003c/p\u003e\u003cp\u003eMany Codeforces visitors are already tired of the questions of less experienced participants: \u0026quot;Why does my solution not work on some test on the Codeforces servers, if I locally launch it and it works correctly? You have the wrong compiler/servers!\u0026quot; In 99% of cases this is an example of \u003ca href\u003d\"https://en.wikipedia.org/wiki/Undefined_behavior\"\u003eundefined behavior\u003c/a\u003e in a program. In other words, the program contains mistakes that, due to a number of circumstances, are not reproduced at local launch, but are reproduced at launch on the Codeforces servers.\u003c/p\u003e\u003cp\u003eSometimes, it\u0027s not easy to notice such a mistake. A small overflow of the array can lead to an incorrect answer on the test and to an runtime error of the program.\u003c/p\u003e\u003cp\u003eIn g++/clang++ there is a remarkable tools called sanitizers. It\u0027s such a way to compile a program in a special mode so that when it\u0027s working, it will check it for undefined behavior (and some other errors) and, if any, print them to stderr. The drmemory (it is similar to valgrind, but for Windows) has similar functionality, which starts the program in a special mode to detect errors. With such two diagnostic launches, the performance of the program suffers tremendously (the program is executed 5-100 times slower and requires more memory), but often it\u0027s worth it.\u003c/p\u003e\u003cp\u003eNow automatic diagnostics in some cases will prevent a question like \u0026quot;Why does not work ???\u0026quot;, indicating the error or its appearance!\u003c/p\u003e\u003cp\u003eIf your solution:\u003c/p\u003e \u003cul\u003e   \u003cli\u003ewritten in C++,\u003c/li\u003e   \u003cli\u003efinishes with a verdict \u0026quot;wrong answer\u0026quot; or \u0026quot;runtime error\u0026quot;\u003c/li\u003e   \u003cli\u003eon this test worked extremely quickly and consumed a little memory,\u003c/li\u003e \u003c/ul\u003e\u003cp\u003ethen it will be restarted using special diagnostic compilers (clang ++ with sanitizers and g++ with drmemory). If an execution error occurs during this launch, the diagnostics log will be displayed in the test details in the \u0026quot;diagnostics\u0026quot; section. Of course, this entry will contain a technical report in English, but often it will indicate to you the error of the program. Often it contains the cause of the mistake and even the source code line. If the diagnostics are not displayed, then at least one condition above is not fulfilled or the diagnostics has not detected any errors.\u003c/p\u003e \u003ccenter\u003e \u003cimg src\u003d\"/predownloaded/60/04/60046db7e8178eb7da73fc5c2e8eaca2f7ac9e7f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cbr /\u003e \u003csmall\u003eExample of the diagnostics:  here it is written that there was an array out of range error in the line 78.  \u003c/small\u003e\u003c/center\u003e\u003cp\u003e\u003ci\u003eThus, the diagnostics will sometimes help you to find a mistake like \u0026quot;out of bounds error\u0026quot;, \u0026quot;signed numbers overflow\u0026quot;, \u0026quot;uninitialized variable\u0026quot;, etc. Carefully read the diagnosis and do not make such mistakes in the future! \u003c/i\u003e\u003c/p\u003e\u003cp\u003eI wish your programs did not fail. I hope the innovation will be useful!\u003c/p\u003e\u003cp\u003eThere are big plans as it is useful to apply such diagnostics. Do not go far, wait for news, soon there will be more innovations!\u003c/p\u003e\u003cp\u003eP.S. Also, diagnostic compilers are simply available for use. For example, you can use them on the \u0026quot;Custom invocation\u0026quot; tab. I recall that the program runs many times slower and consumes more memory in diagnostic mode.\u003c/p\u003e\u003c/div\u003e","tags":["c++","diagnostics","diagnostic","codeforces"]}}