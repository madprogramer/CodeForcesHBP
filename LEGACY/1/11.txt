{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1266399138,"rating":0,"authorHandle":"MikeMirzayanov","modificationTimeSeconds":1421506313,"id":79,"title":"\u003cp\u003eAbout the programming languages\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e Later you\u0027ll be introduced to the rules of the Codeforces contests, which differ from those of \u003ca href\u003d\"http://en.wikipedia.org/wiki/ACM-ICPC#Contest_rules\"\u003eACM-ICPC\u003c/a\u003e, TopCoder, GCJ, and I hope they\u0027ll bring     some difference to the world of programming competitions. Most of the official competitions will be carried out     according to these rules, though there will be more traditional contests. For example, Codeforces Beta Round #1 will     be carried out according to the familiar \u003ca href\u003d\"http://en.wikipedia.org/wiki/ACM-ICPC#Contest_rules\"\u003eACM-ICPC\u003c/a\u003e     rules. For some time testing will be based on Windows, but things might change in future, fortunately, the system     supports testing on different platforms, even within one contest. \u003c/p\u003e \u003cp\u003e At the present time the system is     configured to support the following programming languages (the compilation and/or the launching line is shown for     each language): \u003c/p\u003e \u003col style\u003d\"margin-top: 0.0cm;\"\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eGNU C++ 4\u003cbr /\u003eg++.exe -static -DONLINE_JUDGE -lm -s -x c++ -Wl,--stack\u003d268435456 -O2 -o {filename}.exe {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eGNU C++11 4\u003cbr /\u003eg++.exe -static -DONLINE_JUDGE -lm -s -x c++ -Wl,--stack\u003d268435456 -O2 -std\u003dc++11 -D__USE_MINGW_ANSI_STDIO\u003d0 -o {filename}.exe {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eGNU C 4\u003cbr /\u003egcc.exe -static -fno-optimize-sibling-calls -fno-strict-aliasing -DONLINE_JUDGE -fno-asm -lm -s -Wl,--stack\u003d268435456 -O2 -o {filename}.exe {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003eMS VS C++\u003cbr /\u003ecl /W4 /F268435456 /EHsc /O2 /DONLINE_JUDGE {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003eFree Pascal 2\u003cbr /\u003e-n -O2 -Xs -Sgic -viwn -dONLINE_JUDGE -Cs67107839 -Mdelphi -XS {file} -o{filename}.exe\u003cbr /\u003e\u003cbr /\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eDelphi\u003c/span\u003e \u003cspan style\u003d\"\"\u003e 7\u003cbr /\u003edcc32 -Q -$M1048576,67107839 -DONLINE_JUDGE -cc {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eC# Mono 2\u003cbr /\u003edmcs -define:ONLINE_JUDGE -o+ -out:{filename}.exe {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eC# .NET\u003cbr /\u003ecsc.exe /o+ /d:ONLINE_JUDGE /r:System.Numerics.dll /out:{filename}.exe {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eJava 6, 7\u003cbr /\u003ejavac -cp \u0026quot;.;*\u0026quot; {file}\u003cbr /\u003e–∏\u003cbr /\u003ejava.exe -Xmx512M -Xss64M -DONLINE_JUDGE\u003dtrue -Duser.language\u003den -Duser.region\u003dUS -Duser.variant\u003dUS -jar %s\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eRuby\u003cbr /\u003eruby.exe %s\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003ePython 2, Python 3\u003cbr /\u003epython.exe %s\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003ePHP 5\u003cbr /\u003ephp.exe -n -d ONLINE_JUDGE\u003dtrue -d display_errors\u003dOff -d error_reporting\u003d0 %s\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eHaskell GHC 7\u003cbr /\u003eghc --make -O %s\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eD\u003cbr /\u003edmd -L/STACK:268435456 -version\u003dONLINE_JUDGE -O -release -inline -noboundscheck {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eOCaml\u003cbr /\u003eocamlopt nums.cmxa str.cmxa -pp camlp4o -unsafe -o {filename}.exe-ocaml {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e     \u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eScala\u003cbr /\u003eAs Java\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e     \u003cli style\u003d\"\"\u003e\u003cspan style\u003d\"\"\u003eJavaScript V8\u003cbr /\u003ed8 {file}\u003cbr /\u003e\u003cbr /\u003e\u003c/span\u003e\u003c/li\u003e \u003c/ol\u003e \u003cp\u003e\u003cb\u003e It is not guaranteed\u003c/b\u003e that all the problems will have solutions in all the given languages (it\u0027s     especially about the scripting ones). Probably, I\u0027ll later introduce equalizing coefficients for the working time     for some languages. A \u0026quot;plus\u0026quot; next to the version name means that the testing system can use older     versions. If you have suggestions about the possible ways to change the compilation or the launching line, write     about them in your commentaries.\u003c/p\u003e \u003cp\u003e It should be mentioned that apart from standard verdicts, you can get     \u0026quot;Denial of judgement\u0026quot;, which usually means that your solution can\u0027t be launched, or it has unexpectedly     failed. For example, is the Delphi array is too big, the compiler compiles the code, but the result will be the     incorrect win32 exe-file. Solutions with the verdicts like \u0026quot;Compilation failed\u0026quot;, \u0026quot;Denial of judgement\u0026quot;,     \u0026quot;Judgement failed\u0026quot; will be ignored while summing the results. \u003c/p\u003e \u003cp\u003e Moreover, pay attention, please,     that the problems will be given in English as well as in Russian. \u003c/p\u003e \u003cp\u003e That\u0027s it, see you at Codeforces Beta     Round#1. \u003c/p\u003e\u003cp\u003e UPD: GCC compiler has been added. \u003c/p\u003e\u003cp\u003eUPD 2: Added Haskell and F#.\u003c/p\u003e \u003cp\u003e\u003cb\u003eUPD 3.2: Actual compiler versions are\u003c/b\u003e\u003c/p\u003e \u003cul\u003e  \u003cli\u003eMono C# compiler version 3.2.3\u003c/li\u003e  \u003cli\u003eDMD32 D Compiler v2.064.2\u003c/li\u003e  \u003cli\u003eDelphi 7 [Borland Delphi Version 15.0]\u003c/li\u003e  \u003cli\u003eFree Pascal Compiler version 2.6.2\u003c/li\u003e  \u003cli\u003eMinGW g++.exe (GCC) 4.9.2\u003c/li\u003e  \u003cli\u003eHaskell Glorious Glasgow, version 7.6.1\u003c/li\u003e  \u003cli\u003eJava 6 javac 1.6.0_45\u003c/li\u003e  \u003cli\u003eJava 7 javac 1.7.0_72\u003c/li\u003e  \u003cli\u003eJava 8 javac 1.8.0_25\u003c/li\u003e  \u003cli\u003eOcaml ocamlopt 4.00.1\u003c/li\u003e  \u003cli\u003ePerl v5.12.2\u003c/li\u003e  \u003cli\u003ePHP 5.3.8\u003c/li\u003e  \u003cli\u003ePython 2.7.8\u003c/li\u003e  \u003cli\u003ePython 3.4.1\u003c/li\u003e  \u003cli\u003eRuby 2.0.0p353\u003c/li\u003e  \u003cli\u003eScala compiler version 2.11.1\u003c/li\u003e  \u003cli\u003eMS VS C++ 2010\u003c/li\u003e  \u003cli\u003eJavaScript V8 3.23.0\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["codeforces","compilers","rules"]}}