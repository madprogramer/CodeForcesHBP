{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1511146194,"rating":1708,"authorHandle":"MikeMirzayanov","modificationTimeSeconds":1511147893,"id":55902,"title":"\u003cp\u003eНовое: Диагностика решений на C++\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cimg src\u003d\"/predownloaded/b5/d2/b5d246ffc32dfe82c3cbac77d1898c5fcb62fa57.jpg\" style\u003d\"float: right;margin: 0 1.0em 1.0em 1.0em;max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eПривет!\u003c/p\u003e\u003cp\u003eЯ рад сообщить, что два раунда Codeforces прошли вполне хорошо в плане работы Codeforces, чему я очень рад. Эти \u003cs\u003eдни\u003c/s\u003e ночи я провел в профайлере, фиксах кода, изучению настроек MariaDB.\u003c/p\u003e\u003cp\u003eКроме этого мне удалось выделить несколько часов в воскресенье (если честно, то до утра понедельника), чтобы закончить давно планируемое нововведение.\u003c/p\u003e\u003cp\u003eВстречайте, диагностика решений на С++!\u003c/p\u003e\u003cp\u003eПостоянные посетители Codeforces уже устали от вопросов менее опытных участников: «Почему моё решение не работает на тесте на серверах Codeforces, если локально я его запускаю, и оно работает? У вас неправильный компилятор/серверы!» В 99% случаях это пример \u003ca href\u003d\"https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D0%BE%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5\"\u003eнеопределённого поведения\u003c/a\u003e в программе. Иначе говоря, программа содержит ошибки, которые в силу ряда обстоятельств не воспроизводятся при локальном запуске, но воспроизводятся при запуске на серверах Codeforces.\u003c/p\u003e\u003cp\u003eИногда, это непросто заметить подобную ошибку. Небольшой выход за границу массива может приводить и к неправильному ответу на тесте и к ошибке выполнения программы.\u003c/p\u003e\u003cp\u003eВ g++/clang++ есть замечательная штука sanitizers (переводится как «дезинфицирующее средство»). Это такие способы скомпилировать программу в особом режиме так, что при своей работе она будет проверять свой ход выполнения на неопределенное поведение (и некоторые другие ошибки) и в случае возникновения выдавать их в stderr. Похожей функциональностью обладает и drmemory (некоторый аналог valgrind, но для Windows), который для определения ошибок запускает программу в особом режиме. При таких диагностических запусках колоссально страдает производительность выполнения программы (программа выполняется медленнее в 5-100 раз и требует больше памяти), но зачастую оно того стоит.\u003c/p\u003e\u003cp\u003eТеперь автоматическая диагностика в некоторых случаях предотвратит вопрос вида «Почему не работает???», указав на ошибку или её вид!\u003c/p\u003e\u003cp\u003eЕсли ваше решение:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eнаписано на C++,\u003c/li\u003e   \u003cli\u003eупало с вердиктом «неправильный ответ» или «ошибка исполнения»,\u003c/li\u003e   \u003cli\u003eна этом тесте отработало предельно быстро и съело мало памяти,\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eто оно будет перезапущено, используя специальные диагностические компиляторы (clang++ c sanitizers и g++ с drmemory). Если при таком запуске произойдет ошибка исполнения, то журнал запуска будет отображен в деталях тестирования в разделе «диагностика». Конечно, эта запись будет содержать технический лог на английском языке, но зачастую он укажет вам на ошибку программы. Часто он содержит причину падения программы и даже строку исполнения. Если диагностика не отображается, значит хотя бы одно условие выше не выполнилось или диагностика не обнаружила ошибок.\u003c/p\u003e \u003ccenter\u003e \u003cimg src\u003d\"/predownloaded/60/04/60046db7e8178eb7da73fc5c2e8eaca2f7ac9e7f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e\u003csmall\u003eПример отображения диагностики:  здесь написано, что произошел выход за границу массива в 78 строке.\u003c/small\u003e \u003c/center\u003e\u003cp\u003e\u003ci\u003eТаким образом, диагностика будет иногда помогать найти вам ошибку вида \u0026quot;выход за границу массива\u0026quot;, \u0026quot;знаковое переполнение\u0026quot;, \u0026quot;неинициализированная переменная на стеке\u0026quot; и т.п. Внимательно читайте диагностику и не допускайте подобных ошибок в будущем!\u003c/i\u003e\u003c/p\u003e\u003cp\u003eЖелаю, чтобы ваши программы не падали. Надеюсь, нововведение будет полезно!\u003c/p\u003e\u003cp\u003eЕсть большие планы как полезно применять такую диагностику. Не уходите далеко, ждите новостей, скоро будут еще нововведения! \u003c/p\u003e\u003cp\u003eP.S. Так же диагностические компиляторы просто доступны для использования. Например, их можно использовать на вкладке «Запуск». Напоминаю, что программа работает многократно медленнее и потребляет больше памяти в режиме диагностики.\u003c/p\u003e\u003c/div\u003e","tags":["codeforces","с++","cpp","диагностика"]}}