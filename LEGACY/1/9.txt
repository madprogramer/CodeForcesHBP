{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1508369593,"rating":425,"authorHandle":"-Morass-","modificationTimeSeconds":1512086330,"id":55274,"title":"\u003cp\u003eProblem Topics\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGood Day to you!\u003c/p\u003e\u003cp\u003eI\u0027ve been asked to make some topic-wise list of problems I\u0027ve solved. Even though I couldn\u0027t involve all problems, I\u0027ve tried to involve at least \u0026quot;few\u0026quot; problems at each topic I thought up (I\u0027m sorry if I forgot about something \u0026quot;easy\u0026quot;). I\u0027ve alredy made such list once anyway I\u0027ve tried to include more problems now — so here it is:\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eaho\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAJOBS/\"\u003ehttp://www.spoj.com/problems/ADAJOBS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUB_PROB/en/\"\u003ehttp://www.spoj.com/problems/SUB_PROB/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/696/problem/D\"\u003ehttp://codeforces.com/contest/696/problem/D\u003c/a\u003e 8\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AHOCUR/\"\u003ehttp://www.spoj.com/problems/AHOCUR/\u003c/a\u003e 5 //Aho-Corassic + DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/LYRC\"\u003ehttps://www.codechef.com/problems/LYRC\u003c/a\u003e (5) //Sample aho-brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/346/B\"\u003ehttp://codeforces.com/problemset/problem/346/B\u003c/a\u003e //Proposed by \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/bradyawn\" title\u003d\"Pupil bradyawn\"\u003ebradyawn\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eautomat\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e6861 [LA] //CYK\u003c/p\u003e\u003cp\u003eUVA 10679 //Suffix Automat\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STRMATCH/\"\u003ehttp://www.spoj.com/problems/STRMATCH/\u003c/a\u003e //Suffix Automat — trie might do too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NSUBSTR2/\"\u003ehttp://www.spoj.com/problems/NSUBSTR2/\u003c/a\u003e //Suffix Automaton\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebelman-ford\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 12519\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ARBITRAG/\"\u003ehttp://www.spoj.com/problems/ARBITRAG/\u003c/a\u003e (4) //Or Floyd-Warshall\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebfs\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACYCLE/\"\u003ehttp://www.spoj.com/problems/ADACYCLE/\u003c/a\u003e [FW]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/60\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/60\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/150\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/150\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11312 UVA (3)\u003c/p\u003e\u003cp\u003e11392 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/653/problem/E\"\u003ehttp://codeforces.com/contest/653/problem/E\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/769/problem/C\"\u003ehttp://codeforces.com/contest/769/problem/C\u003c/a\u003e 5 //FL:ODD/**** | bfs+greed NICE\u003c/p\u003e\u003cp\u003e10968 UVA (3) //EASY + NICE (bfs withot \u0026lt;\u003d2 nodes)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/796/problem/D\"\u003ehttp://codeforces.com/contest/796/problem/D\u003c/a\u003e (3) //NICE+EASY ... print visited in bfs (not par)\u003c/p\u003e\u003cp\u003e10888 UVA (4) //VERY NICE — but not main technique ... ++ DP /or/ MCMF\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/821/problem/D\"\u003ehttp://codeforces.com/contest/821/problem/D\u003c/a\u003e (5) //VERY NICE — Consider only points not GRID\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIGOKEYS/\"\u003ehttp://www.spoj.com/problems/DIGOKEYS/\u003c/a\u003e (4) //Easy [Nice problem — weird statement]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPIKES/\"\u003ehttp://www.spoj.com/problems/SPIKES/\u003c/a\u003e (3) //Easy bfs (# of \u0027s\u0027 * 2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MULTII/\"\u003ehttp://www.spoj.com/problems/MULTII/\u003c/a\u003e (4) //VERY NICE: BFS over numbers (K*10+d)%N\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADV04F1/\"\u003ehttp://www.spoj.com/problems/ADV04F1/\u003c/a\u003e (5) //VERY NICE: [imple] ~ N^4*BigConstant\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INVESORT/\"\u003ehttp://www.spoj.com/problems/INVESORT/\u003c/a\u003e (5) //Big limit (really usefull :P)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/59/problem/E\"\u003ehttp://codeforces.com/contest/59/problem/E\u003c/a\u003e (5) //[NICE][DOUBLE-STATES][SET]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/877/problem/D\"\u003ehttp://codeforces.com/contest/877/problem/D\u003c/a\u003e (4) //[NICE] Add vector to # of states\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebfs-grid\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e10977 UVA (3)\u003c/p\u003e\u003cp\u003e928 UVA (3)\u003c/p\u003e\u003cp\u003e13116 UVA (4)\u003c/p\u003e\u003cp\u003e314 UVA (3)\u003c/p\u003e\u003cp\u003e11487 UVA (4)\u003c/p\u003e\u003cp\u003e5622 LA (7)\u003c/p\u003e\u003cp\u003e11931 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KNMOVE/\"\u003ehttp://www.spoj.com/problems/KNMOVE/\u003c/a\u003e 3 //simple knights\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SERGRID/\"\u003ehttp://www.spoj.com/problems/SERGRID/\u003c/a\u003e 3 //almost classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAKANJ/\"\u003ehttp://www.spoj.com/problems/NAKANJ/\u003c/a\u003e 3 //Classical chess — KNIGHT\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PUCMM223/\"\u003ehttp://www.spoj.com/problems/PUCMM223/\u003c/a\u003e (4) //NICE (but not many languages) — 2 moving [x][y]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPIRALGR/\"\u003ehttp://www.spoj.com/problems/SPIRALGR/\u003c/a\u003e (4) //NICE (not typical) [SIEVE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC706/\"\u003ehttp://www.spoj.com/problems/DCEPC706/\u003c/a\u003e (4) //NICE — travelling outside\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/35/problem/C\"\u003ehttp://codeforces.com/contest/35/problem/C\u003c/a\u003e (3) //No obstacles [multiple starts]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebig\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/394\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/394\u003c/a\u003e (2) //Multiplication (or math)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/66/problem/A\"\u003ehttp://codeforces.com/contest/66/problem/A\u003c/a\u003e (2) //Big + iffs + implementation\u003c/p\u003e\u003cp\u003eUVA — 10183 \u003c/p\u003e\u003cp\u003e10106 — Product [UVA]\u003c/p\u003e\u003cp\u003e10523 — Very Easy !!! [UVA]\u003c/p\u003e\u003cp\u003e787 — Maximum Sub-sequence Product [UVA]\u003c/p\u003e\u003cp\u003e2871 — Rhyme Schemes [LA][BELL]\u003c/p\u003e\u003cp\u003eUVA — 10497\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MUL/en/\"\u003ehttp://www.spoj.com/problems/MUL/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ITRIX_E/\"\u003ehttp://www.spoj.com/problems/ITRIX_E/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11115 — Uncle Jack\u003c/p\u003e\u003cp\u003e11448 — Who said crisis? [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCD2/\"\u003ehttp://www.spoj.com/problems/GCD2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10083 — Division [UVA]\u003c/p\u003e\u003cp\u003e11830 — Contract Revision [UVA]\u003c/p\u003e\u003cp\u003e1230 — MODEX [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NUMPLAY/\"\u003ehttp://www.spoj.com/problems/NUMPLAY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10519 — UVA\u003c/p\u003e\u003cp\u003e7651 — Pascal\u0027s Hyper-Pyramids [LA]\u003c/p\u003e\u003cp\u003e11344 — The Huge One [UVA]\u003c/p\u003e\u003cp\u003e10303 — How Many Trees? [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FAST2/\"\u003ehttp://www.spoj.com/problems/FAST2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e495 — Fibonacci Freeze [UVA]\u003c/p\u003e\u003cp\u003e10023 — Square root [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SKYLINE/\"\u003ehttp://www.spoj.com/problems/SKYLINE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NITT2/\"\u003ehttp://www.spoj.com/problems/NITT2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11879 — Multiple of 17\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MINNUM/\"\u003ehttp://www.spoj.com/problems/MINNUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10494 — If We Were a Child Again [UVA]\u003c/p\u003e\u003cp\u003e10013 — Super long sums [UVA]\u003c/p\u003e\u003cp\u003e10925 — Krakovia [UVA]\u003c/p\u003e\u003cp\u003e10814 — Simplifying Fractions [UVA]\u003c/p\u003e\u003cp\u003e619 — Numerically Speaking [UVA]\u003c/p\u003e\u003cp\u003e713 — Adding Reversed Numbers [UVA]\u003c/p\u003e\u003cp\u003e1226 — Numerical surprises [UVA]\u003c/p\u003e\u003cp\u003e623 — 500! [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/18/D\"\u003ehttp://codeforces.com/problemset/problem/18/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NUMTSN/\"\u003ehttp://www.spoj.com/problems/NUMTSN/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/FRJUMP\"\u003ehttps://www.codechef.com/problems/FRJUMP\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10220 — I Love Big Numbers ! [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/projecteuler/challenges/euler025\"\u003ehttps://www.hackerrank.com/contests/projecteuler/challenges/euler025\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/projecteuler/challenges/euler020\"\u003ehttps://www.hackerrank.com/contests/projecteuler/challenges/euler020\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11645 UVA 4\u003c/p\u003e\u003cp\u003eGym — 100866A [ACM ICPC 2005–2006 NEERC Moscow Subregional Contest]\u003c/p\u003e\u003cp\u003eCSQUARE [SPOJ]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PARCARD1/\"\u003ehttp://www.spoj.com/problems/PARCARD1/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10070 — Leap Year or Not Leap Year and .. [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SOLDIERS/\"\u003ehttp://www.spoj.com/problems/SOLDIERS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12333 — Revenge of Fibonacci [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDIVPHI/\"\u003ehttp://www.spoj.com/problems/NDIVPHI/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IWGBS/\"\u003ehttp://www.spoj.com/problems/IWGBS/\u003c/a\u003e [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POP3/\"\u003ehttp://www.spoj.com/problems/POP3/\u003c/a\u003e [Prime-Test]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VGCD/\"\u003ehttp://www.spoj.com/problems/VGCD/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDIVPHI2/\"\u003ehttp://www.spoj.com/problems/NDIVPHI2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12924 — Immortal Rabbits [UVA]\u003c/p\u003e\u003cp\u003eCount the Trees [UVA][10007]\u003c/p\u003e\u003cp\u003e10198 — Counting [UVA]\u003c/p\u003e\u003cp\u003e11375 UVA 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MINNUM/\"\u003ehttp://www.spoj.com/problems/MINNUM/\u003c/a\u003e 3 // BIG/9+!!(BIG%9)\u003c/p\u003e\u003cp\u003e10844 UVA 4 //Bell numbers + big (might be slightly slow!)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NITT2/\"\u003ehttp://www.spoj.com/problems/NITT2/\u003c/a\u003e 2 //Divisibility by two constants\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NUMPLAY/\"\u003ehttp://www.spoj.com/problems/NUMPLAY/\u003c/a\u003e (3) //With DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IWGBS/\"\u003ehttp://www.spoj.com/problems/IWGBS/\u003c/a\u003e (3) //Fibonacci 10^4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PUCMM025/\"\u003ehttp://www.spoj.com/problems/PUCMM025/\u003c/a\u003e (2) //Divisibility by 1 → 9\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CSQUARE/\"\u003ehttp://www.spoj.com/problems/CSQUARE/\u003c/a\u003e (3) //Converse + Power \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/17/problem/D\"\u003ehttp://codeforces.com/contest/17/problem/D\u003c/a\u003e (5) //B^(N-1)*(B-1)%C [B/N are big]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebinary_search\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/888/problem/C\"\u003ehttp://codeforces.com/contest/888/problem/C\u003c/a\u003e (3) //Can be done without BS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/68/problem/B\"\u003ehttp://codeforces.com/contest/68/problem/B\u003c/a\u003e (3) //[EASY][DOUBLE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/42/problem/A\"\u003ehttp://codeforces.com/contest/42/problem/A\u003c/a\u003e (2) //Or simple math\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/883/problem/I\"\u003ehttp://codeforces.com/contest/883/problem/I\u003c/a\u003e (4) //[NICE][SET][2Pointers]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/51/problem/C\"\u003ehttp://codeforces.com/contest/51/problem/C\u003c/a\u003e (4) //[NICE][GREEDY-CHECK]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/729/problem/C\"\u003ehttp://codeforces.com/contest/729/problem/C\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/714/problem/D\"\u003ehttp://codeforces.com/contest/714/problem/D\u003c/a\u003e 8\u003c/p\u003e\u003cp\u003e13150 (UVA) 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/749/problem/D\"\u003ehttp://codeforces.com/contest/749/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e11692 (UVA) 4\u003c/p\u003e\u003cp\u003e11516 (UVA) 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/760/problem/B\"\u003ehttp://codeforces.com/contest/760/problem/B\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/675/problem/D\"\u003ehttp://codeforces.com/contest/675/problem/D\u003c/a\u003e 4 //dunno — solvable with treap\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDS/\"\u003ehttp://www.spoj.com/problems/NDS/\u003c/a\u003e 4 //BS over LIS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VECTAR4/\"\u003ehttp://www.spoj.com/problems/VECTAR4/\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/767/problem/D\"\u003ehttp://codeforces.com/contest/767/problem/D\u003c/a\u003e 4 //NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/627/problem/D\"\u003ehttp://codeforces.com/contest/627/problem/D\u003c/a\u003e (7) //with dp — NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/779/problem/D\"\u003ehttp://codeforces.com/contest/779/problem/D\u003c/a\u003e (3) //NICE + EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CNTINDX/\"\u003ehttp://www.spoj.com/problems/CNTINDX/\u003c/a\u003e (4) //Map+BS \u003d\u003d\u003d OK\u003c/p\u003e\u003cp\u003e13177 UVA (3) //BS over answer \u003d\u003d OK\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/801/problem/C\"\u003ehttp://codeforces.com/contest/801/problem/C\u003c/a\u003e (3) //BS + SUM -EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/803/problem/D\"\u003ehttp://codeforces.com/contest/803/problem/D\u003c/a\u003e (3) //BS by answer\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/807/problem/C\"\u003ehttp://codeforces.com/contest/807/problem/C\u003c/a\u003e (3) //Or math\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/F\"\u003ehttp://codeforces.com/contest/818/problem/F\u003c/a\u003e (4) //NICE — Live VS Clique\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/845/problem/E\"\u003ehttp://codeforces.com/contest/845/problem/E\u003c/a\u003e (5) //VERY NICE — min(X,Y) .. add time, repeat\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MATHLOVE/\"\u003ehttp://www.spoj.com/problems/MATHLOVE/\u003c/a\u003e (2) //BS + Gaus (or otter ways)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SABBIRGAME/\"\u003ehttp://www.spoj.com/problems/SABBIRGAME/\u003c/a\u003e (3) //Binary search over answer ::max(0,ANS)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/846/problem/D\"\u003ehttp://codeforces.com/contest/846/problem/D\u003c/a\u003e (4) //BS+Precalculation OR 2D-RMQ\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RPLC/\"\u003ehttp://www.spoj.com/problems/RPLC/\u003c/a\u003e (3) //Classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TRIGALGE/\"\u003ehttp://www.spoj.com/problems/TRIGALGE/\u003c/a\u003e (2) //On doubles — simple function given\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ABA12E/\"\u003ehttp://www.spoj.com/problems/ABA12E/\u003c/a\u003e (4) //VERY NICE — BS on answer + 2Pointers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/E\"\u003ehttp://codeforces.com/contest/847/problem/E\u003c/a\u003e (4) //NICE: Back+Front OR Front+Back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN8_C/\"\u003ehttp://www.spoj.com/problems/MAIN8_C/\u003c/a\u003e (3) //Classical — simultion over array\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FUNFACT/\"\u003ehttp://www.spoj.com/problems/FUNFACT/\u003c/a\u003e (4) //VERY NICE — Sterling Approximation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/16/problem/C\"\u003ehttp://codeforces.com/contest/16/problem/C\u003c/a\u003e (3) //[or math][simple formula check]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/21/problem/C\"\u003ehttp://codeforces.com/contest/21/problem/C\u003c/a\u003e (3) //[NICE][prefix-sum+lower_bound]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/24/problem/E\"\u003ehttp://codeforces.com/contest/24/problem/E\u003c/a\u003e (5) //[doubles]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/875/problem/E\"\u003ehttp://codeforces.com/contest/875/problem/E\u003c/a\u003e (6) //VERY NICE [BS][Keep possible places]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebits\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/C\"\u003ehttp://codeforces.com/contest/879/problem/C\u003c/a\u003e (3) //[NICE] one of each operation is enough\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/92/problem/B\"\u003ehttp://codeforces.com/contest/92/problem/B\u003c/a\u003e (2) //Bit addition/shifting (but big number)\u003c/p\u003e\u003cp\u003e11659 UVA (4)\u003c/p\u003e\u003cp\u003e11535 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/779/problem/E\"\u003ehttp://codeforces.com/contest/779/problem/E\u003c/a\u003e (5) //NICE + Parsing\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_CONB/\"\u003ehttp://www.spoj.com/problems/EC_CONB/\u003c/a\u003e (1) //reverse numbers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/769/problem/D\"\u003ehttp://codeforces.com/contest/769/problem/D\u003c/a\u003e (4) //freq + brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HAP01/\"\u003ehttp://www.spoj.com/problems/HAP01/\u003c/a\u003e (2) //builtin_popcount\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/862/problem/C\"\u003ehttp://codeforces.com/contest/862/problem/C\u003c/a\u003e (3) //VERY NICE — Random works well\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOMPICI/\"\u003ehttp://www.spoj.com/problems/KOMPICI/\u003c/a\u003e (4) //NICE — Bitmask over digits\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebitset\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACOINS/\"\u003ehttp://www.spoj.com/problems/ADACOINS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACHERY/\"\u003ehttp://www.spoj.com/problems/ADACHERY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFUROW/\"\u003ehttp://www.spoj.com/problems/ADAFUROW/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/754/problem/E\"\u003ehttp://codeforces.com/contest/754/problem/E\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UCBINTC/\"\u003ehttp://www.spoj.com/problems/UCBINTC/\u003c/a\u003e 5 //polymul with bitset\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/33/problem/D\"\u003ehttp://codeforces.com/contest/33/problem/D\u003c/a\u003e (4) //VERY NICE [LCA works too]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebridges\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e315 — Network\u003c/p\u003e\u003cp\u003e796 — Critical Links\u003c/p\u003e\u003cp\u003eUVA 12363\u003c/p\u003e\u003cp\u003eGym 100114J [2012-2013 ACM-ICPC, NEERC, Central Subregional Contest]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ONBRIDGE/\"\u003ehttp://www.spoj.com/problems/ONBRIDGE/\u003c/a\u003e [ONLINE][HARD][NICE][D\u0026amp;C]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/732/problem/F\"\u003ehttp://codeforces.com/contest/732/problem/F\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/700/problem/C\"\u003ehttp://codeforces.com/contest/700/problem/C\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_P/\"\u003ehttp://www.spoj.com/problems/EC_P/\u003c/a\u003e (3) //bridges ONLY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBMERGE/\"\u003ehttp://www.spoj.com/problems/SUBMERGE/\u003c/a\u003e (3) //Direct articulation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GRAFFDEF/\"\u003ehttp://www.spoj.com/problems/GRAFFDEF/\u003c/a\u003e (5) //Bridge tree\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ebrute-force\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/106/problem/B\"\u003ehttp://codeforces.com/contest/106/problem/B\u003c/a\u003e (2) //Cycles -_-\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/895/problem/A\"\u003ehttp://codeforces.com/contest/895/problem/A\u003c/a\u003e (2) //All segments [in circle]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/B\"\u003ehttp://codeforces.com/contest/893/problem/B\u003c/a\u003e (2) //Try each divisor\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/894/problem/A\"\u003ehttp://codeforces.com/contest/894/problem/A\u003c/a\u003e (1) //3-cycles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/892/problem/C\"\u003ehttp://codeforces.com/contest/892/problem/C\u003c/a\u003e (3) //Try to find \u0026quot;1\u0026quot; ASAP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/102/problem/A\"\u003ehttp://codeforces.com/contest/102/problem/A\u003c/a\u003e (2) //Iterate over all triples\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/96/problem/B\"\u003ehttp://codeforces.com/contest/96/problem/B\u003c/a\u003e (2) //Check all\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/94/problem/B\"\u003ehttp://codeforces.com/contest/94/problem/B\u003c/a\u003e (1) //3cycles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/887/problem/B\"\u003ehttp://codeforces.com/contest/887/problem/B\u003c/a\u003e (3) //Test all numbers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101597/problem/A\"\u003ehttp://codeforces.com/gym/101597/problem/A\u003c/a\u003e (4) //[MATH][MODULO][SIMULATION]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/68/problem/C\"\u003ehttp://codeforces.com/contest/68/problem/C\u003c/a\u003e (5) //[VERY NICE][RECURSION][MAX COST MIN FLOW]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/68/problem/A\"\u003ehttp://codeforces.com/contest/68/problem/A\u003c/a\u003e (1) //Simple simulation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/66/problem/B\"\u003ehttp://codeforces.com/contest/66/problem/B\u003c/a\u003e (2) //Test always whole platform\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/C\"\u003ehttp://codeforces.com/contest/879/problem/C\u003c/a\u003e (3) //[NICE] one of each operation is enough\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/46/problem/C\"\u003ehttp://codeforces.com/contest/46/problem/C\u003c/a\u003e (2) //[2pointers][N^2 works too]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/47/problem/D\"\u003ehttp://codeforces.com/contest/47/problem/D\u003c/a\u003e (4) //[Implementation][DFS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/51/problem/D\"\u003ehttp://codeforces.com/contest/51/problem/D\u003c/a\u003e (4) //Check all/check without 1s/2nd\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_b\"\u003ehttp://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_b\u003c/a\u003e (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/53/problem/B\"\u003ehttp://codeforces.com/contest/53/problem/B\u003c/a\u003e (3) //at most 60 possibilities\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/55/problem/B\"\u003ehttp://codeforces.com/contest/55/problem/B\u003c/a\u003e (3) //Try all permutations \u0026amp; possibilities [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/877/problem/B\"\u003ehttp://codeforces.com/contest/877/problem/B\u003c/a\u003e (3) //NICE [N^2][PrefixSum]\u003c/p\u003e\u003cp\u003eLA 6623 — Battle for Silver (3) //4 for-cycles inside ~ K4 search\u003c/p\u003e\u003cp\u003eUVA 12169 (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/725/problem/C\"\u003ehttp://codeforces.com/contest/725/problem/C\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/725/problem/E\"\u003ehttp://codeforces.com/contest/725/problem/E\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/724/problem/B\"\u003ehttp://codeforces.com/contest/724/problem/B\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e11961 UVA (2)\u003c/p\u003e\u003cp\u003e11898 UVA (4)\u003c/p\u003e\u003cp\u003e11659 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/753/problem/C\"\u003ehttp://codeforces.com/contest/753/problem/C\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e11699 UVA (4)\u003c/p\u003e\u003cp\u003e11548 UVA (3)\u003c/p\u003e\u003cp\u003e11471 UVA (5) //With dynamic programming\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/698/problem/D\"\u003ehttp://codeforces.com/contest/698/problem/D\u003c/a\u003e 8 //with geometry\u003c/p\u003e\u003cp\u003e11206 UVA (6) //4^20 (but somehow passes)\u003c/p\u003e\u003cp\u003e11214 UVA (6) //Úvaha + pruning\u003c/p\u003e\u003cp\u003e11127 UVA (4) //Simple dfs [just realize you can do so]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BOKAM143SOU/\"\u003ehttp://www.spoj.com/problems/BOKAM143SOU/\u003c/a\u003e (3) //just implement for-cycles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BLOPER/\"\u003ehttp://www.spoj.com/problems/BLOPER/\u003c/a\u003e (4) dfs with little pruning\u003c/p\u003e\u003cp\u003e13173 UVA (3) //just brute-force + branching\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/799/problem/D\"\u003ehttp://codeforces.com/contest/799/problem/D\u003c/a\u003e (4) //VERY NICE [only top 34 needed] — trick with 2 [~20]\u003c/p\u003e\u003cp\u003e10890 UVA (4) //Simple brute-force times out, but with simple pruning AC (answer detection\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/813/problem/B\"\u003ehttp://codeforces.com/contest/813/problem/B\u003c/a\u003e (3) //All*All (BF) care for overflow! NICE \u0026amp; EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/C\"\u003ehttp://codeforces.com/contest/817/problem/C\u003c/a\u003e (3) //Check S+Constant (NICE!)\u003c/p\u003e\u003cp\u003e10732 UVA (2) //Brute-force passes .. just don\u0027t trust them O(N^2)\u003c/p\u003e\u003cp\u003e10748 UVA (5) //VERY Nice (knights have K^2 moves not 8^K)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/D\"\u003ehttp://codeforces.com/contest/818/problem/D\u003c/a\u003e (4) //NICE for each \u0027A\u0027 check all remaining (max SQRT)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/834/problem/E\"\u003ehttp://codeforces.com/contest/834/problem/E\u003c/a\u003e (5) //NICE — hard to imple: all 11122...999 OK\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JHAGIRLS/\"\u003ehttp://www.spoj.com/problems/JHAGIRLS/\u003c/a\u003e (4) //Efficient — or store output in array\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/846/problem/B\"\u003ehttp://codeforces.com/contest/846/problem/B\u003c/a\u003e (3) //Brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ALONE/\"\u003ehttp://www.spoj.com/problems/ALONE/\u003c/a\u003e (4) //Generate everything \u0026lt;10^15 [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/861/problem/B\"\u003ehttp://codeforces.com/contest/861/problem/B\u003c/a\u003e (3) //Check all floor-sizes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RRANGE/\"\u003ehttp://www.spoj.com/problems/RRANGE/\u003c/a\u003e (3) //Compare all queries agains all updates + GAUSS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/598/problem/B\"\u003ehttp://codeforces.com/contest/598/problem/B\u003c/a\u003e (3) //Treap works too ;-)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR10I/\"\u003ehttp://www.spoj.com/problems/AMR10I/\u003c/a\u003e (4) //Can be solved with brute-force with dp\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/868/problem/C\"\u003ehttp://codeforces.com/contest/868/problem/C\u003c/a\u003e (4) //Brute-force (fixet at most 6 each bits)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/868/problem/D\"\u003ehttp://codeforces.com/contest/868/problem/D\u003c/a\u003e (5) //NICE: Maximal K is low (I assumed 15)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/31/problem/C\"\u003ehttp://codeforces.com/contest/31/problem/C\u003c/a\u003e (2) //LOW-Constaints: N^2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/32/problem/D\"\u003ehttp://codeforces.com/contest/32/problem/D\u003c/a\u003e (3) //Simply try all possibilities\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/876/problem/C\"\u003ehttp://codeforces.com/contest/876/problem/C\u003c/a\u003e (3) //Try N and ~100 lower\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/44/problem/B\"\u003ehttp://codeforces.com/contest/44/problem/B\u003c/a\u003e (2) //N^2 works fine\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecentroid\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDCP-176: Motku2 [DevSkills] \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/715/problem/C\"\u003ehttp://codeforces.com/contest/715/problem/C\u003c/a\u003e 9\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/741/problem/D\"\u003ehttp://codeforces.com/contest/741/problem/D\u003c/a\u003e 8\u003c/p\u003e\u003cp\u003e13164 UVA (7)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/752/problem/F\"\u003ehttp://codeforces.com/contest/752/problem/F\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/766/problem/E\"\u003ehttp://codeforces.com/contest/766/problem/E\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/833/problem/D\"\u003ehttp://codeforces.com/contest/833/problem/D\u003c/a\u003e 7 //Very nice — hard (thinking + imple) + FW\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HOLI/\"\u003ehttp://www.spoj.com/problems/HOLI/\u003c/a\u003e (4) //VERY NICE: 2*Distances from centroids \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecoloring\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/741/problem/C\"\u003ehttp://codeforces.com/contest/741/problem/C\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e11331 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/664/problem/D\"\u003ehttp://codeforces.com/contest/664/problem/D\u003c/a\u003e 4\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecombinatorics\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATEAMS/\"\u003ehttp://www.spoj.com/problems/ADATEAMS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASUM/\"\u003ehttp://www.spoj.com/problems/ADASUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/895/problem/D\"\u003ehttp://codeforces.com/contest/895/problem/D\u003c/a\u003e (4) //[COMB-NUMBERS][OPTI]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/E\"\u003ehttp://codeforces.com/contest/893/problem/E\u003c/a\u003e (5) //[COMB-NUMBERS][NUMBER-THEORY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/894/problem/B\"\u003ehttp://codeforces.com/contest/894/problem/B\u003c/a\u003e (3) //try without last row\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/890/problem/E\"\u003ehttp://codeforces.com/contest/890/problem/E\u003c/a\u003e (6) //Permutations\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/52/problem/B\"\u003ehttp://codeforces.com/contest/52/problem/B\u003c/a\u003e (4) //[NICE][PREPROCESS][ROTATION]\u003c/p\u003e\u003cp\u003e3917 //Grid tiling [fancy approximation fomula]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/760/problem/F\"\u003ehttp://codeforces.com/contest/760/problem/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/61\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/61\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/255\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/255\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10918\u003c/p\u003e\u003cp\u003eUVA 12576\u003c/p\u003e\u003cp\u003eUVA 1118 //Parity\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HLP_RAMS/\"\u003ehttp://www.spoj.com/problems/HLP_RAMS/\u003c/a\u003e //Comb parity\u003c/p\u003e\u003cp\u003eProject Euler #78: Coin partitions //Partition function\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN75/\"\u003ehttp://www.spoj.com/problems/MAIN75/\u003c/a\u003e //DP #of trees\u003c/p\u003e\u003cp\u003e12001 UVA (3)\u003c/p\u003e\u003cp\u003e12034 UVA (4)\u003c/p\u003e\u003cp\u003e11719 UVA (5)\u003c/p\u003e\u003cp\u003e11798 UVA (5)\u003c/p\u003e\u003cp\u003e11282 UVA (4) //dearrangement\u003c/p\u003e\u003cp\u003e11174 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/666/problem/C\"\u003ehttp://codeforces.com/contest/666/problem/C\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JOKER1/\"\u003ehttp://www.spoj.com/problems/JOKER1/\u003c/a\u003e 3 prod(Ai-i)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ANTP/\"\u003ehttp://www.spoj.com/problems/ANTP/\u003c/a\u003e //4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/645/problem/E\"\u003ehttp://codeforces.com/contest/645/problem/E\u003c/a\u003e (5) //formula: A[i]\u003dSum(A)+1\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPCE/\"\u003ehttp://www.spoj.com/problems/SPCE/\u003c/a\u003e (5) // N^{K-2}*Prod(comp_size)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/785/problem/D\"\u003ehttp://codeforces.com/contest/785/problem/D\u003c/a\u003e (5) // F\u0027(\u0027 C\u0026quot;(+)-1\u0026quot;,\u0026quot;(\u0026quot;\u003c/p\u003e\u003cp\u003e13184 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/816/problem/D\"\u003ehttp://codeforces.com/contest/816/problem/D\u003c/a\u003e (5) // Observation\u003c/p\u003e\u003cp\u003e13214 (4) //OEIS? : C(N+M-2,N-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/844/problem/B\"\u003ehttp://codeforces.com/contest/844/problem/B\u003c/a\u003e (2) //Easy — pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JOSWAP/\"\u003ehttp://www.spoj.com/problems/JOSWAP/\u003c/a\u003e (3) //Frequence array\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UCV2013E/\"\u003ehttp://www.spoj.com/problems/UCV2013E/\u003c/a\u003e (4) //NICE\u0026amp;EASY: Choose steps to direction\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PARCARD1/\"\u003ehttp://www.spoj.com/problems/PARCARD1/\u003c/a\u003e (4) //Partition function (raw)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GOODB/\"\u003ehttp://www.spoj.com/problems/GOODB/\u003c/a\u003e (2) //Easy (NICE): Choose [order]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LOOPEXP/\"\u003ehttp://www.spoj.com/problems/LOOPEXP/\u003c/a\u003e (4) //A000254/N!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DTPOLY/\"\u003ehttp://www.spoj.com/problems/DTPOLY/\u003c/a\u003e (5) //DP might work too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DTPOLY2/\"\u003ehttp://www.spoj.com/problems/DTPOLY2/\u003c/a\u003e (7) //Harder version of above (NICE but hell)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HC12/\"\u003ehttp://www.spoj.com/problems/HC12/\u003c/a\u003e (3) //NICE — Sort + C(i,K-1)*A[i]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STONE2/\"\u003ehttp://www.spoj.com/problems/STONE2/\u003c/a\u003e (4) //NICE — Mostly DP [INVERSION][FACTORIAL]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN8_D/\"\u003ehttp://www.spoj.com/problems/MAIN8_D/\u003c/a\u003e (5) //NICE — Suffixes/Prefixes (same add 2^i)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ITRIX_E/\"\u003ehttp://www.spoj.com/problems/ITRIX_E/\u003c/a\u003e (4) //VERY NICE — #Nonattacking 2-queens\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAXSUB/\"\u003ehttp://www.spoj.com/problems/MAXSUB/\u003c/a\u003e (3) //NICE — Subsets made of zeroes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SKYLINE/\"\u003ehttp://www.spoj.com/problems/SKYLINE/\u003c/a\u003e (3) //Catalan numbers [weird modulo — care]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/26/problem/D\"\u003ehttp://codeforces.com/contest/26/problem/D\u003c/a\u003e (5) //Division of two combintion numbers [NI:/]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/872/problem/E\"\u003ehttp://codeforces.com/contest/872/problem/E\u003c/a\u003e (6) // Prod:Sum(C(DistLines,CompSize))\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003econstructive\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/894/problem/C\"\u003ehttp://codeforces.com/contest/894/problem/C\u003c/a\u003e (3) //[VERY NICE] //AiAiGCD\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/97/problem/B\"\u003ehttp://codeforces.com/contest/97/problem/B\u003c/a\u003e (4) //NICE — Walls in middles [D\u0026amp;C]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/85/problem/A\"\u003ehttp://codeforces.com/contest/85/problem/A\u003c/a\u003e (3) //MODULO / SHIFT\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/81/problem/D\"\u003ehttp://codeforces.com/contest/81/problem/D\u003c/a\u003e (3) //NICE — MAX(N/2) — even/odd\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/63/problem/D\"\u003ehttp://codeforces.com/contest/63/problem/D\u003c/a\u003e (3) //NICE[GO BY LINES][4 WAYS B/D ODD/EVEN]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/42/problem/C\"\u003ehttp://codeforces.com/contest/42/problem/C\u003c/a\u003e (4) //Constructive works too but random is fine :)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/43/problem/D\"\u003ehttp://codeforces.com/contest/43/problem/D\u003c/a\u003e (3) //NICE — Easy to see [implementation]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/53/problem/C\"\u003ehttp://codeforces.com/contest/53/problem/C\u003c/a\u003e (2) //EASY [B/E Alternate]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/877/problem/C\"\u003ehttp://codeforces.com/contest/877/problem/C\u003c/a\u003e (3) //NICE 3*Alternative\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/H\"\u003ehttp://codeforces.com/contest/802/problem/H\u003c/a\u003e (6) //We can do \u0026quot;N+k\u0026quot; by adding a letter p+k*x+u+xx\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/12/problem/E\"\u003ehttp://codeforces.com/contest/12/problem/E\u003c/a\u003e (5) //g[i][j]\u003d1+(i+j)%(N-1) [+/-]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/22/problem/C\"\u003ehttp://codeforces.com/contest/22/problem/C\u003c/a\u003e (4) //Start and then clique without v (+ random)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/26/problem/C\"\u003ehttp://codeforces.com/contest/26/problem/C\u003c/a\u003e (5) //make Even*Even: do by 2*2 fields\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/41/problem/E\"\u003ehttp://codeforces.com/contest/41/problem/E\u003c/a\u003e (4) //[NICE][CN/2,N/2]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/78/problem/B\"\u003ehttp://codeforces.com/contest/78/problem/B\u003c/a\u003e (2) //NICE — last 3 and then rest in modulo\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edfs\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASEA/\"\u003ehttp://www.spoj.com/problems/ADASEA/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e8080 — Christmas Tree (3) //[SIMPLE][NICE]\u003c/p\u003e\u003cp\u003e6584 — Escape (8) //[VERY VERY VERY NICE][COMPRESSION][MERGING] //Hard but I recommend this one!!\u003c/p\u003e\u003cp\u003e6590 Digraphs (4) //[VERY NICE][CYCLES][DP][IDEA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/C\"\u003ehttp://codeforces.com/contest/893/problem/C\u003c/a\u003e (3) //Minimum from each connected component\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/884/problem/C\"\u003ehttp://codeforces.com/contest/884/problem/C\u003c/a\u003e (3) //[EASY][PERMUTATIONS][SORTING]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/883/problem/G\"\u003ehttp://codeforces.com/contest/883/problem/G\u003c/a\u003e (4) //Greedy picking\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/60/problem/B\"\u003ehttp://codeforces.com/contest/60/problem/B\u003c/a\u003e (3) //3D Flood-Fill [NICE][EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/60/problem/C\"\u003ehttp://codeforces.com/contest/60/problem/C\u003c/a\u003e (4) //[VERY NICE][BF]//Not many real possibilities\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/3\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/3\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/17\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/17\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/118\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/118\u003c/a\u003e //Kind-of\u003c/p\u003e\u003cp\u003e657 — The die is cast [UVA]\u003c/p\u003e\u003cp\u003e12186 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/734/problem/E\"\u003ehttp://codeforces.com/contest/734/problem/E\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/727/problem/A\"\u003ehttp://codeforces.com/contest/727/problem/A\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/723/problem/E\"\u003ehttp://codeforces.com/contest/723/problem/E\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/709/problem/E\"\u003ehttp://codeforces.com/contest/709/problem/E\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/710/problem/E\"\u003ehttp://codeforces.com/contest/710/problem/E\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/758/problem/E\"\u003ehttp://codeforces.com/contest/758/problem/E\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e11323 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/760/problem/B\"\u003ehttp://codeforces.com/contest/760/problem/B\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/761/problem/E\"\u003ehttp://codeforces.com/contest/761/problem/E\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/638/problem/B\"\u003ehttp://codeforces.com/contest/638/problem/B\u003c/a\u003e (3) //connect cons. letters\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/638/problem/C\"\u003ehttp://codeforces.com/contest/638/problem/C\u003c/a\u003e (4) //greedy idea — easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/638/problem/D\"\u003ehttp://codeforces.com/contest/638/problem/D\u003c/a\u003e (5) //spec-DAG articulatin\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/767/problem/C\"\u003ehttp://codeforces.com/contest/767/problem/C\u003c/a\u003e (4) \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/781/problem/C\"\u003ehttp://codeforces.com/contest/781/problem/C\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/794/problem/D\"\u003ehttp://codeforces.com/contest/794/problem/D\u003c/a\u003e (5) //NICE! Right done dfs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/K\"\u003ehttp://codeforces.com/contest/802/problem/K\u003c/a\u003e (5) //Slightly DP-like (NICE) TREE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/813/problem/C\"\u003ehttp://codeforces.com/contest/813/problem/C\u003c/a\u003e (3) //Simply 2 DFS: NICE + EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/841/problem/D\"\u003ehttp://codeforces.com/contest/841/problem/D\u003c/a\u003e (4) //DFS while tracking \u0026quot;next\u0026quot;\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/845/problem/G\"\u003ehttp://codeforces.com/contest/845/problem/G\u003c/a\u003e (5) //Keep track of cycles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/844/problem/E\"\u003ehttp://codeforces.com/contest/844/problem/E\u003c/a\u003e (5) //Post-Order → line, Connect i → N-2: star\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CAC/\"\u003ehttp://www.spoj.com/problems/CAC/\u003c/a\u003e (5) //VERY NICE! — Find all cycles in cactus\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/849/problem/C\"\u003ehttp://codeforces.com/contest/849/problem/C\u003c/a\u003e (3) //State search by gauss\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/846/problem/E\"\u003ehttp://codeforces.com/contest/846/problem/E\u003c/a\u003e (5) //NICE: DFS + some overflow logic\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOZE/\"\u003ehttp://www.spoj.com/problems/KOZE/\u003c/a\u003e (3) //NICE: Floods\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RIOI_2_3/\"\u003ehttp://www.spoj.com/problems/RIOI_2_3/\u003c/a\u003e (4) //DFS /OR/ BFS /OR/ DSU [NICE][EASY][BF]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAKEMAZE/\"\u003ehttp://www.spoj.com/problems/MAKEMAZE/\u003c/a\u003e (3) //EASY — Simple dfs on grid \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/861/problem/F\"\u003ehttp://codeforces.com/contest/861/problem/F\u003c/a\u003e (5) //VERY NICE: Modify dfs tree so it remains connected\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GHOSTS/\"\u003ehttp://www.spoj.com/problems/GHOSTS/\u003c/a\u003e (3) //NICE — must remain dag after each QR\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR10J/\"\u003ehttp://www.spoj.com/problems/AMR10J/\u003c/a\u003e (5) //VERY NICE! — DFS+DP [DAG with cycles]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/24/problem/A\"\u003ehttp://codeforces.com/contest/24/problem/A\u003c/a\u003e (2)//NICE [DFS-ON-CYCLE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/29/problem/C\"\u003ehttp://codeforces.com/contest/29/problem/C\u003c/a\u003e (3) //Find begining/end of line (graph)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/29/problem/D\"\u003ehttp://codeforces.com/contest/29/problem/D\u003c/a\u003e (4) //Tree [implementation][simulation]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edigits\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PR003004/\"\u003ehttp://www.spoj.com/problems/PR003004/\u003c/a\u003e (4) //Simple digits count\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/770/problem/B\"\u003ehttp://codeforces.com/contest/770/problem/B\u003c/a\u003e (3) //max num max digsum\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edijkstra\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATRIP/\"\u003ehttp://www.spoj.com/problems/ADATRIP/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e6583 Subway (5) //[NICE]//Not exactly dijkstra by slightly similar [IMPLEMENTATION]\u003c/p\u003e\u003cp\u003e3850 [LA]\u003c/p\u003e\u003cp\u003eGym 100625D [2013 Benelux Algorithm Programming Contest (BAPC 13)]\u003c/p\u003e\u003cp\u003eUVA 12950\u003c/p\u003e\u003cp\u003eGym 100753A [2015 German Collegiate Programming Contest (GCPC 15) + POI 10-T3]\u003c/p\u003e\u003cp\u003eUVA 13030\u003c/p\u003e\u003cp\u003eUVA 1027\u003c/p\u003e\u003cp\u003eUVA 11377\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/843/D\"\u003ehttp://codeforces.com/problemset/problem/843/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11813 UVA\u003c/p\u003e\u003cp\u003eGym 101242B [2016 ACM-ICPC World Finals] //+DP\u003c/p\u003e\u003cp\u003eGym 100923B [2015 ACM National Contest Romania — Round 1]\u003c/p\u003e\u003cp\u003eUVA 11833\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EZDIJKST/en/\"\u003ehttp://www.spoj.com/problems/EZDIJKST/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLightOJ 1019\u003c/p\u003e\u003cp\u003eUVA 13010 //+TS\u003c/p\u003e\u003cp\u003e2819 [LA]\u003c/p\u003e\u003cp\u003eUVA 12144\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/716/problem/D\"\u003ehttp://codeforces.com/contest/716/problem/D\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e12047 UVA 4\u003c/p\u003e\u003cp\u003e11514 UVA 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/757/problem/F\"\u003ehttp://codeforces.com/contest/757/problem/F\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e11338 UVA (4)\u003c/p\u003e\u003cp\u003e11374 UVA (4)\u003c/p\u003e\u003cp\u003e11097 UVA (4) //Divide to N*1000 nodes and go!\u003c/p\u003e\u003cp\u003e13172 UVA (5) //6*DJ per query + permutations\u003c/p\u003e\u003cp\u003e10816 UVA (4) //Easy Linear-Search by answer + DJ with path\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/827/problem/F\"\u003ehttp://codeforces.com/contest/827/problem/F\u003c/a\u003e 7 //Very nice — Even\u0026amp;Odd \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DELIVER/\"\u003ehttp://www.spoj.com/problems/DELIVER/\u003c/a\u003e (5) //Normalize coordinates + Optimalize\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CCHESS/\"\u003ehttp://www.spoj.com/problems/CCHESS/\u003c/a\u003e (4) //Dijkstra as knight\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edivide_conquer\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1683\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1683\u003c/a\u003e (4) //RAW histogram\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/D\"\u003ehttp://codeforces.com/contest/817/problem/D\u003c/a\u003e (5) //Very nice NlogN\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DYNACON2/\"\u003ehttp://www.spoj.com/problems/DYNACON2/\u003c/a\u003e (8) //Lesser hell — offline Nlog(N) /or/ NlogN^2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/876/problem/F\"\u003ehttp://codeforces.com/contest/876/problem/F\u003c/a\u003e (5) //VERY NICE — Find greatest + next/back functions\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edivisors\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/75/problem/C\"\u003ehttp://codeforces.com/contest/75/problem/C\u003c/a\u003e (3) //[NICE][BS]\u003c/p\u003e\u003cp\u003eLightOJ 1068\u003c/p\u003e\u003cp\u003eLightOJ 1134\u003c/p\u003e\u003cp\u003eProject Euler #95: Amicable chains\u003c/p\u003e\u003cp\u003eNAJ0001 — Divisible Number Sum [SPOJ]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCMSUM/\"\u003ehttp://www.spoj.com/problems/LCMSUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/101hack38/challenges/easy-gcd-1/problem\"\u003ehttps://www.hackerrank.com/contests/101hack38/challenges/easy-gcd-1/problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 13085\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CDRSANJ/\"\u003ehttp://www.spoj.com/problems/CDRSANJ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVSEQ/\"\u003ehttp://www.spoj.com/problems/DIVSEQ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12154\u003c/p\u003e\u003cp\u003eUVA 13058\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_DIVS/\"\u003ehttp://www.spoj.com/problems/EC_DIVS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CHEFKEY\"\u003ehttps://www.codechef.com/problems/CHEFKEY\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/671/C\"\u003ehttp://codeforces.com/problemset/problem/671/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 101411G [2009-2010 ACM-ICPC, NEERC, Western Subregional Contest]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/831/F\"\u003ehttp://codeforces.com/problemset/problem/831/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/839/D\"\u003ehttp://codeforces.com/problemset/problem/839/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12934 — Factorial Division [UVA]\u003c/p\u003e\u003cp\u003eUVA 10880\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PSTR/\"\u003ehttp://www.spoj.com/problems/PSTR/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/27/E\"\u003ehttp://codeforces.com/problemset/problem/27/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e[LA] 3014\u003c/p\u003e\u003cp\u003eUVA 12843\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1164\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1164\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/803/F\"\u003ehttp://codeforces.com/problemset/problem/803/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e10892 — LCM Cardinality\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCDEX/\"\u003ehttp://www.spoj.com/problems/GCDEX/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INVDIV/\"\u003ehttp://www.spoj.com/problems/INVDIV/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e13083 — Yet another GCDSUM //ll\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCF/\"\u003ehttp://www.spoj.com/problems/IITKWPCF/\u003c/a\u003e //ll\u003c/p\u003e\u003cp\u003eUVA 13185\u003c/p\u003e\u003cp\u003eUVA 13194\u003c/p\u003e\u003cp\u003eUVA 11388\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SAS002/\"\u003ehttp://www.spoj.com/problems/SAS002/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12425 — Best Friend\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/703/E\"\u003ehttp://codeforces.com/problemset/problem/703/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/harry-gets-into-infy/\"\u003ehttps://www.hackerearth.com/problem/algorithm/harry-gets-into-infy/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10830 //SUM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVSUM/en/\"\u003ehttp://www.spoj.com/problems/DIVSUM/en/\u003c/a\u003e //SUM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AFS/\"\u003ehttp://www.spoj.com/problems/AFS/\u003c/a\u003e //SUM\u003c/p\u003e\u003cp\u003eUVA 11526 //SUM\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edp\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAZOO/\"\u003ehttp://www.spoj.com/problems/ADAZOO/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASEQEN/\"\u003ehttp://www.spoj.com/problems/ADASEQEN/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAMOLD/\"\u003ehttp://www.spoj.com/problems/ADAMOLD/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASALE/\"\u003ehttp://www.spoj.com/problems/ADASALE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e8078 — Bracket Sequence (4) //[VERY NICE][DP-LINKS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/106/problem/C\"\u003ehttp://codeforces.com/contest/106/problem/C\u003c/a\u003e (3) //[NICE][EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/895/problem/C\"\u003ehttp://codeforces.com/contest/895/problem/C\u003c/a\u003e (4) //[NICE]\u003c/p\u003e\u003cp\u003e8024 Stack Construction (4) //[NICE] Palindromic style — but not exactly\u003c/p\u003e\u003cp\u003e7708 — Cubes (6) //[MATH]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/888/problem/F\"\u003ehttp://codeforces.com/contest/888/problem/F\u003c/a\u003e (6) //[NICE][FLAG]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ACQUIRE/\"\u003ehttp://www.spoj.com/problems/ACQUIRE/\u003c/a\u003e (5) //[NICE][CH-OPT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/319/problem/C\"\u003ehttp://codeforces.com/contest/319/problem/C\u003c/a\u003e (6) //[NICE][CH-OPT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NKLEAVES/\"\u003ehttp://www.spoj.com/problems/NKLEAVES/\u003c/a\u003e (5) //[NICE][DC]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/76/problem/D\"\u003ehttp://codeforces.com/contest/76/problem/D\u003c/a\u003e (4) //[BITS][OVERFLOW]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/73/problem/C\"\u003ehttp://codeforces.com/contest/73/problem/C\u003c/a\u003e (4) //[NICE][EASY][TRY-ALL-LETTERS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/67/problem/C\"\u003ehttp://codeforces.com/contest/67/problem/C\u003c/a\u003e (4) //[NICE][LEAVENSTEIN]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/67/problem/A\"\u003ehttp://codeforces.com/contest/67/problem/A\u003c/a\u003e (3) //[EASY][PRINTING][OTHER POSSIBLE WAYS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/55/problem/D\"\u003ehttp://codeforces.com/contest/55/problem/D\u003c/a\u003e (5) //[NICE][DIGITS][EFFICIENT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/56/problem/D\"\u003ehttp://codeforces.com/contest/56/problem/D\u003c/a\u003e (4) //String modification + printing [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/58/problem/E\"\u003ehttp://codeforces.com/contest/58/problem/E\u003c/a\u003e (6) //[NICE][IMPLEMENTATION]\u003c/p\u003e\u003cp\u003eUVA 12181\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/21\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/21\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/37\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/37\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/71\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/71\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/103\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/103\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/107\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/107\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/115\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/115\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/126\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/126\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/131\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/131\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/134\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/134\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/174\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/174\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/186\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/186\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/201\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/201\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/338\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/338\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/368\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/368\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/392\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/392\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/399\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/399\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-5/challenges/mining\"\u003ehttps://www.hackerrank.com/contests/world-codesprint-5/challenges/mining\u003c/a\u003e //Opti\u003c/p\u003e\u003cp\u003eUVA 12915 //Opti\u003c/p\u003e\u003cp\u003eUVA 12524 //Opti\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/631/E\"\u003ehttp://codeforces.com/problemset/problem/631/E\u003c/a\u003e //CH\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/6\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/6\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/11\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/11\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11552 UVA (3)\u003c/p\u003e\u003cp\u003e12172 UVA (3)\u003c/p\u003e\u003cp\u003e4507 LA (5)\u003c/p\u003e\u003cp\u003e4510 LA (5) [+ geometry]\u003c/p\u003e\u003cp\u003e12181 UVA (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/729/problem/F\"\u003ehttp://codeforces.com/contest/729/problem/F\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/735/problem/E\"\u003ehttp://codeforces.com/contest/735/problem/E\u003c/a\u003e 9\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/731/problem/E\"\u003ehttp://codeforces.com/contest/731/problem/E\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e12030 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/721/problem/E\"\u003ehttp://codeforces.com/contest/721/problem/E\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/742/problem/D\"\u003ehttp://codeforces.com/contest/742/problem/D\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e12040 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/712/problem/D\"\u003ehttp://codeforces.com/contest/712/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e13162 UVA (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/743/problem/E\"\u003ehttp://codeforces.com/contest/743/problem/E\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e11908 UVA (3)\u003c/p\u003e\u003cp\u003e11932 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/745/problem/E\"\u003ehttp://codeforces.com/contest/745/problem/E\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e11806 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/747/problem/F\"\u003ehttp://codeforces.com/contest/747/problem/F\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e11843 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/752/problem/E\"\u003ehttp://codeforces.com/contest/752/problem/E\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/703/problem/E\"\u003ehttp://codeforces.com/contest/703/problem/E\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e11753 UVA (4)\u003c/p\u003e\u003cp\u003e11725 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/722/problem/E\"\u003ehttp://codeforces.com/contest/722/problem/E\u003c/a\u003e (9)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/760/problem/F\"\u003ehttp://codeforces.com/contest/760/problem/F\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e11795 UVA (3)\u003c/p\u003e\u003cp\u003e11654 UVA (4)\u003c/p\u003e\u003cp\u003e11523 UVA (5)\u003c/p\u003e\u003cp\u003e11404 UVA (4)\u003c/p\u003e\u003cp\u003e11432 UVA (4)\u003c/p\u003e\u003cp\u003e11451 UVA (4) //C\u003d\u003d20 mistake in statement\u003c/p\u003e\u003cp\u003e11301 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/762/problem/D\"\u003ehttp://codeforces.com/contest/762/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e11361 UVA (4) //digit DP\u003c/p\u003e\u003cp\u003e11365 UVA (7)\u003c/p\u003e\u003cp\u003e11391 UVA (4) //easy+implementation\u003c/p\u003e\u003cp\u003e11394 UVA (3)\u003c/p\u003e\u003cp\u003e11218 UVA (2)\u003c/p\u003e\u003cp\u003e11125 UVA (4) //slightly implementation\u003c/p\u003e\u003cp\u003e11076 UVA (3)\u003c/p\u003e\u003cp\u003e11081 UVA (4) //3 string subsequences (beware of fail)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/678/problem/E\"\u003ehttp://codeforces.com/contest/678/problem/E\u003c/a\u003e (5) //bitset dp + probability\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/766/problem/C\"\u003ehttp://codeforces.com/contest/766/problem/C\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/667/problem/C\"\u003ehttp://codeforces.com/contest/667/problem/C\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MOVIFAN/\"\u003ehttp://www.spoj.com/problems/MOVIFAN/\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ORDSUM23/\"\u003ehttp://www.spoj.com/problems/ORDSUM23/\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVSEQ/\"\u003ehttp://www.spoj.com/problems/DIVSEQ/\u003c/a\u003e (4) //N^3 (but better...) works fine\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/633/problem/F\"\u003ehttp://codeforces.com/contest/633/problem/F\u003c/a\u003e (7) //Tree dp\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADJDUCKS/\"\u003ehttp://www.spoj.com/problems/ADJDUCKS/\u003c/a\u003e (4) sort + pick 2-3 continous O(N)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JLNT/\"\u003ehttp://www.spoj.com/problems/JLNT/\u003c/a\u003e (4) //pick 0 or 2 | 1e3*5e3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TPCPALIN/\"\u003ehttp://www.spoj.com/problems/TPCPALIN/\u003c/a\u003e (5) //500^3 works (3rd countable)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COLORSEG/\"\u003ehttp://www.spoj.com/problems/COLORSEG/\u003c/a\u003e (4) //50^4\u003d\u003dOK 50^4log(N)\u003dTLE NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POWERCAR/\"\u003ehttp://www.spoj.com/problems/POWERCAR/\u003c/a\u003e (3) //1e3*1e3*2 — follow rules\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INGRED/\"\u003ehttp://www.spoj.com/problems/INGRED/\u003c/a\u003e (5) //TSP-like [reduce + go]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BADXOR/\"\u003ehttp://www.spoj.com/problems/BADXOR/\u003c/a\u003e (4) //classical subsets\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPCO/\"\u003ehttp://www.spoj.com/problems/SPCO/\u003c/a\u003e (5) //64*64*2 DP {OPT: prime O(1) + clear only half}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WAYHOME/\"\u003ehttp://www.spoj.com/problems/WAYHOME/\u003c/a\u003e (5) //NICE: 1) 1*1 b)12,1,**,2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NFURY/\"\u003ehttp://www.spoj.com/problems/NFURY/\u003c/a\u003e (2) //Minimal sum of squares\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GDIL/\"\u003ehttp://www.spoj.com/problems/GDIL/\u003c/a\u003e (3) //combinatorics\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/791/problem/D\"\u003ehttp://codeforces.com/contest/791/problem/D\u003c/a\u003e (5) //Tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/791/problem/E\"\u003ehttp://codeforces.com/contest/791/problem/E\u003c/a\u003e (6) //V,K,X — pick any\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/789/problem/C\"\u003ehttp://codeforces.com/contest/789/problem/C\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e13176 (4) //N^6\u003c/p\u003e\u003cp\u003e13179 (5) //NICE [Ath][Bth][TimeDiff]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/796/problem/E\"\u003ehttp://codeforces.com/contest/796/problem/E\u003c/a\u003e (6) //NICE: N*P*K*K (WC can\u0027t happen!)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/797/problem/E\"\u003ehttp://codeforces.com/contest/797/problem/E\u003c/a\u003e (4) //NICE: Almost BF-able (but care of low K)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/793/problem/D\"\u003ehttp://codeforces.com/contest/793/problem/D\u003c/a\u003e (3) //NICE \u0026amp; EASY: begin/end/actual/USED\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/803/problem/E\"\u003ehttp://codeforces.com/contest/803/problem/E\u003c/a\u003e (4) //State search — many IF\u0027s (EASY)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/805/problem/F\"\u003ehttp://codeforces.com/contest/805/problem/F\u003c/a\u003e (7) //NICE: DP on tree + fast BF + hack\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/808/problem/E\"\u003ehttp://codeforces.com/contest/808/problem/E\u003c/a\u003e (5) //NICE!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/811/problem/C\"\u003ehttp://codeforces.com/contest/811/problem/C\u003c/a\u003e (4) //Precalculate + DP (greedy thinking)\u003c/p\u003e\u003cp\u003e10817 UVA 4 //Easy but slightly implementation\u003c/p\u003e\u003cp\u003e10859 UVA 4 //Nice — on tree .. but for a reason small constrains\u003c/p\u003e\u003cp\u003e10898 UVA 4 //Hash is lesser than 1e6 .. try everything\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/812/problem/B\"\u003ehttp://codeforces.com/contest/812/problem/B\u003c/a\u003e (3) //Not only DP, yet imho easiest ..many spec cases\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/813/problem/D\"\u003ehttp://codeforces.com/contest/813/problem/D\u003c/a\u003e (5) //VERY VERY NICE — N*N (none picked between a/b)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/814/problem/E\"\u003ehttp://codeforces.com/contest/814/problem/E\u003c/a\u003e 5 //VERY NICE — Harder imple: Combinatorics\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/816/E\"\u003ehttp://codeforces.com/problemset/problem/816/E\u003c/a\u003e (6) //NICE — Tree (hard 2C complexity)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/837/problem/D\"\u003ehttp://codeforces.com/contest/837/problem/D\u003c/a\u003e (5) //NICE — yet kinda pain [must be iterative]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AUT/\"\u003ehttp://www.spoj.com/problems/AUT/\u003c/a\u003e (4) //NICE — K is interesting ~ at most 1600\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GNYR04C/\"\u003ehttp://www.spoj.com/problems/GNYR04C/\u003c/a\u003e (3) //Easy — Nice idea [Big→ Low approach]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TIEROPE/\"\u003ehttp://www.spoj.com/problems/TIEROPE/\u003c/a\u003e (4) //Process 2*L ~ otherwise pick BIG\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCE/\"\u003ehttp://www.spoj.com/problems/IITKWPCE/\u003c/a\u003e (4) //Palindromes [efficiency!] — NICE!\u003c/p\u003e\u003cp\u003eIITKWPCD SPOJ (4) //+Slightly geometry \u003c/p\u003e\u003cp\u003eUVA 1496 //[Steiner\u0027s Tree] Very Nice (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LKS/\"\u003ehttp://www.spoj.com/problems/LKS/\u003c/a\u003e (3) //Classical knapsack\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UOFTAE/\"\u003ehttp://www.spoj.com/problems/UOFTAE/\u003c/a\u003e (3) //Easy \u0026amp; Sympatic DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCOWS/\"\u003ehttp://www.spoj.com/problems/DCOWS/\u003c/a\u003e (4) //Very NICE (sort + GO)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FARIDA/\"\u003ehttp://www.spoj.com/problems/FARIDA/\u003c/a\u003e (3) //Easy \u0026amp; Sympatic ((u+1) | Price+(u+2))\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AU7_5/\"\u003ehttp://www.spoj.com/problems/AU7_5/\u003c/a\u003e (2) //EASY: dyn(n-1)+dyn(n-k-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAIVELOK/\"\u003ehttp://www.spoj.com/problems/NAIVELOK/\u003c/a\u003e (4) //NICE [depalindromisation] \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/846/problem/C\"\u003ehttp://codeforces.com/contest/846/problem/C\u003c/a\u003e (4) //With print\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CNT_LUCK/\"\u003ehttp://www.spoj.com/problems/CNT_LUCK/\u003c/a\u003e (4) //Number (binary) dp [NICE] {ull care 0-1}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAY99_4/\"\u003ehttp://www.spoj.com/problems/MAY99_4/\u003c/a\u003e (3) //Almost combinatoric Sub and 0/1,1/0\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GEEKOUNT/\"\u003ehttp://www.spoj.com/problems/GEEKOUNT/\u003c/a\u003e (4) //Number dp\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MUTDNA/\"\u003ehttp://www.spoj.com/problems/MUTDNA/\u003c/a\u003e (4) // N*2 (turned?) [not sure if grd poss.]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RIOI_3_2/\"\u003ehttp://www.spoj.com/problems/RIOI_3_2/\u003c/a\u003e (5) //VERY NICE (easy imple — Number Theory thinking)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAXWOODS/\"\u003ehttp://www.spoj.com/problems/MAXWOODS/\u003c/a\u003e (3) //NICE [EASY][GRID]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIEHARD/\"\u003ehttp://www.spoj.com/problems/DIEHARD/\u003c/a\u003e (3) //Easy — prolly solvable by greedy (but dp is easier)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC810/\"\u003ehttp://www.spoj.com/problems/DCEPC810/\u003c/a\u003e (4) //VERY VERY NICE — Subsequence 2pointers+2bools\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EQ2/\"\u003ehttp://www.spoj.com/problems/EQ2/\u003c/a\u003e (4) //NICE: Digit + Carry (from back) — iff-party\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC501/\"\u003ehttp://www.spoj.com/problems/DCEPC501/\u003c/a\u003e (3) //NICE \u0026amp; EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NUMTSN/\"\u003ehttp://www.spoj.com/problems/NUMTSN/\u003c/a\u003e (4) //NICE — Thinking or Opti\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GONE/\"\u003ehttp://www.spoj.com/problems/GONE/\u003c/a\u003e (4) //NICE \u0026amp; EASY [digits]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RAONE/\"\u003ehttp://www.spoj.com/problems/RAONE/\u003c/a\u003e (4) //NICE \u0026amp; EASY [digits] — almost similar as above\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STRSEQ/\"\u003ehttp://www.spoj.com/problems/STRSEQ/\u003c/a\u003e (4) //VERY VERY NICE — Next-Function\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MYQ8/\"\u003ehttp://www.spoj.com/problems/MYQ8/\u003c/a\u003e (4) //VERY NICE — 3x3 tic-tac-toe [implementation]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/859/problem/C\"\u003ehttp://codeforces.com/contest/859/problem/C\u003c/a\u003e (3) //Easy+Sympathic [PrefixSumOptional]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/859/problem/D\"\u003ehttp://codeforces.com/contest/859/problem/D\u003c/a\u003e (4) //NICE [Probabilities]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UNICA/\"\u003ehttp://www.spoj.com/problems/UNICA/\u003c/a\u003e (4) //VERY NICE [Posibilities][Print][Classical]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOPC12H/\"\u003ehttp://www.spoj.com/problems/KOPC12H/\u003c/a\u003e (4) //NICE Digit-DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DRACULA/\"\u003ehttp://www.spoj.com/problems/DRACULA/\u003c/a\u003e (4) //NICE Digit-DP (Both sides) — iterate by sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ABCPATH/\"\u003ehttp://www.spoj.com/problems/ABCPATH/\u003c/a\u003e (3) //DP over dfs (maybe without dp works too?)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BEHAPPY/\"\u003ehttp://www.spoj.com/problems/BEHAPPY/\u003c/a\u003e (2) //Easy one — low constraints\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STRCOUNT/\"\u003ehttp://www.spoj.com/problems/STRCOUNT/\u003c/a\u003e (4) //No input (over bits)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/855/problem/B\"\u003ehttp://codeforces.com/contest/855/problem/B\u003c/a\u003e (2) //prolly not even necessary\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/855/problem/C\"\u003ehttp://codeforces.com/contest/855/problem/C\u003c/a\u003e (4) //dp on tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/855/problem/E\"\u003ehttp://codeforces.com/contest/855/problem/E\u003c/a\u003e (5) //VERY NICE — Digits \u0026amp; Bitmask \u0026amp; Query (learning!)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PAINTWAL/\"\u003ehttp://www.spoj.com/problems/PAINTWAL/\u003c/a\u003e (6) //VERY NICE — Imho hard (opti could beat)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADFRUITS/\"\u003ehttp://www.spoj.com/problems/ADFRUITS/\u003c/a\u003e (3) //Very simple (substring \u003d\u003d subsequence)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN113/\"\u003ehttp://www.spoj.com/problems/MAIN113/\u003c/a\u003e (2) //NICE but somehow too low constraints\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN112/\"\u003ehttp://www.spoj.com/problems/MAIN112/\u003c/a\u003e (4) //NICE — Bitmask \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/864/problem/E\"\u003ehttp://codeforces.com/contest/864/problem/E\u003c/a\u003e (5) //VERY NICE — Sort \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NOVICE63/\"\u003ehttp://www.spoj.com/problems/NOVICE63/\u003c/a\u003e (4) //NICE -On digits (binary)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TUG/\"\u003ehttp://www.spoj.com/problems/TUG/\u003c/a\u003e (3) //NICE + Observation {N\u0026gt;100 \u003d\u003d YES}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DOMINO1/\"\u003ehttp://www.spoj.com/problems/DOMINO1/\u003c/a\u003e (4) //Used map to solve it\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NY10E/\"\u003ehttp://www.spoj.com/problems/NY10E/\u003c/a\u003e (2) //Easy dp\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN72/\"\u003ehttp://www.spoj.com/problems/MAIN72/\u003c/a\u003e (3) //Easy knapsack\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NOVICE43/\"\u003ehttp://www.spoj.com/problems/NOVICE43/\u003c/a\u003e (2) //Unbelievably low constraints\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/598/problem/E\"\u003ehttp://codeforces.com/contest/598/problem/E\u003c/a\u003e (4) //N^5 strategy works fine [VERY NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CHAIR/\"\u003ehttp://www.spoj.com/problems/CHAIR/\u003c/a\u003e (3) //Maybe combinatorics too?\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ACPC10D/\"\u003ehttp://www.spoj.com/problems/ACPC10D/\u003c/a\u003e (3) //NICE — DAG traversal\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CPCRC1C/\"\u003ehttp://www.spoj.com/problems/CPCRC1C/\u003c/a\u003e (4) //Digits dp (return pair)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BORW/\"\u003ehttp://www.spoj.com/problems/BORW/\u003c/a\u003e (3) //Inc+Dec sequence (small array)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/16/E\"\u003ehttp://codeforces.com/problemset/problem/16/E\u003c/a\u003e (5) //Bitmask [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/18/E\"\u003ehttp://codeforces.com/problemset/problem/18/E\u003c/a\u003e (5) //VERY NICE {no need for second iteration}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/2/problem/B\"\u003ehttp://codeforces.com/contest/2/problem/B\u003c/a\u003e (5) //NICE — 2/5 are in-fact independent\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/4/problem/D\"\u003ehttp://codeforces.com/contest/4/problem/D\u003c/a\u003e (3) //Classical [FW works too] XY \u0026gt; xy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/6/problem/D\"\u003ehttp://codeforces.com/contest/6/problem/D\u003c/a\u003e (4) //NICE (N^4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/321/problem/E\"\u003ehttp://codeforces.com/contest/321/problem/E\u003c/a\u003e (7) //VERY NICE — D\u0026amp;C Trick\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/868/problem/F\"\u003ehttp://codeforces.com/contest/868/problem/F\u003c/a\u003e (8) //VERY VERY NICE D\u0026amp;C Trick — With MO Principal\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/8/problem/C\"\u003ehttp://codeforces.com/contest/8/problem/C\u003c/a\u003e (5) //NICE — Masks [N*2^N]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/868/problem/E\"\u003ehttp://codeforces.com/contest/868/problem/E\u003c/a\u003e (8) //VERY NICE — HARD — on tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/10/problem/D\"\u003ehttp://codeforces.com/contest/10/problem/D\u003c/a\u003e (4) //LCIS [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/13/problem/C\"\u003ehttp://codeforces.com/contest/13/problem/C\u003c/a\u003e (5) //NICE [sorting][only elements from array]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/17/problem/C\"\u003ehttp://codeforces.com/contest/17/problem/C\u003c/a\u003e (5) //[NICE][iterative-sparse][+idea]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/19/problem/B\"\u003ehttp://codeforces.com/contest/19/problem/B\u003c/a\u003e (4) //Knapsack (after good look)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/30/problem/C\"\u003ehttp://codeforces.com/contest/30/problem/C\u003c/a\u003e (4) //Probabilities + (slight)GEO\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/31/problem/E\"\u003ehttp://codeforces.com/contest/31/problem/E\u003c/a\u003e (4) //[NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/41/problem/D\"\u003ehttp://codeforces.com/contest/41/problem/D\u003c/a\u003e (4) //With printing\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003edsu\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABRANC/\"\u003ehttp://www.spoj.com/problems/ADABRANC/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/90/problem/E\"\u003ehttp://codeforces.com/contest/90/problem/E\u003c/a\u003e (5) //[NICE][DSU-LIKE-LINKS][SIMULATION]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/87/problem/D\"\u003ehttp://codeforces.com/contest/87/problem/D\u003c/a\u003e (5) //[VERY NICE][SORTING][COMPRES][DFS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/884/problem/E\"\u003ehttp://codeforces.com/contest/884/problem/E\u003c/a\u003e (5) //[VERY NICE][MEMORY SPARSE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/60/problem/D\"\u003ehttp://codeforces.com/contest/60/problem/D\u003c/a\u003e (6) //[NICE][Pythagorean Triples][Gen over max!]\u003c/p\u003e\u003cp\u003eUVA 10947\u003c/p\u003e\u003cp\u003eUVA 12363\u003c/p\u003e\u003cp\u003eLA 3833 \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/742/D\"\u003ehttp://codeforces.com/problemset/problem/742/D\u003c/a\u003e //+DP\u003c/p\u003e\u003cp\u003eUVA 10178\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/723/problem/F\"\u003ehttp://codeforces.com/contest/723/problem/F\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e13153 UVA (5)\u003c/p\u003e\u003cp\u003e13169 UVA (3)\u003c/p\u003e\u003cp\u003e11987 UVA (3)\u003c/p\u003e\u003cp\u003e11474 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BTCODE_G/\"\u003ehttp://www.spoj.com/problems/BTCODE_G/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/691/D\"\u003ehttp://codeforces.com/problemset/problem/691/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 101174K [2016-2017 ACM-ICPC Southwestern European Regional Programming Contest (SWERC 2016)]\u003c/p\u003e\u003cp\u003eUVA 10583\u003c/p\u003e\u003cp\u003eLightOJ 1003\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/731/C\"\u003ehttp://codeforces.com/problemset/problem/731/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 793 \u003c/p\u003e\u003cp\u003eUVA 11966\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/COZIC\"\u003ehttps://www.codechef.com/problems/COZIC\u003c/a\u003e\u003c/p\u003e\u003cp\u003e3939 [LA]\u003c/p\u003e\u003cp\u003eUVA 11503\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/755/C\"\u003ehttp://codeforces.com/problemset/problem/755/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 1395\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/687/problem/D\"\u003ehttp://codeforces.com/contest/687/problem/D\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/680/problem/E\"\u003ehttp://codeforces.com/contest/680/problem/E\u003c/a\u003e 7 //+precalculation/brute force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/766/problem/D\"\u003ehttp://codeforces.com/contest/766/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LEXSTR/\"\u003ehttp://www.spoj.com/problems/LEXSTR/\u003c/a\u003e (3) //Nice na stringu\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/805/problem/C\"\u003ehttp://codeforces.com/contest/805/problem/C\u003c/a\u003e 3 //NICE (dijkstra like :P)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCI/\"\u003ehttp://www.spoj.com/problems/IITKWPCI/\u003c/a\u003e (3) //VERY NICE \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FRNDCIRC\"\u003ehttp://www.spoj.com/problems/FRNDCIRC\u003c/a\u003e (3) //Classical DSU (NICE for practice)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FOXLINGS/\"\u003ehttp://www.spoj.com/problems/FOXLINGS/\u003c/a\u003e (3) Easy — just renumbering\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NITTROAD/\"\u003ehttp://www.spoj.com/problems/NITTROAD/\u003c/a\u003e (4) //Process from back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SHAHBG/\"\u003ehttp://www.spoj.com/problems/SHAHBG/\u003c/a\u003e (2) //DSU not needes (simulated by array)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/598/problem/D\"\u003ehttp://codeforces.com/contest/598/problem/D\u003c/a\u003e (3) //Can be solved with DFS too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/9/problem/E\"\u003ehttp://codeforces.com/contest/9/problem/E\u003c/a\u003e (4) //Making one big cycle\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/25/problem/D\"\u003ehttp://codeforces.com/contest/25/problem/D\u003c/a\u003e (4) //Could be done linear too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/28/problem/B\"\u003ehttp://codeforces.com/contest/28/problem/B\u003c/a\u003e (4) //NICE [imho bad statement]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/876/problem/D\"\u003ehttp://codeforces.com/contest/876/problem/D\u003c/a\u003e (4) //DSU adjacent + visited\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/875/problem/F\"\u003ehttp://codeforces.com/contest/875/problem/F\u003c/a\u003e (6) //NICE — Maximum cactus-forest [kruskal-like]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eeuler_function\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 10299\u003c/p\u003e\u003cp\u003eUVA 10990\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/SMPLSUM\"\u003ehttps://www.codechef.com/problems/SMPLSUM\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/COZIE\"\u003ehttps://www.codechef.com/problems/COZIE\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCMSUM/\"\u003ehttp://www.spoj.com/problems/LCMSUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 100975F [2003-2004 Petrozavodsk Summer Training Camp, Saratov SU Contest]\u003c/p\u003e\u003cp\u003eUVA 13132\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCDEX/\"\u003ehttp://www.spoj.com/problems/GCDEX/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12995\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TIP1/\"\u003ehttp://www.spoj.com/problems/TIP1/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11327\u003c/p\u003e\u003cp\u003eLightOJ 1007\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ETF/\"\u003ehttp://www.spoj.com/problems/ETF/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eProject Euler #72: Counting fractions\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPCA03/\"\u003ehttp://www.spoj.com/problems/DCEPCA03/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAJPWG/\"\u003ehttp://www.spoj.com/problems/NAJPWG/\u003c/a\u003e 4 //Gauss-Euler\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC12G/\"\u003ehttp://www.spoj.com/problems/DCEPC12G/\u003c/a\u003e (5) //Do what is written there\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INVPHI/\"\u003ehttp://www.spoj.com/problems/INVPHI/\u003c/a\u003e (5) //Inverse euler\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eeuler_tour\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e13246 — Chained Words (4) //[NICE][LEXICOGRAPHICAL]\u003c/p\u003e\u003cp\u003eUVA 10735\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/789/problem/D\"\u003ehttp://codeforces.com/contest/789/problem/D\u003c/a\u003e //Adj EG + Self/everything\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/21/problem/D\"\u003ehttp://codeforces.com/contest/21/problem/D\u003c/a\u003e (5) //[NICE][EulerTour+DP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/36/problem/E\"\u003ehttp://codeforces.com/contest/36/problem/E\u003c/a\u003e (6) //VERY NICE [4odd is hardest]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003efactorization\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAHW/\"\u003ehttp://www.spoj.com/problems/ADAHW/\u003c/a\u003e [RHO][Number Theory]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADADIGIT/\"\u003ehttp://www.spoj.com/problems/ADADIGIT/\u003c/a\u003e [Permutations]\u003c/p\u003e\u003cp\u003eUVA 13067\u003c/p\u003e\u003cp\u003eProject Euler #108: Diophantine reciprocals I\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CHGROOM/\"\u003ehttp://www.spoj.com/problems/CHGROOM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 101370A [2009-2010 Summer Petrozavodsk Camp, Petr Mitrichev Contest 5]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/837/E\"\u003ehttp://codeforces.com/problemset/problem/837/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PSYCHOT/\"\u003ehttp://www.spoj.com/problems/PSYCHOT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACTDIV/\"\u003ehttp://www.spoj.com/problems/FACTDIV/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NOSQ/\"\u003ehttp://www.spoj.com/problems/NOSQ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FCDC/\"\u003ehttp://www.spoj.com/problems/FCDC/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NFACTOR/\"\u003ehttp://www.spoj.com/problems/NFACTOR/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ABA12D/\"\u003ehttp://www.spoj.com/problems/ABA12D/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PSTR/\"\u003ehttp://www.spoj.com/problems/PSTR/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR11E/\"\u003ehttp://www.spoj.com/problems/AMR11E/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACT1/\"\u003ehttp://www.spoj.com/problems/FACT1/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACT2/\"\u003ehttp://www.spoj.com/problems/FACT2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/gold-at-lolympics/\"\u003ehttps://www.hackerearth.com/problem/algorithm/gold-at-lolympics/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12005 UVA (7)\u003c/p\u003e\u003cp\u003e12062 UVA (6)\u003c/p\u003e\u003cp\u003e11960 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACTCG2/\"\u003ehttp://www.spoj.com/problems/FACTCG2/\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACT0/\"\u003ehttp://www.spoj.com/problems/FACT0/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/546/problem/D\"\u003ehttp://codeforces.com/contest/546/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/222/problem/C\"\u003ehttp://codeforces.com/contest/222/problem/C\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COMDIV/\"\u003ehttp://www.spoj.com/problems/COMDIV/\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SINEGGS/\"\u003ehttp://www.spoj.com/problems/SINEGGS/\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BDOI16B/\"\u003ehttp://www.spoj.com/problems/BDOI16B/\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HG/\"\u003ehttp://www.spoj.com/problems/HG/\u003c/a\u003e 4 //Map \u003d\u003d OK\u003c/p\u003e\u003cp\u003e11099 UVA (3) //factor + recursion\u003c/p\u003e\u003cp\u003e13194 UVA (3) //factorize+generate /or just check\u003c/p\u003e\u003cp\u003e13191 UVA (6) //Pollard-Rho\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/E\"\u003ehttp://codeforces.com/contest/818/problem/E\u003c/a\u003e (4) // Efficient + Two Pointers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/831/problem/F\"\u003ehttp://codeforces.com/contest/831/problem/F\u003c/a\u003e (6) //MAGIC\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/839/problem/D\"\u003ehttp://codeforces.com/contest/839/problem/D\u003c/a\u003e (4) // Combinatorics + IE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SAS002/\"\u003ehttp://www.spoj.com/problems/SAS002/\u003c/a\u003e (5) //Find all divisors (big numbers)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCDS/\"\u003ehttp://www.spoj.com/problems/GCDS/\u003c/a\u003e (4) //Lowest unused prime\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCF/\"\u003ehttp://www.spoj.com/problems/IITKWPCF/\u003c/a\u003e (4) //Nonprime divisors of N/2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/851/problem/D\"\u003ehttp://codeforces.com/contest/851/problem/D\u003c/a\u003e (4) //Properties of GCD + factor: NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PTIME/\"\u003ehttp://www.spoj.com/problems/PTIME/\u003c/a\u003e (3) //Low bounds — check each prime independently\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN12B/\"\u003ehttp://www.spoj.com/problems/MAIN12B/\u003c/a\u003e (3) //NICE [Factorization][Sort][Unique]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR11E/\"\u003ehttp://www.spoj.com/problems/AMR11E/\u003c/a\u003e (2) //2664 is the biggest\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCPC11A/\"\u003ehttp://www.spoj.com/problems/GCPC11A/\u003c/a\u003e (4) //Very nice — factorize + divide N by powers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR10C/\"\u003ehttp://www.spoj.com/problems/AMR10C/\u003c/a\u003e (3) //Maximum of factor-powers\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003efenwick\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABEHIVE/\"\u003ehttp://www.spoj.com/problems/ADABEHIVE/\u003c/a\u003e [2D]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACABAA/\"\u003ehttp://www.spoj.com/problems/ADACABAA/\u003c/a\u003e [2D][Sparse]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/102/problem/D\"\u003ehttp://codeforces.com/contest/102/problem/D\u003c/a\u003e (4) //[NICE][+DP][NORMALIZE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101047/problem/J\"\u003ehttp://codeforces.com/gym/101047/problem/J\u003c/a\u003e [2D]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MATSUM/\"\u003ehttp://www.spoj.com/problems/MATSUM/\u003c/a\u003e [2D]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerearth.com/practice/data-structures/advanced-data-structures/fenwick-binary-indexed-trees/practice-problems/algorithm/counting-in-byteland/\"\u003ehttps://www.hackerearth.com/practice/data-structures/advanced-data-structures/fenwick-binary-indexed-trees/practice-problems/algorithm/counting-in-byteland/\u003c/a\u003e [3D]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/300\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/300\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/707/problem/E\"\u003ehttp://codeforces.com/contest/707/problem/E\u003c/a\u003e 7 [2D]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/749/problem/E\"\u003ehttp://codeforces.com/contest/749/problem/E\u003c/a\u003e 8\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/gymProblem/101055/D\"\u003ehttp://codeforces.com/problemset/gymProblem/101055/D\u003c/a\u003e 5 [2D]\u003c/p\u003e\u003cp\u003e11240 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/459/problem/D\"\u003ehttp://codeforces.com/contest/459/problem/D\u003c/a\u003e (4) //[NICE][SWEEPING]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/61/problem/E\"\u003ehttp://codeforces.com/contest/61/problem/E\u003c/a\u003e (4) //[NICE][CLASSICAL][2*FW][NORMALIZE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/669/problem/E\"\u003ehttp://codeforces.com/contest/669/problem/E\u003c/a\u003e 5 //fenwicks — sparse\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/777/problem/E\"\u003ehttp://codeforces.com/contest/777/problem/E\u003c/a\u003e 4 //MAXIMUM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TULIPNUM/\"\u003ehttp://www.spoj.com/problems/TULIPNUM/\u003c/a\u003e 4 //inc — 1 nor+num|sum(A[B],A[E])\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/799/problem/C\"\u003ehttp://codeforces.com/contest/799/problem/C\u003c/a\u003e 3 //MAX FW (but possibly easier?)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/831/problem/E\"\u003ehttp://codeforces.com/contest/831/problem/E\u003c/a\u003e 4 //MAP to get ORDER — FW \u003d\u003d LIST\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SAS001/\"\u003ehttp://www.spoj.com/problems/SAS001/\u003c/a\u003e (4) //Nice — number of inversions + 2P\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TPGA/\"\u003ehttp://www.spoj.com/problems/TPGA/\u003c/a\u003e (4) //NICE — Lesser*(N-i-1)!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SGIFT/\"\u003ehttp://www.spoj.com/problems/SGIFT/\u003c/a\u003e (4) //BS works too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUMSUM/\"\u003ehttp://www.spoj.com/problems/SUMSUM/\u003c/a\u003e (5) //Bit-by-Bit cnt 0/1\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AKVQLD03/\"\u003ehttp://www.spoj.com/problems/AKVQLD03/\u003c/a\u003e (3) //Classical fenwick — easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ZIGZAG2/\"\u003ehttp://www.spoj.com/problems/ZIGZAG2/\u003c/a\u003e (6) //Very nice — FW + BS + DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/849/problem/E\"\u003ehttp://codeforces.com/contest/849/problem/E\u003c/a\u003e (7) //2D Fenwick / ST+TP [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CRAYON/\"\u003ehttp://www.spoj.com/problems/CRAYON/\u003c/a\u003e (5) //VERY NICE [2*FW — begin + end]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NITT8/\"\u003ehttp://www.spoj.com/problems/NITT8/\u003c/a\u003e (4) //Norm. + Store indices in MAX-Fenwick [REVERSE] [VERY NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC705/\"\u003ehttp://www.spoj.com/problems/DCEPC705/\u003c/a\u003e (4) //NICE! Sort + Fenwick\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC206/\"\u003ehttp://www.spoj.com/problems/DCEPC206/\u003c/a\u003e (3) //NICE \u0026amp; EASY \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOPC12G/\"\u003ehttp://www.spoj.com/problems/KOPC12G/\u003c/a\u003e (4) //N Fenwick trees\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TRIPINV/\"\u003ehttp://www.spoj.com/problems/TRIPINV/\u003c/a\u003e (4) //2xFenwick (triples counting)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/597/problem/C\"\u003ehttp://codeforces.com/contest/597/problem/C\u003c/a\u003e (4) //[VERY NICE] 11*Fenwick\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/12/problem/D\"\u003ehttp://codeforces.com/contest/12/problem/D\u003c/a\u003e (4) //NICE [triplet-comparing][sort]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003efft\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAMATCH/\"\u003ehttp://www.spoj.com/problems/ADAMATCH/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12633\u003c/p\u003e\u003cp\u003e6886 — Golf Bot [LA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POLYMUL/en/\"\u003ehttp://www.spoj.com/problems/POLYMUL/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 100960C [2015-2016 Petrozavodsk Winter Training Camp, Nizhny Novgorod SU Contest]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/APRPS\"\u003ehttps://www.codechef.com/problems/APRPS\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/POLYEVAL\"\u003ehttps://www.codechef.com/problems/POLYEVAL\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TSUM/\"\u003ehttp://www.spoj.com/problems/TSUM/\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e13182 UVA 5 //ACTG hamming\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/827/problem/E\"\u003ehttp://codeforces.com/contest/827/problem/E\u003c/a\u003e (8) //MAGIC\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAXMATCH/\"\u003ehttp://www.spoj.com/problems/MAXMATCH/\u003c/a\u003e 5 //abc hamming\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eflow\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FASTFLOW/en/\"\u003ehttp://www.spoj.com/problems/FASTFLOW/en/\u003c/a\u003e //Raw (no sauce)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/78/problem/E\"\u003ehttp://codeforces.com/contest/78/problem/E\u003c/a\u003e (5) //NICE [Matching-like][+BFS]\u003c/p\u003e\u003cp\u003e4322 — Destroying the bus stations (Live Archive)\u003c/p\u003e\u003cp\u003e11380 — Down Went The Titanic (UVA) //Interesting grid problem\u003c/p\u003e\u003cp\u003e6395 — Surely You Congest (LA) //VERY NICE [slightly advanced]\u003c/p\u003e\u003cp\u003e7204 — Blood groups (LA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100963\"\u003ehttp://codeforces.com/gym/100963\u003c/a\u003e (Flame of Nucleus — F)\u003c/p\u003e\u003cp\u003e11167 — Monkeys in the Emei Mountain //Also harder (imho)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/653/D\"\u003ehttp://codeforces.com/problemset/problem/653/D\u003c/a\u003e (+BS)\u003c/p\u003e\u003cp\u003e13000 — VIP Treatment (+BS)\u003c/p\u003e\u003cp\u003e1242 — Necklace\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.deadline24.pl/assets/problemsets/dl24.elim.2017.B.en.pdf\"\u003ehttps://www.deadline24.pl/assets/problemsets/dl24.elim.2017.B.en.pdf\u003c/a\u003e (DEADLINE 24 problem — not sure if it can be submited :O)\u003c/p\u003e\u003cp\u003e3487 — Duopoly (Near matching)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/727/D\"\u003ehttp://codeforces.com/problemset/problem/727/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/704/D\"\u003ehttp://codeforces.com/problemset/problem/704/D\u003c/a\u003e [Also advanced]\u003c/p\u003e\u003cp\u003e5418 — A Plug for UNIX (LA)\u003c/p\u003e\u003cp\u003e4957 — Fake scoreboard (LA) //If I remember well, other solutions was also possible\u003c/p\u003e\u003cp\u003e1155 — Power Transmission (LOJ) //(classical)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/ROBOTDAG\"\u003ehttps://www.codechef.com/problems/ROBOTDAG\u003c/a\u003e //Ford-Fukherson\u003c/p\u003e\u003cp\u003e10804 — Gopher Strategy (UVA)\u003c/p\u003e\u003cp\u003e11506 — Angry Programmer (UVA) //Nodes division\u003c/p\u003e\u003cp\u003e10511 — Councilling (UVA)\u003c/p\u003e\u003cp\u003e563 — Crimewave\u003c/p\u003e\u003cp\u003e1306 — The K-League (UVA)\u003c/p\u003e\u003cp\u003e1345 — Jamie\u0027s Contact Groups\u003c/p\u003e\u003cp\u003e10092 — The Problem with the Problem Setter\u003c/p\u003e\u003cp\u003eProblem B. Roller Coaster Scheduling (GCJ — 2017)\u003c/p\u003e\u003cp\u003e259 — Software Allocation (UVA)\u003c/p\u003e\u003cp\u003e5905 — Pool construction (LA) //Imho harder\u003c/p\u003e\u003cp\u003e10480 — Sabotage\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/808/problem/F\"\u003ehttp://codeforces.com/contest/808/problem/F\u003c/a\u003e 6 //NICE — nontrivial (max matching with bigger flows)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/J\"\u003ehttp://codeforces.com/contest/847/problem/J\u003c/a\u003e 6 //Probably not flows — matching-like\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eflow-matching-like\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAHOSE/\"\u003ehttp://www.spoj.com/problems/ADAHOSE/\u003c/a\u003e [DUAL-GRAPH]\u003c/p\u003e\u003cp\u003e3837 [LA] //Stable Marriage\u003c/p\u003e\u003cp\u003eUVA 1175 //Stable Marriage\u003c/p\u003e\u003cp\u003e11594 — All Pairs Maximum Flow (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABLOOM/\"\u003ehttp://www.spoj.com/problems/ADABLOOM/\u003c/a\u003e //Maximum matching in general graph\u003c/p\u003e\u003cp\u003e11439 — Maximizing the ICPC //Maximum matching in general graph\u003c/p\u003e\u003cp\u003e1376 — Animal Run //Max flow on planar graph (Dual \u003d\u003d shortest path over edges)\u003c/p\u003e\u003cp\u003e10989 — Bomb, Divide and Conquer //Stoer-Wagner — global cut\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003efloyd-warshall\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e10724 UVA\u003c/p\u003e\u003cp\u003eUVA 117\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/21/D\"\u003ehttp://codeforces.com/problemset/problem/21/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 1198\u003c/p\u003e\u003cp\u003eLightOJ 1086 //+DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INGRED/\"\u003ehttp://www.spoj.com/problems/INGRED/\u003c/a\u003e //+DP\u003c/p\u003e\u003cp\u003eUVA 10048\u003c/p\u003e\u003cp\u003eUVA 125\u003c/p\u003e\u003cp\u003eGym 101223C [2017 Facebook Hacker Cup, Round 1] //+DP\u003c/p\u003e\u003cp\u003eLightOJ 1221\u003c/p\u003e\u003cp\u003eUVA 423\u003c/p\u003e\u003cp\u003eUVA 12179 //+DP\u003c/p\u003e\u003cp\u003eUVA 1416\u003c/p\u003e\u003cp\u003eUVA 1233 \u003c/p\u003e\u003cp\u003eUVA 10793\u003c/p\u003e\u003cp\u003e10099 UVA\u003c/p\u003e\u003cp\u003eUVA 869\u003c/p\u003e\u003cp\u003eLightOJ 1174\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ARBITRAG/\"\u003ehttp://www.spoj.com/problems/ARBITRAG/\u003c/a\u003e //Other algos shall work too \u003c/p\u003e\u003cp\u003e13211 UVA (5) //NICE — FW adding states\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ROHAAN/\"\u003ehttp://www.spoj.com/problems/ROHAAN/\u003c/a\u003e (3) //Classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/25/problem/C\"\u003ehttp://codeforces.com/contest/25/problem/C\u003c/a\u003e (4) //Adding new edges .. need FW principal\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/33/problem/B\"\u003ehttp://codeforces.com/contest/33/problem/B\u003c/a\u003e (3) //NICE [dijkstra could work too]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003efriedvaldAlgorithm\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPOWER/\"\u003ehttp://www.spoj.com/problems/ADAPOWER/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e4956 [LA]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egame_theory\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGAME/\"\u003ehttp://www.spoj.com/problems/ADAGAME/\u003c/a\u003e [DP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGAME2/\"\u003ehttp://www.spoj.com/problems/ADAGAME2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAQUBIC/\"\u003ehttp://www.spoj.com/problems/ADAQUBIC/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFIMBR/\"\u003ehttp://www.spoj.com/problems/ADAFIMBR/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/88/problem/E\"\u003ehttp://codeforces.com/contest/88/problem/E\u003c/a\u003e (5) //[VERY NICE][PREFIX-XOR][NIMBERS][SQRT][MATH]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/69/problem/D\"\u003ehttp://codeforces.com/contest/69/problem/D\u003c/a\u003e (4) //[NICE][DP] Reflection can be ignored\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/55/problem/C\"\u003ehttp://codeforces.com/contest/55/problem/C\u003c/a\u003e (4) //[NICE] Size of piece from border\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/255/E\"\u003ehttp://codeforces.com/problemset/problem/255/E\u003c/a\u003e --MEX\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/91\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/91\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/364\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/364\u003c/a\u003e\u003c/p\u003e\u003cp\u003eProject Euler #96: Su Doku //Sudoku\u003c/p\u003e\u003cp\u003e11859 UVA 4\u003c/p\u003e\u003cp\u003e11863 UVA 4\u003c/p\u003e\u003cp\u003e11892 UVA 3 //Probably solved by many\u003c/p\u003e\u003cp\u003e11534 UVA 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VECTAR11/\"\u003ehttp://www.spoj.com/problems/VECTAR11/\u003c/a\u003e 4 //Nsqrt(N) passes [with break]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/768/problem/E\"\u003ehttp://codeforces.com/contest/768/problem/E\u003c/a\u003e (4) //NICE — Grundy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SYNC13C/\"\u003ehttp://www.spoj.com/problems/SYNC13C/\u003c/a\u003e (4) //2*DP {maybe not seeing sth}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/787/problem/C\"\u003ehttp://codeforces.com/contest/787/problem/C\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/794/problem/C\"\u003ehttp://codeforces.com/contest/794/problem/C\u003c/a\u003e (3) //Find optimal strategy: choose back/front\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/794/problem/E\"\u003ehttp://codeforces.com/contest/794/problem/E\u003c/a\u003e (5) //NICE Find stategy: Even/Odd\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/812/problem/E\"\u003ehttp://codeforces.com/contest/812/problem/E\u003c/a\u003e (7) //Advanced NIM strategy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GAMEMVS/\"\u003ehttp://www.spoj.com/problems/GAMEMVS/\u003c/a\u003e (4) //Nimbers (Ai^X)\u0026lt;\u003dAi\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PLAYGAME/\"\u003ehttp://www.spoj.com/problems/PLAYGAME/\u003c/a\u003e (3) //Check pattern\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CHAOS_CC/\"\u003ehttp://www.spoj.com/problems/CHAOS_CC/\u003c/a\u003e (4) //VERY NICE [nimbers]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/851/problem/E\"\u003ehttp://codeforces.com/contest/851/problem/E\u003c/a\u003e (5) //Very nice [nimbers] [bitset]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CHGROOM/\"\u003ehttp://www.spoj.com/problems/CHGROOM/\u003c/a\u003e (4) //+Factorisation [NICE \u0026amp; Easy]: Win unless 2 prime factors\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EALP1/\"\u003ehttp://www.spoj.com/problems/EALP1/\u003c/a\u003e (4) //NICE ~ Possible Moves of NIM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GAME3/\"\u003ehttp://www.spoj.com/problems/GAME3/\u003c/a\u003e (4) //VERY NICE — pattern watching [A145812]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GAME2/\"\u003ehttp://www.spoj.com/problems/GAME2/\u003c/a\u003e (5) //VERY NICE — \u003ca href\u003d\"https://community.topcoder.com/tc?module\u003dStatic\u0026amp;d1\u003dmatch_editorials\u0026amp;d2\u003dsrm338\"\u003ehttps://community.topcoder.com/tc?module\u003dStatic\u0026amp;d1\u003dmatch_editorials\u0026amp;d2\u003dsrm338\u003c/a\u003e (CAKE)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CF36D/\"\u003ehttp://www.spoj.com/problems/CF36D/\u003c/a\u003e (5) //Pattern watching (care for 1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/15/problem/C\"\u003ehttp://codeforces.com/contest/15/problem/C\u003c/a\u003e (4) //VERY NICE [XOR: A,1,A+1,0..repeat]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/39/problem/E\"\u003ehttp://codeforces.com/contest/39/problem/E\u003c/a\u003e (4) //Slightly [DP][MATH][ROUNDING]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/63/problem/E\"\u003ehttp://codeforces.com/contest/63/problem/E\u003c/a\u003e (5) //[NICE][BITMASK-DP]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egauss\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e12910 — Snakes and Ladders [UVA]\u003c/p\u003e\u003cp\u003eUVA 10828\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100923/problem/C\"\u003ehttp://codeforces.com/gym/100923/problem/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e4963 [LA]\u003c/p\u003e\u003cp\u003eUVA 12849\u003c/p\u003e\u003cp\u003eGym 100962A [2015-2016 Petrozavodsk Winter Training Camp, Moscow SU Trinity Contest][NICE]\u003c/p\u003e\u003cp\u003eUVA 10109 [NICE][HARD-WORK]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egeometry\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPICK/\"\u003ehttp://www.spoj.com/problems/ADAPICK/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAKOHL/\"\u003ehttp://www.spoj.com/problems/ADAKOHL/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101597/problem/B\"\u003ehttp://codeforces.com/gym/101597/problem/B\u003c/a\u003e (3) //Simply brute-force just the closest to points\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/70/problem/D\"\u003ehttp://codeforces.com/contest/70/problem/D\u003c/a\u003e (5) //Dynamic Convex Hull\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://icpc.kattis.com/problems/airport\"\u003ehttps://icpc.kattis.com/problems/airport\u003c/a\u003e //Proposed by \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tautsjasiunsas\" title\u003d\"Candidate Master tautsjasiunsas\"\u003etautsjasiunsas\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-7/challenges/elastic-rope/problem\"\u003ehttps://www.hackerrank.com/contests/world-codesprint-7/challenges/elastic-rope/problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/20\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/20\u003c/a\u003e [EASY]\u003c/p\u003e\u003cp\u003eUVA 10321 //Polygon intersection\u003c/p\u003e\u003cp\u003eUVA 11265 //Polygon point +/-\u003c/p\u003e\u003cp\u003eUVA 13112 //Polygon\u003c/p\u003e\u003cp\u003e10907 UVA [Area of polygon from a point]\u003c/p\u003e\u003cp\u003e3378 — Swamp Things [LA] — Maximum points on line\u003c/p\u003e\u003cp\u003eUVA 11768 //Discrete points\u003c/p\u003e\u003cp\u003e2542 [LA] //Arc size [formula]\u003c/p\u003e\u003cp\u003eUVA 1571 //As below [easier]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/ALLPOLY\"\u003ehttps://www.codechef.com/problems/ALLPOLY\u003c/a\u003e //[NICE] Point seeing polygon\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCL/\"\u003ehttp://www.spoj.com/problems/IITKWPCL/\u003c/a\u003e //Point distance\u003c/p\u003e\u003cp\u003eUVA 11281 //circle~triangle\u003c/p\u003e\u003cp\u003eUVA 12921 //circle reconstruction\u003c/p\u003e\u003cp\u003eUVA 190 //circle from 3 points\u003c/p\u003e\u003cp\u003eUVA 12240 //pts\u0026gt;circle\u003c/p\u003e\u003cp\u003eUVA 438 //circle pt\u003c/p\u003e\u003cp\u003eLightOJ 1018 //Minimum # of lines through all pts [VERY NICE]\u003c/p\u003e\u003cp\u003eUVA 11008 //Similar as above\u003c/p\u003e\u003cp\u003eUVA 12830 //Biggest rectangle without points inside\u003c/p\u003e\u003cp\u003eUVA 11012 //Most distant points\u003c/p\u003e\u003cp\u003eUVA 1683 //Closest points\u003c/p\u003e\u003cp\u003eUVA 12389 //3D MH Closest Points\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR12C/\"\u003ehttp://www.spoj.com/problems/AMR12C/\u003c/a\u003e //Pt closest to all other points\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CLOPPAIR/\"\u003ehttp://www.spoj.com/problems/CLOPPAIR/\u003c/a\u003e //Closest pair of points\u003c/p\u003e\u003cp\u003eUVA 10678 //Circles intersection\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/600/D\"\u003ehttp://codeforces.com/problemset/problem/600/D\u003c/a\u003e //Circles intersection\u003c/p\u003e\u003cp\u003eLightOJ 1118 //Circles intersection\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CERC07C/en/\"\u003ehttp://www.spoj.com/problems/CERC07C/en/\u003c/a\u003e //Bounding circle\u003c/p\u003e\u003cp\u003eUVA-10005 //Bounding circle\u003c/p\u003e\u003cp\u003e2407 [LA] //Bounding Sphere\u003c/p\u003e\u003cp\u003eLightOJ 1120 //Rectangle\u0027s Union\u003c/p\u003e\u003cp\u003eLightOJ 1130 //Circle x Rectangle intersection\u003c/p\u003e\u003cp\u003eUVA 11177 //Circle x Convex Polygon\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/610/D\"\u003ehttp://codeforces.com/problemset/problem/610/D\u003c/a\u003e //Lines intersections (axes parallel)\u003c/p\u003e\u003cp\u003e6263 [LA] //Pt in areas\u003c/p\u003e\u003cp\u003eLightOJ 1058 //# parallelograma\u003c/p\u003e\u003cp\u003eUVA 12931 //Common area of polygons\u003c/p\u003e\u003cp\u003eUVA 10301 //Intersecting circles\u003c/p\u003e\u003cp\u003eUVA 453 //Circles intersection\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/681/E\"\u003ehttp://codeforces.com/problemset/problem/681/E\u003c/a\u003e //Circles intersection\u003c/p\u003e\u003cp\u003eUVA 920 //Lines intersecion (etc..)\u003c/p\u003e\u003cp\u003eUVA 12556\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/793/C\"\u003ehttp://codeforces.com/problemset/problem/793/C\u003c/a\u003e //Intersection ans similar\u003c/p\u003e\u003cp\u003eUVA 11343 //Intersection of segments\u003c/p\u003e\u003cp\u003eUVA 866 //Intersection of segments\u003c/p\u003e\u003cp\u003eGym 100190I [2011 ACM-ICPC East Central North America (ECNA 2011)] //Segment intersection\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100917/problem/K\"\u003ehttp://codeforces.com/gym/100917/problem/K\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11686 //Segment intersection\u003c/p\u003e\u003cp\u003eLightOJ 1388\u003c/p\u003e\u003cp\u003eUVA 833 //Segment intersection\u003c/p\u003e\u003cp\u003eLightOJ 1196 //Points sides\u003c/p\u003e\u003cp\u003eUVA 10167 //Points sides\u003c/p\u003e\u003cp\u003eUVA 12818 //Arc \u0026amp; Point distance\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SICRANO/\"\u003ehttp://www.spoj.com/problems/SICRANO/\u003c/a\u003e //Point-line distance\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/614/C\"\u003ehttp://codeforces.com/problemset/problem/614/C\u003c/a\u003e //Point-line distance\u003c/p\u003e\u003cp\u003eUVA 13117 //Point-line distance\u003c/p\u003e\u003cp\u003eUVA 12483 //Point-line distance\u003c/p\u003e\u003cp\u003eUVA 12173 //Point-line distance\u003c/p\u003e\u003cp\u003eUVA 10075 //Point distance on sphere\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/booking-hackathon/challenges/nearby-attractions/problem\"\u003ehttps://www.hackerrank.com/contests/booking-hackathon/challenges/nearby-attractions/problem\u003c/a\u003e //Pt sphr\u003c/p\u003e\u003cp\u003eUVA 535 //Point distance on sphere\u003c/p\u003e\u003cp\u003eUVA 10897 //Sphere tavelling\u003c/p\u003e\u003cp\u003eUVA 11817 //Sphere travelling\u003c/p\u003e\u003cp\u003eUVA 10316 //Sphere travelling\u003c/p\u003e\u003cp\u003eUVA 1469 //Fractions distance 3D\u003c/p\u003e\u003cp\u003e11930 \u003c/p\u003e\u003cp\u003e12173 UVA 3\u003c/p\u003e\u003cp\u003e12194 UVA 4\u003c/p\u003e\u003cp\u003e11894 UVA 3\u003c/p\u003e\u003cp\u003e11769 UVA 7\u003c/p\u003e\u003cp\u003e11665 UVA 5\u003c/p\u003e\u003cp\u003e11509 UVA 4\u003c/p\u003e\u003cp\u003e11355 UVA 5\u003c/p\u003e\u003cp\u003e11265 UVA 6 //Nice one | polygon — cut/pt-check/area\u003c/p\u003e\u003cp\u003e11123 UVA 4 //Counting trapezoids\u003c/p\u003e\u003cp\u003e11177 UVA 6 //BS+Polygon/Circle intersection\u003c/p\u003e\u003cp\u003e11186 UVA 3 \u003c/p\u003e\u003cp\u003e11008 UVA 5 //with DP → #intersected triangles\u003c/p\u003e\u003cp\u003e11012 UVA 5 //Nejvzdálenější body (Manhatton 3D)\u003c/p\u003e\u003cp\u003e11072 UVA 4 //Points v poly gonu\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/682/E\"\u003ehttp://codeforces.com/problemset/problem/682/E\u003c/a\u003e 6 (biggest triangle)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/672/problem/C\"\u003ehttp://codeforces.com/contest/672/problem/C\u003c/a\u003e 4 //easy — just think it up\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/667/problem/A\"\u003ehttp://codeforces.com/contest/667/problem/A\u003c/a\u003e 2 //vzorecky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/793/problem/C\"\u003ehttp://codeforces.com/contest/793/problem/C\u003c/a\u003e 5 //EASY but beware of epsilons (NICE)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/794/problem/B\"\u003ehttp://codeforces.com/contest/794/problem/B\u003c/a\u003e 2 //Can be done with BS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/814/problem/D\"\u003ehttp://codeforces.com/contest/814/problem/D\u003c/a\u003e 5 //+DP on trees (NICE — but low geom.)\u003c/p\u003e\u003cp\u003e10750 UVA 3 //Closest points — try all pairs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/820/problem/B\"\u003ehttp://codeforces.com/contest/820/problem/B\u003c/a\u003e 3 //Polygon angle find!\u003c/p\u003e\u003cp\u003e13213 UVA 5 //VERY NICE — Voronoi diagram (low constraints so not actually needed)\u003c/p\u003e\u003cp\u003e13215 UVA 3 //EASY — Sum areas and find side lengths\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCC/\"\u003ehttp://www.spoj.com/problems/IITKWPCC/\u003c/a\u003e (5) //VERY VERY NICE — Nqrt(N)log(N)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NNS/\"\u003ehttp://www.spoj.com/problems/NNS/\u003c/a\u003e (5) Closest points query [fake geometry] {__128}[NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/849/problem/B\"\u003ehttp://codeforces.com/contest/849/problem/B\u003c/a\u003e (3) //X-Product — side\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR12C/\"\u003ehttp://www.spoj.com/problems/AMR12C/\u003c/a\u003e (5) //Point closest to all other points (with speed)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SICRANO/\"\u003ehttp://www.spoj.com/problems/SICRANO/\u003c/a\u003e (3) //Line-Point distance\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VCIRCLES/\"\u003ehttp://www.spoj.com/problems/VCIRCLES/\u003c/a\u003e (5) //Heavy geometrical ****\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CIRU/\"\u003ehttp://www.spoj.com/problems/CIRU/\u003c/a\u003e (5) //Same as above [yet bigger constraints]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/THREETW1/\"\u003ehttp://www.spoj.com/problems/THREETW1/\u003c/a\u003e (4) //Fermat point search\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CLOPPAIR/\"\u003ehttp://www.spoj.com/problems/CLOPPAIR/\u003c/a\u003e (4) //Closest pair of points\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAXLN/\"\u003ehttp://www.spoj.com/problems/MAXLN/\u003c/a\u003e (2) //Some basic (4*r^2+.25)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOLICA/\"\u003ehttp://www.spoj.com/problems/KOLICA/\u003c/a\u003e (4) //VERY NICE [nasty iff party]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/598/problem/C\"\u003ehttp://codeforces.com/contest/598/problem/C\u003c/a\u003e (4) //NICE ~ Precision! [ld]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/18/problem/A\"\u003ehttp://codeforces.com/contest/18/problem/A\u003c/a\u003e (2) //EASY\u0026amp;FINE: Pythagoreas\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/40/problem/A\"\u003ehttp://codeforces.com/contest/40/problem/A\u003c/a\u003e (2) //[EASY][DISTANCE]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egraph\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e2827 [LA] //3Coloring\u003c/p\u003e\u003cp\u003e2243 [LA] //3Coloring\u003c/p\u003e\u003cp\u003e5603 [LA] //Coloring\u003c/p\u003e\u003cp\u003eUVA 1658 //Shortest paths\u003c/p\u003e\u003cp\u003eUVA 12821 //Shortest paths\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/27/problem/D\"\u003ehttp://codeforces.com/contest/27/problem/D\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e11387 (UVA) 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VFRIEND2/\"\u003ehttp://www.spoj.com/problems/VFRIEND2/\u003c/a\u003e (5) //Graph possible check\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/859/problem/E\"\u003ehttp://codeforces.com/contest/859/problem/E\u003c/a\u003e (4) //VERY NICE (2 cases: CYCLE [x2] / TREE [x(Size+1)]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/C\"\u003ehttp://codeforces.com/contest/847/problem/C\u003c/a\u003e (2) //Forest making Easy\u0026amp;Nice\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/863/problem/C\"\u003ehttp://codeforces.com/contest/863/problem/C\u003c/a\u003e (3) //Cycle in states\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egreedy\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e7706 — Pokemons (2) //Sweep and keep maximum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/D\"\u003ehttp://codeforces.com/contest/893/problem/D\u003c/a\u003e (4) //[NICE][SWEEP][MAXIMUM] — pay max when have to\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/892/problem/B\"\u003ehttp://codeforces.com/contest/892/problem/B\u003c/a\u003e (2) //Sweep from back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/102/problem/C\"\u003ehttp://codeforces.com/contest/102/problem/C\u003c/a\u003e (3) //sort by frequency\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/419\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/419\u003c/a\u003e (2) //Sweep from back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/890/problem/C\"\u003ehttp://codeforces.com/contest/890/problem/C\u003c/a\u003e (3) //frequence\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/890/problem/B\"\u003ehttp://codeforces.com/contest/890/problem/B\u003c/a\u003e (2) //[EASY][REVERSE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/888/problem/B\"\u003ehttp://codeforces.com/contest/888/problem/B\u003c/a\u003e (2) //Equalize U/D and L/R\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101597/problem/J\"\u003ehttp://codeforces.com/gym/101597/problem/J\u003c/a\u003e (4) //[NICE][SWEEP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/76/problem/B\"\u003ehttp://codeforces.com/contest/76/problem/B\u003c/a\u003e (4) //[NICE][MATCHING-LIKE][2PTRS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/73/problem/B\"\u003ehttp://codeforces.com/contest/73/problem/B\u003c/a\u003e (4) //[IMPLEMENTATION][SORTING]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/883/problem/K\"\u003ehttp://codeforces.com/contest/883/problem/K\u003c/a\u003e (4) //Nice — Two sweeps\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/49/problem/D\"\u003ehttp://codeforces.com/contest/49/problem/D\u003c/a\u003e (3) //NICE — 1010101 OR 0101010 [haming]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/58/problem/C\"\u003ehttp://codeforces.com/contest/58/problem/C\u003c/a\u003e (4) //NICE — group trees by slopes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/729/problem/D\"\u003ehttp://codeforces.com/contest/729/problem/D\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/729/problem/E\"\u003ehttp://codeforces.com/contest/729/problem/E\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/725/problem/D\"\u003ehttp://codeforces.com/contest/725/problem/D\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/725/problem/F\"\u003ehttp://codeforces.com/contest/725/problem/F\u003c/a\u003e 9\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/732/problem/E\"\u003ehttp://codeforces.com/contest/732/problem/E\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/727/problem/F\"\u003ehttp://codeforces.com/contest/727/problem/F\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/724/problem/D\"\u003ehttp://codeforces.com/contest/724/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/723/problem/C\"\u003ehttp://codeforces.com/contest/723/problem/C\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/719/problem/B\"\u003ehttp://codeforces.com/contest/719/problem/B\u003c/a\u003e 2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/712/problem/C\"\u003ehttp://codeforces.com/contest/712/problem/C\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e13152 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/746/problem/E\"\u003ehttp://codeforces.com/contest/746/problem/E\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/746/problem/D\"\u003ehttp://codeforces.com/contest/746/problem/D\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/749/problem/C\"\u003ehttp://codeforces.com/contest/749/problem/C\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e11737 UVA (3)\u003c/p\u003e\u003cp\u003e11786 UVA (4)\u003c/p\u003e\u003cp\u003e11630 UVA (5)\u003c/p\u003e\u003cp\u003e11563 UVA (4)\u003c/p\u003e\u003cp\u003e11491 UVA (4)\u003c/p\u003e\u003cp\u003e11330 UVA (3)\u003c/p\u003e\u003cp\u003e11089 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/884/problem/D\"\u003ehttp://codeforces.com/contest/884/problem/D\u003c/a\u003e (4) //PQ or Sort\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SQRMINSUM/\"\u003ehttp://www.spoj.com/problems/SQRMINSUM/\u003c/a\u003e 3 //solve-able in O(N+M)-arrayqueue\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MSCHED/\"\u003ehttp://www.spoj.com/problems/MSCHED/\u003c/a\u003e 3 //sweep from back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/status/ns\u003d18780683\"\u003ehttp://www.spoj.com/status/ns\u003d18780683\u003c/a\u003e 4 //all perm + A\u0026lt;B\u0026lt;C works\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NINJA7/\"\u003ehttp://www.spoj.com/problems/NINJA7/\u003c/a\u003e (3) //sort by diff\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NINJA2/\"\u003ehttp://www.spoj.com/problems/NINJA2/\u003c/a\u003e (4) //try all possib. (26)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/767/problem/E\"\u003ehttp://codeforces.com/contest/767/problem/E\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/637/problem/B\"\u003ehttp://codeforces.com/contest/637/problem/B\u003c/a\u003e (3) //NICE pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/777/problem/B\"\u003ehttp://codeforces.com/contest/777/problem/B\u003c/a\u003e (3) // -||-\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/777/problem/D\"\u003ehttp://codeforces.com/contest/777/problem/D\u003c/a\u003e (3) //just go from end\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/779/problem/C\"\u003ehttp://codeforces.com/contest/779/problem/C\u003c/a\u003e (3) //NICE pro prváky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPCU/\"\u003ehttp://www.spoj.com/problems/SPCU/\u003c/a\u003e (2) //Easy — zamysleni (max int \u003d index)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LOPOV/\"\u003ehttp://www.spoj.com/problems/LOPOV/\u003c/a\u003e (4) //sort + queue (or just queue) NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/792/problem/E\"\u003ehttp://codeforces.com/contest/792/problem/E\u003c/a\u003e (5) //T%S\u0026lt;\u003dT/S + check proper\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/807/problem/E\"\u003ehttp://codeforces.com/contest/807/problem/E\u003c/a\u003e (5) //NICE — put asice P2 / rest — greedy from small\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/799/problem/E\"\u003ehttp://codeforces.com/contest/799/problem/E\u003c/a\u003e (5) //Many queues — but NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/808/problem/C\"\u003ehttp://codeforces.com/contest/808/problem/C\u003c/a\u003e (3) //EASY\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/B\"\u003ehttp://codeforces.com/contest/802/problem/B\u003c/a\u003e (4) //Priority by \u0026quot;next\u0026quot;\u003c/p\u003e\u003cp\u003e10850 UVA (4) //Queue a brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/813/problem/A\"\u003ehttp://codeforces.com/contest/813/problem/A\u003c/a\u003e (1) //Zahrivacka pro prvaky\u003c/p\u003e\u003cp\u003e10716 UVA (4) //NICE — always find closest pair\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/816/problem/C\"\u003ehttp://codeforces.com/contest/816/problem/C\u003c/a\u003e (3) //NICE — greater\u0026lt;lesser side\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/820/problem/D\"\u003ehttp://codeforces.com/contest/820/problem/D\u003c/a\u003e (5) //VERY NICE — O(N) -~- 5 events per number\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/B\"\u003ehttp://codeforces.com/contest/818/problem/B\u003c/a\u003e (2) //Zahrivacka pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/822/problem/C\"\u003ehttp://codeforces.com/contest/822/problem/C\u003c/a\u003e (4) //Almost classical Sort+Queue\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/825/problem/C\"\u003ehttp://codeforces.com/contest/825/problem/C\u003c/a\u003e (2) //Nice \u0026amp; Easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/825/problem/D\"\u003ehttp://codeforces.com/contest/825/problem/D\u003c/a\u003e (3) //Update by modulo\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/835/problem/B\"\u003ehttp://codeforces.com/contest/835/problem/B\u003c/a\u003e (2) // Zahhrivacka pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/839/problem/B\"\u003ehttp://codeforces.com/contest/839/problem/B\u003c/a\u003e (3) //Nasty iffs — yet nice excersize\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PCPC12I/\"\u003ehttp://www.spoj.com/problems/PCPC12I/\u003c/a\u003e (4) //Swipe MINIMUM from left/right [10^6-A[i] trick]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR12I/\"\u003ehttp://www.spoj.com/problems/AMR12I/\u003c/a\u003e (3) //NICE a) MAX_SEG\u0026gt;\u003dK b) (SEG_SIZE-1)/K+1\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BUSYMAN/\"\u003ehttp://www.spoj.com/problems/BUSYMAN/\u003c/a\u003e (2) //NICE\u0026amp;EASY — Sort + keep minimum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/861/problem/C\"\u003ehttp://codeforces.com/contest/861/problem/C\u003c/a\u003e (3) //2+ but not same\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WORKB/\"\u003ehttp://www.spoj.com/problems/WORKB/\u003c/a\u003e (3) //Simple \u0026quot;min\u0026quot; formula for each neighbor\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/864/problem/D\"\u003ehttp://codeforces.com/contest/864/problem/D\u003c/a\u003e (4) //VERY NICE — Frequency + unused\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ROADTRIP/\"\u003ehttp://www.spoj.com/problems/ROADTRIP/\u003c/a\u003e (4) //VERY NICE — Keeping last lesser\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/597/problem/B\"\u003ehttp://codeforces.com/contest/597/problem/B\u003c/a\u003e (3) //NICE [Classical]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SHLIGHTS/\"\u003ehttp://www.spoj.com/problems/SHLIGHTS/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MLK/\"\u003ehttp://www.spoj.com/problems/MLK/\u003c/a\u003e (3) //VERY NICE — Sum all prefix sums\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/867/problem/C\"\u003ehttp://codeforces.com/contest/867/problem/C\u003c/a\u003e (4) //NICE [IMPLE][2POINTERS][MID+EPS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/867/problem/E\"\u003ehttp://codeforces.com/contest/867/problem/E\u003c/a\u003e (5) //NICE [EASY-IMPLE][HARD-CONS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/18/problem/D\"\u003ehttp://codeforces.com/contest/18/problem/D\u003c/a\u003e (4) //+Big Integer\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/276/problem/D\"\u003ehttp://codeforces.com/contest/276/problem/D\u003c/a\u003e (4) //NICE — Find first mismatch bit (then 111...111)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/3/problem/B\"\u003ehttp://codeforces.com/contest/3/problem/B\u003c/a\u003e (4) //Divide 1/2 [sort][2pointers]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/3/problem/D\"\u003ehttp://codeforces.com/contest/3/problem/D\u003c/a\u003e (4) //?\u003d\u003d) ..if open \u0026lt; 0: set max A-B to (\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/26/problem/B\"\u003ehttp://codeforces.com/contest/26/problem/B\u003c/a\u003e (4) // +1 ( | -1 ): -1, erase .. erase sum in the end\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/33/problem/A\"\u003ehttp://codeforces.com/contest/33/problem/A\u003c/a\u003e (2) //EASY [long-statement]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/44/problem/E\"\u003ehttp://codeforces.com/contest/44/problem/E\u003c/a\u003e (2) //Try mins then try maxs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/45/problem/D\"\u003ehttp://codeforces.com/contest/45/problem/D\u003c/a\u003e (3) //Priority-queue+\u0027sort\u0027\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ehash\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACLEAN/\"\u003ehttp://www.spoj.com/problems/ADACLEAN/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1503\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1503\u003c/a\u003e (7) //[NICE][BS][OPTI]\u003c/p\u003e\u003cp\u003eGym 101466E [2017 ACM-ICPC, Universidad Nacional de Colombia Programming Contest][NICE]\u003c/p\u003e\u003cp\u003e12012 UVA 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/727/problem/E\"\u003ehttp://codeforces.com/contest/727/problem/E\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/718/problem/D\"\u003ehttp://codeforces.com/contest/718/problem/D\u003c/a\u003e 8\u003c/p\u003e\u003cp\u003e11855 UVA 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/752/problem/D\"\u003ehttp://codeforces.com/contest/752/problem/D\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/825/problem/F\"\u003ehttp://codeforces.com/contest/825/problem/F\u003c/a\u003e 5 //String + Periods\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/835/problem/D\"\u003ehttp://codeforces.com/contest/835/problem/D\u003c/a\u003e 4 //Palindromes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CF25E/\"\u003ehttp://www.spoj.com/problems/CF25E/\u003c/a\u003e (5) //VERY NICE [IMPLE\u0026gt;CONCEPT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/7/problem/D\"\u003ehttp://codeforces.com/contest/7/problem/D\u003c/a\u003e (4) //Palindromes \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/19/problem/C\"\u003ehttp://codeforces.com/contest/19/problem/C\u003c/a\u003e (4) //[NICE]: Not a string\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ehull\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GARDENHU/en/\"\u003ehttp://www.spoj.com/problems/GARDENHU/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e2453 — Wall [LA]\u003c/p\u003e\u003cp\u003eUVA 13213\u003c/p\u003e\u003cp\u003eUVA 11096\u003c/p\u003e\u003cp\u003eGym 100792G [2015-2016 ACM-ICPC, NEERC, Moscow Subregional Contest]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/KTHCON\"\u003ehttps://www.codechef.com/problems/KTHCON\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/605/C\"\u003ehttp://codeforces.com/problemset/problem/605/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 218\u003c/p\u003e\u003cp\u003eUVA 11072\u003c/p\u003e\u003cp\u003e11168 UVA\u003c/p\u003e\u003cp\u003eUVA 12307\u003c/p\u003e\u003cp\u003eGym 100963I [2007-2008 Summer Petrozavodsk Camp, Japanese Contest, 2007-08-29]\u003c/p\u003e\u003cp\u003eUVA 11243\u003c/p\u003e\u003cp\u003eUVA 10256\u003c/p\u003e\u003cp\u003e109 SCUD Busters\u003c/p\u003e\u003cp\u003eUVA 13024 [NICE]\u003c/p\u003e\u003cp\u003eUVA 10002\u003c/p\u003e\u003cp\u003eGym 100886H [2015-2016 Petrozavodsk Winter Training Camp, Saratov SU Contest]\u003c/p\u003e\u003cp\u003eUVA 1139\u003c/p\u003e\u003cp\u003eUVA 681\u003c/p\u003e\u003cp\u003eUVA 811\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/MGCHGEOM\"\u003ehttps://www.codechef.com/problems/MGCHGEOM\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11769 //3D\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003echess\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACHESS/\"\u003ehttp://www.spoj.com/problems/ADACHESS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACHES2/\"\u003ehttp://www.spoj.com/problems/ADACHES2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/42/problem/B\"\u003ehttp://codeforces.com/contest/42/problem/B\u003c/a\u003e (4) //NICE — Checkmate check\u003c/p\u003e\u003cp\u003eUVA 10748 //bfs\u003c/p\u003e\u003cp\u003eLightOJ 1143\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/harry-and-ron-play-a-game-of-chess/\"\u003ehttps://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/harry-and-ron-play-a-game-of-chess/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10196\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KNMOVE/\"\u003ehttp://www.spoj.com/problems/KNMOVE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11352\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAKANJ/\"\u003ehttp://www.spoj.com/problems/NAKANJ/\u003c/a\u003e //BFS\u003c/p\u003e\u003cp\u003eLightOJ 1010\u003c/p\u003e\u003cp\u003eLightOJ 1171 //MM\u003c/p\u003e\u003cp\u003e2883 LA\u003c/p\u003e\u003cp\u003eUVA 439 \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TRKNIGHT/\"\u003ehttp://www.spoj.com/problems/TRKNIGHT/\u003c/a\u003e //??\u003c/p\u003e\u003cp\u003e2308 LA\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CCHESS/\"\u003ehttp://www.spoj.com/problems/CCHESS/\u003c/a\u003e //Dijkstra\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/630/H\"\u003ehttp://codeforces.com/problemset/problem/630/H\u003c/a\u003e //[ROOKS][BIG][COMBINATORICS]\u003c/p\u003e\u003cp\u003eLightOJ 1005 //As above (but with real rooks)\u003c/p\u003e\u003cp\u003eLightOJ 1061 //Placing queens\u003c/p\u003e\u003cp\u003eUVA 11085\u003c/p\u003e\u003cp\u003eUVA 10094 //Queen placing [NICE][PATTERN]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/383\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/383\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11852 UVA (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KLUG1/\"\u003ehttp://www.spoj.com/problems/KLUG1/\u003c/a\u003e (2) //Jumps of horse\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODESPTD/\"\u003ehttp://www.spoj.com/problems/CODESPTD/\u003c/a\u003e (5) //VERY NICE — DP [Queens]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/3/problem/A\"\u003ehttp://codeforces.com/contest/3/problem/A\u003c/a\u003e (2) //Imple — Shortest path for king\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/38/problem/B\"\u003ehttp://codeforces.com/contest/38/problem/B\u003c/a\u003e (2) //NICE — Simple possition checking\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eimplementation\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/108/problem/A\"\u003ehttp://codeforces.com/contest/108/problem/A\u003c/a\u003e (1) //[EASY][PRINT][TIME]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/106/problem/A\"\u003ehttp://codeforces.com/contest/106/problem/A\u003c/a\u003e (1) //Iff-party\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/890/problem/A\"\u003ehttp://codeforces.com/contest/890/problem/A\u003c/a\u003e (1) //if or perm\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/90/problem/B\"\u003ehttp://codeforces.com/contest/90/problem/B\u003c/a\u003e (2) //No idea — just cycles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/75/problem/A\"\u003ehttp://codeforces.com/contest/75/problem/A\u003c/a\u003e (1) //conversion\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/884/problem/B\"\u003ehttp://codeforces.com/contest/884/problem/B\u003c/a\u003e (1) //Simple sum +N-1\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/48/problem/A\"\u003ehttp://codeforces.com/contest/48/problem/A\u003c/a\u003e (1) //Very easy [fe. perm]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/51/my\"\u003ehttp://codeforces.com/contest/51/my\u003c/a\u003e (2) //Lex-lowest-string (|s|\u003d4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/54/problem/A\"\u003ehttp://codeforces.com/contest/54/problem/A\u003c/a\u003e (2) //Single sweep\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/719/problem/C\"\u003ehttp://codeforces.com/contest/719/problem/C\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/747/problem/E\"\u003ehttp://codeforces.com/contest/747/problem/E\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/754/problem/C\"\u003ehttp://codeforces.com/contest/754/problem/C\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e11482 UVA (4)\u003c/p\u003e\u003cp\u003e11291 UVA (3)\u003c/p\u003e\u003cp\u003e11070 UVA (5) //evaluation of expression\u003c/p\u003e\u003cp\u003e11074 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/678/problem/B\"\u003ehttp://codeforces.com/contest/678/problem/B\u003c/a\u003e 2 //calendar days\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/643/problem/A\"\u003ehttp://codeforces.com/contest/643/problem/A\u003c/a\u003e 3 //easy — just simulate\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/770/problem/D\"\u003ehttp://codeforces.com/contest/770/problem/D\u003c/a\u003e 5 //easy — but pain — draw\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/789/problem/B\"\u003ehttp://codeforces.com/contest/789/problem/B\u003c/a\u003e 3 //simulate (mby twice)\u003c/p\u003e\u003cp\u003e13171 UVA (1)\u003c/p\u003e\u003cp\u003e10800 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/828/problem/B\"\u003ehttp://codeforces.com/contest/828/problem/B\u003c/a\u003e 2 //EASY \u0026amp; NICE — just analysis\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/825/problem/B\"\u003ehttp://codeforces.com/contest/825/problem/B\u003c/a\u003e 2 //EASY \u0026amp; NICE — Piskvorky — pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/837/problem/B\"\u003ehttp://codeforces.com/contest/837/problem/B\u003c/a\u003e 2 //Just implementation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/837/problem/C\"\u003ehttp://codeforces.com/contest/837/problem/C\u003c/a\u003e 2 //Some nasty iffs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/845/problem/B\"\u003ehttp://codeforces.com/contest/845/problem/B\u003c/a\u003e 2 //Easy pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/845/problem/D\"\u003ehttp://codeforces.com/contest/845/problem/D\u003c/a\u003e 3 //Iffs — folow the rules\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UNIHW/\"\u003ehttp://www.spoj.com/problems/UNIHW/\u003c/a\u003e 4 //NICE (but many iffs)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/5/problem/A\"\u003ehttp://codeforces.com/contest/5/problem/A\u003c/a\u003e (2) //Parsing\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/5/problem/B\"\u003ehttp://codeforces.com/contest/5/problem/B\u003c/a\u003e (3) //Output formating\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/6/problem/B\"\u003ehttp://codeforces.com/contest/6/problem/B\u003c/a\u003e (2) //Simply check by adjancecy vector + set\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/7/problem/A\"\u003ehttp://codeforces.com/contest/7/problem/A\u003c/a\u003e (1) //Oneinteresting if\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/8/problem/B\"\u003ehttp://codeforces.com/contest/8/problem/B\u003c/a\u003e (2) //Sample vectors + set/or/array\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/12/problem/A\"\u003ehttp://codeforces.com/contest/12/problem/A\u003c/a\u003e (1) //Find mirror by middle\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/16/problem/A\"\u003ehttp://codeforces.com/contest/16/problem/A\u003c/a\u003e (1) //Easy check of chars\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/21/problem/A\"\u003ehttp://codeforces.com/contest/21/problem/A\u003c/a\u003e (2) //Easy but nasty iff imple\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/31/problem/B\"\u003ehttp://codeforces.com/contest/31/problem/B\u003c/a\u003e (2) //Boring imple\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/34/problem/C\"\u003ehttp://codeforces.com/contest/34/problem/C\u003c/a\u003e (3) //Easy string parsing\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/41/problem/C\"\u003ehttp://codeforces.com/contest/41/problem/C\u003c/a\u003e (2) //String parsing\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003einclusion-exclusion\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KPRIMESB/\"\u003ehttp://www.spoj.com/problems/KPRIMESB/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCH/\"\u003ehttp://www.spoj.com/problems/IITKWPCH/\u003c/a\u003e (4) //NICE — on bits\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBSET/\"\u003ehttp://www.spoj.com/problems/SUBSET/\u003c/a\u003e (5) //VERY NICE — 3^10 (^2 but not exactly) (+ sorting)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003einteractive\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/727/problem/C\"\u003ehttp://codeforces.com/contest/727/problem/C\u003c/a\u003e (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/810/problem/D\"\u003ehttp://codeforces.com/contest/810/problem/D\u003c/a\u003e (4) //BS * 3 (same)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/811/problem/D\"\u003ehttp://codeforces.com/contest/811/problem/D\u003c/a\u003e (4) //BFS — easy .. some ifs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/835/problem/E\"\u003ehttp://codeforces.com/contest/835/problem/E\u003c/a\u003e (4) //NICE! Bitsets + Detect + XOR\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/844/problem/D\"\u003ehttp://codeforces.com/contest/844/problem/D\u003c/a\u003e (5) //NICE! Randomized algo\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/862/problem/D\"\u003ehttp://codeforces.com/contest/862/problem/D\u003c/a\u003e (4) //NICE! Find first + Binary Search\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/872/problem/D\"\u003ehttp://codeforces.com/contest/872/problem/D\u003c/a\u003e (4) //NICE! [no clue why it passed]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eisomorphism\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 12489 //Tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/hourrank-16/challenges/jenny-subtrees/problem\"\u003ehttps://www.hackerrank.com/contests/hourrank-16/challenges/jenny-subtrees/problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DSUBTREE/\"\u003ehttp://www.spoj.com/problems/DSUBTREE/\u003c/a\u003e (5) //Isomorphism on trees (try all subsets)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TREEISO/\"\u003ehttp://www.spoj.com/problems/TREEISO/\u003c/a\u003e (4) //Simple isomorphism of trees\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ejosephus\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 151\u003c/p\u003e\u003cp\u003eUVA 1394\u003c/p\u003e\u003cp\u003eUVA 440\u003c/p\u003e\u003cp\u003e3803 [LA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1030\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1030\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12912\u003c/p\u003e\u003cp\u003eUVA 13114\u003c/p\u003e\u003cp\u003e11351 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CLSLDR/\"\u003ehttp://www.spoj.com/problems/CLSLDR/\u003c/a\u003e (4) //Muchas queries — go DP\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKMP\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 12604\u003c/p\u003e\u003cp\u003eUVA 12467\u003c/p\u003e\u003cp\u003eUVA 11019\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAJPF/\"\u003ehttp://www.spoj.com/problems/NAJPF/\u003c/a\u003e (4) //classical kmp — all patterns\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/808/problem/G\"\u003ehttp://codeforces.com/contest/808/problem/G\u003c/a\u003e (6) //with DP -harder\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003elca\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAAPPLE/\"\u003ehttp://www.spoj.com/problems/ADAAPPLE/\u003c/a\u003e [HLD][LCT works too]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAVISIT/\"\u003ehttp://www.spoj.com/problems/ADAVISIT/\u003c/a\u003e [HLD]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADALICI/\"\u003ehttp://www.spoj.com/problems/ADALICI/\u003c/a\u003e [KTH Ancestor — FAST!]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAORANG/\"\u003ehttp://www.spoj.com/problems/ADAORANG/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCA/\"\u003ehttp://www.spoj.com/problems/LCA/\u003c/a\u003e //Easiest one — low constraints [practice]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCASQ/\"\u003ehttp://www.spoj.com/problems/LCASQ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/141\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/141\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12655\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/PSHTTR\"\u003ehttps://www.codechef.com/problems/PSHTTR\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLightOJ 1162\u003c/p\u003e\u003cp\u003eGym 100685G [2012-2013 ACM-ICPC, NEERC, Moscow Subregional Contest]\u003c/p\u003e\u003cp\u003eUVA 12533\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CLOSEFAR\"\u003ehttps://www.codechef.com/problems/CLOSEFAR\u003c/a\u003e //But kinda more comples [ST]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/733/problem/F\"\u003ehttp://codeforces.com/contest/733/problem/F\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e11354 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POLICEMEN/\"\u003ehttp://www.spoj.com/problems/POLICEMEN/\u003c/a\u003e (3) //simple + small graph\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/QTREE2/\"\u003ehttp://www.spoj.com/problems/QTREE2/\u003c/a\u003e (5) //very easy if bin. understrood\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/828/problem/F\"\u003ehttp://codeforces.com/contest/828/problem/F\u003c/a\u003e 7 // Differently MST / Outside\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/832/problem/D\"\u003ehttp://codeforces.com/contest/832/problem/D\u003c/a\u003e (5) //Classical + Depth /OR/ HLD +ST\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DRTREE/\"\u003ehttp://www.spoj.com/problems/DRTREE/\u003c/a\u003e (5) //NICE [finding ancestor + depths]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/838/B\"\u003ehttp://codeforces.com/problemset/problem/838/B\u003c/a\u003e (6) //VERY NICE [HLD + ET + ST]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NTICKETS/\"\u003ehttp://www.spoj.com/problems/NTICKETS/\u003c/a\u003e (4) //Maximum on path\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GRASSPLA/\"\u003ehttp://www.spoj.com/problems/GRASSPLA/\u003c/a\u003e (5) //HLD\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/855/problem/D\"\u003ehttp://codeforces.com/contest/855/problem/D\u003c/a\u003e (4) //VERY VERY BAD STATEMENT (not so bad problem)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003elcs_subsequence\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASEED/\"\u003ehttp://www.spoj.com/problems/ADASEED/\u003c/a\u003e [HUNT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MC/\"\u003ehttp://www.spoj.com/problems/MC/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10192\u003c/p\u003e\u003cp\u003eUVA 531\u003c/p\u003e\u003cp\u003eLightOJ 1110\u003c/p\u003e\u003cp\u003eUVA 12747 //Perm\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/XMEN/\"\u003ehttp://www.spoj.com/problems/XMEN/\u003c/a\u003e //Perm\u003c/p\u003e\u003cp\u003eUVA 10405\u003c/p\u003e\u003cp\u003eUVA 12511 //Increasing\u003c/p\u003e\u003cp\u003eUVA 10635 //Increasing\u003c/p\u003e\u003cp\u003e10949 UVA (6) — Hunt or Bit\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MC/\"\u003ehttp://www.spoj.com/problems/MC/\u003c/a\u003e (3) //Classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCS0/\"\u003ehttp://www.spoj.com/problems/LCS0/\u003c/a\u003e (7) //Bit\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003elct\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAROADS/\"\u003ehttp://www.spoj.com/problems/ADAROADS/\u003c/a\u003e [ONLINE][UPDATES][LCT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DYNALCA/en/\"\u003ehttp://www.spoj.com/problems/DYNALCA/en/\u003c/a\u003e //DYNAMIC LCA \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100460/problem/C\"\u003ehttp://codeforces.com/gym/100460/problem/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100960/problem/H\"\u003ehttp://codeforces.com/gym/100960/problem/H\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DYNACON1/\"\u003ehttp://www.spoj.com/problems/DYNACON1/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/892/problem/E\"\u003ehttp://codeforces.com/contest/892/problem/E\u003c/a\u003e (7) [VERY NICE]//By prices .. LCT\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003elis\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 231\u003c/p\u003e\u003cp\u003eUVA 10131\u003c/p\u003e\u003cp\u003e2931 LA\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDS/\"\u003ehttp://www.spoj.com/problems/NDS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 481\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ELIS/\"\u003ehttp://www.spoj.com/problems/ELIS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 497\u003c/p\u003e\u003cp\u003eUVA 11790\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ALTSEQ/\"\u003ehttp://www.spoj.com/problems/ALTSEQ/\u003c/a\u003e 3 //solvable by FW in Nlog(N)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VISIBLEBOX/\"\u003ehttp://www.spoj.com/problems/VISIBLEBOX/\u003c/a\u003e (4) //with multiset\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DOSA/\"\u003ehttp://www.spoj.com/problems/DOSA/\u003c/a\u003e (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODERE3/\"\u003ehttp://www.spoj.com/problems/CODERE3/\u003c/a\u003e 3 //Low bounds LIS/LDS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BRDGHRD/\"\u003ehttp://www.spoj.com/problems/BRDGHRD/\u003c/a\u003e 4 //lis (nondecreasing)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GONESORT/\"\u003ehttp://www.spoj.com/problems/GONESORT/\u003c/a\u003e 4 //Permutation-lis + riddle statement\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/B\"\u003ehttp://codeforces.com/contest/847/problem/B\u003c/a\u003e 4 //Multiple Lis\u0027s\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/67/problem/D\"\u003ehttp://codeforces.com/contest/67/problem/D\u003c/a\u003e (4) //[NICE][DOUBLE REMAP]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ematching\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPATH/\"\u003ehttp://www.spoj.com/problems/ADAPATH/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACITY/\"\u003ehttp://www.spoj.com/problems/ADACITY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MATCHING/\"\u003ehttp://www.spoj.com/problems/MATCHING/\u003c/a\u003e //Raw (no sauce)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPLNTS/\"\u003ehttp://www.spoj.com/problems/ADAPLNTS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e6234 — Tile Cut (LA)\u003c/p\u003e\u003cp\u003e10080 — Gopher II (UVA) //Easy — sympathic\u003c/p\u003e\u003cp\u003e11419 — SAM I AM (UVA) //Grid-Matching\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101485\"\u003ehttp://codeforces.com/gym/101485\u003c/a\u003e (Elementary Math — E) //Very nice principal [not that hard]\u003c/p\u003e\u003cp\u003e3673 — Black-White Grid (UVA) //Grid\u003c/p\u003e\u003cp\u003e12927 — Points Cover (UVA)\u003c/p\u003e\u003cp\u003e6851 — The Programmers (LA)\u003c/p\u003e\u003cp\u003e6887 — Book Club //NICE\u003c/p\u003e\u003cp\u003e6571 — It Can Be Arranged\u003c/p\u003e\u003cp\u003e12530 — Game of Tiles\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100820\"\u003ehttp://codeforces.com/gym/100820\u003c/a\u003e (Airport — A) //Nice one\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100753\"\u003ehttp://codeforces.com/gym/100753\u003c/a\u003e (Bounty Hunterr II — B) //VERY NICE — I refered multiple times to this principal\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101408\"\u003ehttp://codeforces.com/gym/101408\u003c/a\u003e (Cat vs Dog — C)\u003c/p\u003e\u003cp\u003e1171 — Knights in Chessboard (II) (LOJ) //Classical chess\u003c/p\u003e\u003cp\u003e12644 — Vocabulary\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101047/problem/H\"\u003ehttp://codeforces.com/gym/101047/problem/H\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/659/E\"\u003ehttp://codeforces.com/problemset/problem/659/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12972 — Cuban Challenge (UVA)\u003c/p\u003e\u003cp\u003e1201 — Taxi Cab Scheme (UVA)\u003c/p\u003e\u003cp\u003e12963 — Astragalus Nitidiflorus\u003c/p\u003e\u003cp\u003e6525 — Attacking rooks (LA)\u003c/p\u003e\u003cp\u003e3415 — Guardian of Decency (LA)\u003c/p\u003e\u003cp\u003e12159 — Gun Fight (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CHEFYODA\"\u003ehttps://www.codechef.com/problems/CHEFYODA\u003c/a\u003e //Imho matching is not the crucial part here\u003c/p\u003e\u003cp\u003e12831 — Bob the Builder\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/831/D\"\u003ehttp://codeforces.com/problemset/problem/831/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11262 — Weird Fence\u003c/p\u003e\u003cp\u003e12549 — Sentry Robots\u003c/p\u003e\u003cp\u003e11138 — Nuts and Bolts\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/727/problem/D\"\u003ehttp://codeforces.com/contest/727/problem/D\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e11985 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR12A/\"\u003ehttp://www.spoj.com/problems/AMR12A/\u003c/a\u003e (5) //VERY NICE \u003ca href\u003d\"BS\"\u003egoophers + bonus\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NITT4/\"\u003ehttp://www.spoj.com/problems/NITT4/\u003c/a\u003e (4) //VERY NICE [Chessboard matching]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SCPC11H/\"\u003ehttp://www.spoj.com/problems/SCPC11H/\u003c/a\u003e (4)//NICE — Match those which fits inside\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ematrix\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e12045 UVA (4)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ematrix_exponentiation\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAMONEY/\"\u003ehttp://www.spoj.com/problems/ADAMONEY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12653\u003c/p\u003e\u003cp\u003eLightOJ 1131\u003c/p\u003e\u003cp\u003eUVA — 12470\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/696/D\"\u003ehttp://codeforces.com/problemset/problem/696/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/mathemagic-bits/challenges/gp-on-fibonacci-matrix\"\u003ehttps://www.hackerrank.com/contests/mathemagic-bits/challenges/gp-on-fibonacci-matrix\u003c/a\u003e [accesable?]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/mathemagic-bits/challenges/degree-diameter-on-trees\"\u003ehttps://www.hackerrank.com/contests/mathemagic-bits/challenges/degree-diameter-on-trees\u003c/a\u003e [accesable?]\u003c/p\u003e\u003cp\u003eLightOJ 1052\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/KBIGNUMB\"\u003ehttps://www.codechef.com/problems/KBIGNUMB\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLightOJ 1160\u003c/p\u003e\u003cp\u003eLightOJ 1096\u003c/p\u003e\u003cp\u003eUVA 11486\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/718/C\"\u003ehttp://codeforces.com/problemset/problem/718/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLightOJ 1070\u003c/p\u003e\u003cp\u003eLightOJ 1132\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/621/E\"\u003ehttp://codeforces.com/problemset/problem/621/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003eProject Euler #114: Counting block combinations I\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/821/E\"\u003ehttp://codeforces.com/problemset/problem/821/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 12593 \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/AUG16/problems/SHAIKHGN\"\u003ehttps://www.codechef.com/AUG16/problems/SHAIKHGN\u003c/a\u003e //Not exactly but similar principle\u003c/p\u003e\u003cp\u003e11551 UVA (4)\u003c/p\u003e\u003cp\u003e11486 UVA (5)\u003c/p\u003e\u003cp\u003e10743 UVA (5) //A001169 [easy multi / hard to come with recurence]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/821/problem/E\"\u003ehttp://codeforces.com/contest/821/problem/E\u003c/a\u003e (6) //Not trivial to come-up with matrix\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPCA06/\"\u003ehttp://www.spoj.com/problems/DCEPCA06/\u003c/a\u003e (4) //NICE — 10x10 matrix\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GSWORDS/\"\u003ehttp://www.spoj.com/problems/GSWORDS/\u003c/a\u003e (3) //NICE\u0026amp;EASY — 3-states \u0026quot;OO,OX,XO\u0026quot;\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TETRAHRD/\"\u003ehttp://www.spoj.com/problems/TETRAHRD/\u003c/a\u003e (4) //Easy + Sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NACCI/\"\u003ehttp://www.spoj.com/problems/NACCI/\u003c/a\u003e (4) //Classical (N-Bonacci)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JZPCIR/\"\u003ehttp://www.spoj.com/problems/JZPCIR/\u003c/a\u003e (5) //VERY NICE: A137726\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003emcmf\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGROW/\"\u003ehttp://www.spoj.com/problems/ADAGROW/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/100800\"\u003ehttp://codeforces.com/gym/100800\u003c/a\u003e (Aqueduct Construction — A)\u003c/p\u003e\u003cp\u003e10806 — Dijkstra, Dijkstra.\u003c/p\u003e\u003cp\u003e12944 — Earthquake Disaster\u003c/p\u003e\u003cp\u003e12891 — Risk of Trading\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/HOGON\"\u003ehttps://www.codechef.com/problems/HOGON\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/863/problem/F\"\u003ehttp://codeforces.com/contest/863/problem/F\u003c/a\u003e (5) //VERY NICE\u003c/p\u003e\u003cp\u003e11613 UVA (6)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/C\"\u003ehttp://codeforces.com/contest/802/problem/C\u003c/a\u003e (8) //Nice but hard to see + negative\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/N\"\u003ehttp://codeforces.com/contest/802/problem/N\u003c/a\u003e (5) //Easy but faster MCMF needed\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/G\"\u003ehttp://codeforces.com/contest/818/problem/G\u003c/a\u003e (6) //NICE + MUCH Faster MCMF\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BNMT/\"\u003ehttp://www.spoj.com/problems/BNMT/\u003c/a\u003e (7) //VERY NICE (some optimalisations needed + weird data set)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/884/problem/F\"\u003ehttp://codeforces.com/contest/884/problem/F\u003c/a\u003e (6) //Alphabetical buckets\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003emedian\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/713/problem/C\"\u003ehttp://codeforces.com/contest/713/problem/C\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RMID2/\"\u003ehttp://www.spoj.com/problems/RMID2/\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RMID/\"\u003ehttp://www.spoj.com/problems/RMID/\u003c/a\u003e 3 (as above just not so dynamic)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_ESTA/\"\u003ehttp://www.spoj.com/problems/EC_ESTA/\u003c/a\u003e 4 //classical dynamic median\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPCA09/\"\u003ehttp://www.spoj.com/problems/DCEPCA09/\u003c/a\u003e (6) //VERY NICE [MO +++ MEDIAN, MEAN, FREQ]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003emeet_in_middle\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/888/problem/E\"\u003ehttp://codeforces.com/contest/888/problem/E\u003c/a\u003e (4) //NICE[EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/51/problem/E\"\u003ehttp://codeforces.com/contest/51/problem/E\u003c/a\u003e (6) //NICE[GRAPH][Cycles of length 5]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/245\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/245\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/256\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/256\u003c/a\u003e\u003c/p\u003e\u003cp\u003e11851 UVA (5)\u003c/p\u003e\u003cp\u003e11465 UVA (5)\u003c/p\u003e\u003cp\u003e13207 UVA (4) //Straight-forward MIM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COLOR_CC/\"\u003ehttp://www.spoj.com/problems/COLOR_CC/\u003c/a\u003e (4) //VERY NICE — div by partity (take lesser) → 8^6\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eMO\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAUNIQ/\"\u003ehttp://www.spoj.com/problems/ADAUNIQ/\u003c/a\u003e [Updates]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADANUM/\"\u003ehttp://www.spoj.com/problems/ADANUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPEAR/\"\u003ehttp://www.spoj.com/problems/ADAPEAR/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPHONE/\"\u003ehttp://www.spoj.com/problems/ADAPHONE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFTBLL/\"\u003ehttp://www.spoj.com/problems/ADAFTBLL/\u003c/a\u003e [Tree][Updates]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FREQUENT/\"\u003ehttp://www.spoj.com/problems/FREQUENT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/86/problem/D\"\u003ehttp://codeforces.com/contest/86/problem/D\u003c/a\u003e (4) //[NICE][CLASSICAL]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/877/problem/F\"\u003ehttp://codeforces.com/contest/877/problem/F\u003c/a\u003e (6) //[NICE][NORMALIZE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/687/D\"\u003ehttp://codeforces.com/problemset/problem/687/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/617/E\"\u003ehttp://codeforces.com/problemset/problem/617/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPCA09/\"\u003ehttp://www.spoj.com/problems/DCEPCA09/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COT2/\"\u003ehttp://www.spoj.com/problems/COT2/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/DISTNUM3\"\u003ehttps://www.codechef.com/problems/DISTNUM3\u003c/a\u003e //Tree + Update\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://toph.ws/p/distinct-dishting\"\u003ehttps://toph.ws/p/distinct-dishting\u003c/a\u003e //Not sure if still working??\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CHEFNUMK\"\u003ehttps://www.codechef.com/problems/CHEFNUMK\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/harry-gets-into-infy-1/description/\"\u003ehttps://www.hackerearth.com/problem/algorithm/harry-gets-into-infy-1/description/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COT/\"\u003ehttp://www.spoj.com/problems/COT/\u003c/a\u003e (7) //ON TREE [but very tight TLE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GOT/\"\u003ehttp://www.spoj.com/problems/GOT/\u003c/a\u003e (5) //ON TREE \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CPAIR2/\"\u003ehttp://www.spoj.com/problems/CPAIR2/\u003c/a\u003e (4) //MO + Fenwick [VERY NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HRSIAM/\"\u003ehttp://www.spoj.com/problems/HRSIAM/\u003c/a\u003e (5) //With updates\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KDOMINO/\"\u003ehttp://www.spoj.com/problems/KDOMINO/\u003c/a\u003e (4) //NICE — Frequencies\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003enext\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e13257 — License Plates \u003ca href\u003d\"3\"\u003eUVA\u003c/a\u003e //Brute-Force 26^3 queries in O(1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/92/problem/C\"\u003ehttp://codeforces.com/contest/92/problem/C\u003c/a\u003e (3) //[VERY NICE]\u003c/p\u003e\u003cp\u003eLightOJ 1157\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/ASTRING\"\u003ehttps://www.codechef.com/problems/ASTRING\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN8_E/\"\u003ehttp://www.spoj.com/problems/MAIN8_E/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/701/C\"\u003ehttp://codeforces.com/problemset/problem/701/C\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STRSEQ/\"\u003ehttp://www.spoj.com/problems/STRSEQ/\u003c/a\u003e //+DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/762/C\"\u003ehttp://codeforces.com/problemset/problem/762/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/724/D\"\u003ehttp://codeforces.com/problemset/problem/724/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBSN/\"\u003ehttp://www.spoj.com/problems/SUBSN/\u003c/a\u003e //+BS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-5/challenges/short-palindrome\"\u003ehttps://www.hackerrank.com/contests/world-codesprint-5/challenges/short-palindrome\u003c/a\u003e //+DP\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003enp-hard\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACROW\"\u003ehttp://www.spoj.com/problems/ADACROW\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPARTY/\"\u003ehttp://www.spoj.com/problems/ADAPARTY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPARTI/\"\u003ehttp://www.spoj.com/problems/ADAPARTI/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JOHNNY/\"\u003ehttp://www.spoj.com/problems/JOHNNY/\u003c/a\u003e //Not exact — points\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/839/problem/E\"\u003ehttp://codeforces.com/contest/839/problem/E\u003c/a\u003e (5) //NICE! Max-Clique\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003enumber_rectangle\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 10667 //Largest rectangle\u003c/p\u003e\u003cp\u003eUVA 10074 //Largest rectangle\u003c/p\u003e\u003cp\u003eUVA 836 //Largest rectangle\u003c/p\u003e\u003cp\u003eUVA 1330 //Largest rectangle\u003c/p\u003e\u003cp\u003e12192 UVA 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/729/problem/B\"\u003ehttp://codeforces.com/contest/729/problem/B\u003c/a\u003e 2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/710/problem/C\"\u003ehttp://codeforces.com/contest/710/problem/C\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e11871 UVA 6\u003c/p\u003e\u003cp\u003e11617 UVA (3)\u003c/p\u003e\u003cp\u003e11573 UVA (4)\u003c/p\u003e\u003cp\u003e11499 UVA (5)\u003c/p\u003e\u003cp\u003e11230 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JOCHEF/\"\u003ehttp://www.spoj.com/problems/JOCHEF/\u003c/a\u003e (5) //NICE: Lagers rectange 0/1 O(N*M)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003enumber_theory\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGCD/\"\u003ehttp://www.spoj.com/problems/ADAGCD/\u003c/a\u003e [+STL]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAHACK/\"\u003ehttp://www.spoj.com/problems/ADAHACK/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADADUNG/\"\u003ehttp://www.spoj.com/problems/ADADUNG/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACAROT/\"\u003ehttp://www.spoj.com/problems/ADACAROT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACON/\"\u003ehttp://www.spoj.com/problems/ADACON/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATAXES/\"\u003ehttp://www.spoj.com/problems/ADATAXES/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADADIG/\"\u003ehttp://www.spoj.com/problems/ADADIG/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e8085 — Divisors (4) //[NICE][PRIMES/FACTORISATION/SIEVE]\u003c/p\u003e\u003cp\u003e6589 — Captain Obvious and the Rabbit-Man (7) //Sylvester\u0027s formula\u003c/p\u003e\u003cp\u003e6582 — Magical GCD (4) //[NICE] — Data structures works too\u003c/p\u003e\u003cp\u003e8000 — FizzBuzz (1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/421\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/421\u003c/a\u003e (2) //6 buckets\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/93/problem/E\"\u003ehttp://codeforces.com/contest/93/problem/E\u003c/a\u003e (5) //[VERY NICE][DP][RECURSION]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/86/problem/A\"\u003ehttp://codeforces.com/contest/86/problem/A\u003c/a\u003e (3) //[NICE] 50* is best (unless more digits)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/83/problem/D\"\u003ehttp://codeforces.com/contest/83/problem/D\u003c/a\u003e (5) //[VERY NICE][PRIMES][BRUTE-FORE-2]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/82/problem/A\"\u003ehttp://codeforces.com/contest/82/problem/A\u003c/a\u003e (2) //Simulation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/74/problem/C\"\u003ehttp://codeforces.com/contest/74/problem/C\u003c/a\u003e (4) //gcd\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/76/problem/E\"\u003ehttp://codeforces.com/contest/76/problem/E\u003c/a\u003e (4) //Divide sumations [BF]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/71/problem/C\"\u003ehttp://codeforces.com/contest/71/problem/C\u003c/a\u003e (3) //[EASY][NICE][BRUTE-FORCE][DIVISORS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/70/problem/A\"\u003ehttp://codeforces.com/contest/70/problem/A\u003c/a\u003e (2) //3^(N-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/43/problem/C\"\u003ehttp://codeforces.com/contest/43/problem/C\u003c/a\u003e (2) //Moduly by 3 {0/2+min(1,2)}\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/50/problem/A\"\u003ehttp://codeforces.com/contest/50/problem/A\u003c/a\u003e (1) //[EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/61/problem/C\"\u003ehttp://codeforces.com/contest/61/problem/C\u003c/a\u003e (4) //Base conversion + roman\u003c/p\u003e\u003cp\u003eUVA 355 //bases conversion\u003c/p\u003e\u003cp\u003e2559 [LA] //Base conversion\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/COPRIME3\"\u003ehttps://www.codechef.com/problems/COPRIME3\u003c/a\u003e //Cyka Möbius\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PSTR/\"\u003ehttp://www.spoj.com/problems/PSTR/\u003c/a\u003e //Cyka Möbius\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/803/F\"\u003ehttp://codeforces.com/problemset/problem/803/F\u003c/a\u003e //Cyka Möbius\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/23\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/23\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/731/problem/F\"\u003ehttp://codeforces.com/contest/731/problem/F\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e12031 UVA (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/722/problem/F\"\u003ehttp://codeforces.com/contest/722/problem/F\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/716/problem/C\"\u003ehttp://codeforces.com/contest/716/problem/C\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/711/problem/E\"\u003ehttp://codeforces.com/contest/711/problem/E\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/710/problem/D\"\u003ehttp://codeforces.com/contest/710/problem/D\u003c/a\u003e (6)\u003c/p\u003e\u003cp\u003e13154 (UVA) 7\u003c/p\u003e\u003cp\u003e13166 (UVA) 5\u003c/p\u003e\u003cp\u003e11962 (UVA) 2\u003c/p\u003e\u003cp\u003e11718 UVA 3\u003c/p\u003e\u003cp\u003e11510 UVA (5)\u003c/p\u003e\u003cp\u003e11538 UVA (3) //good one — just math\u003c/p\u003e\u003cp\u003e11556 UVA (1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/757/problem/E\"\u003ehttp://codeforces.com/contest/757/problem/E\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/758/problem/F\"\u003ehttp://codeforces.com/contest/758/problem/F\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e11481 UVA (4)\u003c/p\u003e\u003cp\u003e11237 UVA (4) //Nice — seems like knapsbag but it it not\u003c/p\u003e\u003cp\u003e11155 UVA (4) //Almost as previous problem\u003c/p\u003e\u003cp\u003e11038 UVA (3) //counting digits on interval\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/763/problem/C\"\u003ehttp://codeforces.com/contest/763/problem/C\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e11087 UVA (4) //Sums of two numbers divisible with \u0026lt;\u003d500 (10^5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/678/problem/C\"\u003ehttp://codeforces.com/contest/678/problem/C\u003c/a\u003e 2 //LCM\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/665/F\"\u003ehttp://codeforces.com/problemset/problem/665/F\u003c/a\u003e (8) //p^3 | p*q\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCMSUM/\"\u003ehttp://www.spoj.com/problems/LCMSUM/\u003c/a\u003e //Vzorec v knihovničce\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FRNDZND/\"\u003ehttp://www.spoj.com/problems/FRNDZND/\u003c/a\u003e (2) // (size 1 \u003d\u003d 1, else 0)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EXPOR/\"\u003ehttp://www.spoj.com/problems/EXPOR/\u003c/a\u003e //bit-by-bit (+ formula)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACTDIV/\"\u003ehttp://www.spoj.com/problems/FACTDIV/\u003c/a\u003e (5) //dyn-update of ans/factors GOOD\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PAIRDIV/\"\u003ehttp://www.spoj.com/problems/PAIRDIV/\u003c/a\u003e (6) //cyka möbius -_-\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FCDC/\"\u003ehttp://www.spoj.com/problems/FCDC/\u003c/a\u003e (4) //keep factorized factorial \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NTHPRIME/\"\u003ehttp://www.spoj.com/problems/NTHPRIME/\u003c/a\u003e (7) // BS + NumPrime GOOD!!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVFACT3/\"\u003ehttp://www.spoj.com/problems/DIVFACT3/\u003c/a\u003e (7) // Sieve 10^8 + sqrt search\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVFACT4/\"\u003ehttp://www.spoj.com/problems/DIVFACT4/\u003c/a\u003e (8) // Prime count\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/776/problem/C\"\u003ehttp://codeforces.com/contest/776/problem/C\u003c/a\u003e (4) //segments div. by number\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/776/problem/E\"\u003ehttp://codeforces.com/contest/776/problem/E\u003c/a\u003e (6) //vypsat cisla: f(N)\u003dPhi(N),g(N)\u003dN\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PHT/\"\u003ehttp://www.spoj.com/problems/PHT/\u003c/a\u003e (2) //easy BS (NN+2N) mby math?\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCDEX/\"\u003ehttp://www.spoj.com/problems/GCDEX/\u003c/a\u003e (7) //OEIS A006579 — enough [well imp]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/APS/\"\u003ehttp://www.spoj.com/problems/APS/\u003c/a\u003e (3) //just sieve + generate\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WPC5I/\"\u003ehttp://www.spoj.com/problems/WPC5I/\u003c/a\u003e (3)//fc: C[a]!\u003dC[b]:F[a]^max(C[a],C[b])\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPEC_SET/\"\u003ehttp://www.spoj.com/problems/SPEC_SET/\u003c/a\u003e N→N/k→N/k/k\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC11B/\"\u003ehttp://www.spoj.com/problems/DCEPC11B/\u003c/a\u003e (5) //Wilson\u0027t theorem!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACTMULN/\"\u003ehttp://www.spoj.com/problems/FACTMULN/\u003c/a\u003e (5) //each f[i]/c[i] separately\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPCM/\"\u003ehttp://www.spoj.com/problems/SPCM/\u003c/a\u003e (4) //just factorisation + prime check (10^12)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TWOGAME/\"\u003ehttp://www.spoj.com/problems/TWOGAME/\u003c/a\u003e (5) //gcd \u003d\u003d Power of 3 \u003d\u0026gt; YES\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MKEQUAL/\"\u003ehttp://www.spoj.com/problems/MKEQUAL/\u003c/a\u003e (2) //Chceck if sum is divisible by N\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TIPTOP/\"\u003ehttp://www.spoj.com/problems/TIPTOP/\u003c/a\u003e (3) //sqrt(N)\u003d\u003dN? NICE!!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PSYCHON/\"\u003ehttp://www.spoj.com/problems/PSYCHON/\u003c/a\u003e (4) // fast factorisation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ENIGMATH/\"\u003ehttp://www.spoj.com/problems/ENIGMATH/\u003c/a\u003e (1) // swap and div by gcd\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SNGPG/\"\u003ehttp://www.spoj.com/problems/SNGPG/\u003c/a\u003e (3) // prime gen + check\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/795/problem/A\"\u003ehttp://codeforces.com/contest/795/problem/A\u003c/a\u003e (2) //brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/801/problem/E\"\u003ehttp://codeforces.com/contest/801/problem/E\u003c/a\u003e (6) //NICE! — Clique-DAG + inversion\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/798/problem/C\"\u003ehttp://codeforces.com/contest/798/problem/C\u003c/a\u003e (4) //GCD \u003d\u003d at the beginning OR 2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/803/problem/C\"\u003ehttp://codeforces.com/contest/803/problem/C\u003c/a\u003e (3) //Only \u0026quot;low\u0026quot; K and just divisors\u003c/p\u003e\u003cp\u003e10830 (4) //simple add 2→ sqrt(N) + their mirrors\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/A\"\u003ehttp://codeforces.com/contest/817/problem/A\u003c/a\u003e (2) //check division + parity\u003c/p\u003e\u003cp\u003e13209 UVA (3) //Simple simulation of division (+states rememberance)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/834/problem/C\"\u003ehttp://codeforces.com/contest/834/problem/C\u003c/a\u003e (4) //Has cube-root + both num divisible by cuberoot\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/837/problem/E\"\u003ehttp://codeforces.com/contest/837/problem/E\u003c/a\u003e (5) //Factorisation + GCD attributes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUMMATION/\"\u003ehttp://www.spoj.com/problems/SUMMATION/\u003c/a\u003e (3) //Number contribution: 2^(N-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SECTORS/\"\u003ehttp://www.spoj.com/problems/SECTORS/\u003c/a\u003e (4) //Odd len OR sum of odd indices \u003d\u003d sum of even\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCM/\"\u003ehttp://www.spoj.com/problems/IITKWPCM/\u003c/a\u003e (6) //VERY NICE — Gauss\u0027s generalisation of Wilsons Theorem\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UCV2013A/\"\u003ehttp://www.spoj.com/problems/UCV2013A/\u003c/a\u003e (4) //N*(N^L-1)/(N-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KIMO1/\"\u003ehttp://www.spoj.com/problems/KIMO1/\u003c/a\u003e (4) //NICE — Adding/Subing by modulus\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AFS2/\"\u003ehttp://www.spoj.com/problems/AFS2/\u003c/a\u003e (4) //Sum of divisort (sqrt(N)) — (+128int)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FUNNUMS/\"\u003ehttp://www.spoj.com/problems/FUNNUMS/\u003c/a\u003e (4) //Permutations (get ith + guess ith)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAY99_3/\"\u003ehttp://www.spoj.com/problems/MAY99_3/\u003c/a\u003e (3) //GCD\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PUCMM334/\"\u003ehttp://www.spoj.com/problems/PUCMM334/\u003c/a\u003e (3) //Classical hats problem\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCPC11B/\"\u003ehttp://www.spoj.com/problems/LCPC11B/\u003c/a\u003e (4) //Factorize + count all subsets\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/THREENUMBERS/\"\u003ehttp://www.spoj.com/problems/THREENUMBERS/\u003c/a\u003e (2) //EASY \u0026amp; NICE [lcm]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GAMES/\"\u003ehttp://www.spoj.com/problems/GAMES/\u003c/a\u003e (2) //EASY\u0026amp;NICE — Go discrete (by 10^k) → 10^k/GCD\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBSHARD/\"\u003ehttp://www.spoj.com/problems/SUBSHARD/\u003c/a\u003e (4) //dig*10^sufix*(choose sufix)*^Prefix [VERY NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/INVDIV/\"\u003ehttp://www.spoj.com/problems/INVDIV/\u003c/a\u003e (6) //Sum of divisors function + factorisation [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/JNEXT/\"\u003ehttp://www.spoj.com/problems/JNEXT/\u003c/a\u003e (2) //EASY — Zahřívačka pro prváky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TSHOW1/\"\u003ehttp://www.spoj.com/problems/TSHOW1/\u003c/a\u003e (3) //NICE — Almost as binary repre with 5/6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/859/problem/B\"\u003ehttp://codeforces.com/contest/859/problem/B\u003c/a\u003e (2) //Easy by iteration\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/861/problem/A\"\u003ehttp://codeforces.com/contest/861/problem/A\u003c/a\u003e (2) //5,2 division [EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ABA12D/\"\u003ehttp://www.spoj.com/problems/ABA12D/\u003c/a\u003e (4) //NICE — Formula for sum divisors Prod(Sum(fac-powers))\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN74/\"\u003ehttp://www.spoj.com/problems/MAIN74/\u003c/a\u003e (3) //Fibo\u0027s\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NOSQ/\"\u003ehttp://www.spoj.com/problems/NOSQ/\u003c/a\u003e (3) //Sieve + Digit check\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SQUAREV1/\"\u003ehttp://www.spoj.com/problems/SQUAREV1/\u003c/a\u003e (3) //NICE (but dumb code limit)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/597/problem/A\"\u003ehttp://codeforces.com/contest/597/problem/A\u003c/a\u003e (1) //Simple if+2*Divide\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STREETR/\"\u003ehttp://www.spoj.com/problems/STREETR/\u003c/a\u003e (3) //Easy [GCD]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HPYNOSII/\"\u003ehttp://www.spoj.com/problems/HPYNOSII/\u003c/a\u003e (3) //\u0026lt;\u003d1000 after first move\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HPYNOS/\"\u003ehttp://www.spoj.com/problems/HPYNOS/\u003c/a\u003e (1) //Same as above — 1 number\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITD4/\"\u003ehttp://www.spoj.com/problems/IITD4/\u003c/a\u003e (3) //Brute-force [sieve-like]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GIRLSNBS/\"\u003ehttp://www.spoj.com/problems/GIRLSNBS/\u003c/a\u003e (2) //Some easy formula\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GUESSTHE/\"\u003ehttp://www.spoj.com/problems/GUESSTHE/\u003c/a\u003e (2) //NICE [EASY][LCM]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/867/problem/B\"\u003ehttp://codeforces.com/contest/867/problem/B\u003c/a\u003e (2) //NICE [observation][1 2]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDIVPHI/\"\u003ehttp://www.spoj.com/problems/NDIVPHI/\u003c/a\u003e (4) //NICE — Multiple of lowest primes [BIG-INT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NDIVPHI2/\"\u003ehttp://www.spoj.com/problems/NDIVPHI2/\u003c/a\u003e (5) //NICE — Same as above [bigger constraints]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/6/problem/A\"\u003ehttp://codeforces.com/contest/6/problem/A\u003c/a\u003e (1) //Triangle check (4 pts)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/869/problem/B\"\u003ehttp://codeforces.com/contest/869/problem/B\u003c/a\u003e (1) //Answer is usually 0\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/9/problem/C\"\u003ehttp://codeforces.com/contest/9/problem/C\u003c/a\u003e (2) //Bases (2→ 10)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/20/problem/B\"\u003ehttp://codeforces.com/contest/20/problem/B\u003c/a\u003e (2) //Ax^2+Bx+C\u003d0 (find roots)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/27/problem/E\"\u003ehttp://codeforces.com/contest/27/problem/E\u003c/a\u003e (5) //[VERY NICE]: Factorisation+Recursion\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/32/problem/C\"\u003ehttp://codeforces.com/contest/32/problem/C\u003c/a\u003e (3) //DSU works too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/872/problem/C\"\u003ehttp://codeforces.com/contest/872/problem/C\u003c/a\u003e (3) //NICE — Compose of 4 (mby one 6 or 9)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/876/problem/B\"\u003ehttp://codeforces.com/contest/876/problem/B\u003c/a\u003e (3) //Group by modulo\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eobservation\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABANKET/\"\u003ehttp://www.spoj.com/problems/ADABANKET/\u003c/a\u003e //Observation (but Stoer-Wagner works too)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/892/problem/D\"\u003ehttp://codeforces.com/contest/892/problem/D\u003c/a\u003e (4) //NICE [SORTING]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eoeis\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e6591 — Bus (2) //2^N-1\u003c/p\u003e\u003cp\u003e12004 UVA 2\u003c/p\u003e\u003cp\u003e11273 UVA 5 //https://oeis.org/A001088\u003c/p\u003e\u003cp\u003e11077 UVA 3 //https://oeis.org/A094638\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VECTAR5/\"\u003ehttp://www.spoj.com/problems/VECTAR5/\u003c/a\u003e 3 //https://oeis.org/A038721\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ESYRCRTN/\"\u003ehttp://www.spoj.com/problems/ESYRCRTN/\u003c/a\u003e 2 //generate and see\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITWPC4B/\"\u003ehttp://www.spoj.com/problems/IITWPC4B/\u003c/a\u003e 3 //http://oeis.org/A005044\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POLCONST/\"\u003ehttp://www.spoj.com/problems/POLCONST/\u003c/a\u003e (4) //A003401+Fermat Number (Prime)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CUTCAKE/\"\u003ehttp://www.spoj.com/problems/CUTCAKE/\u003c/a\u003e (3) // pattern [1 22 333 4444 55555]\u003c/p\u003e\u003cp\u003e10872 UVA 3 //Alcuin\u0027s Sequence\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LOVINGPW/\"\u003ehttp://www.spoj.com/problems/LOVINGPW/\u003c/a\u003e (3) //A000788\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CBANK/\"\u003ehttp://www.spoj.com/problems/CBANK/\u003c/a\u003e (3) //A000292 Tetrahedral numbers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GUMATH2/\"\u003ehttp://www.spoj.com/problems/GUMATH2/\u003c/a\u003e (4) //A000240 Modulo by MOD*2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MATHII/\"\u003ehttp://www.spoj.com/problems/MATHII/\u003c/a\u003e (4) //A006218 (Two formulas \u003d\u0026gt; sqrt(N))\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOPC12B/\"\u003ehttp://www.spoj.com/problems/KOPC12B/\u003c/a\u003e (4) //A002457 (factorial + factorial modular)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/YUMMY/\"\u003ehttp://www.spoj.com/problems/YUMMY/\u003c/a\u003e (4) //A006534 \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADV04B1/\"\u003ehttp://www.spoj.com/problems/ADV04B1/\u003c/a\u003e (5) //A001850\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FLWRS/\"\u003ehttp://www.spoj.com/problems/FLWRS/\u003c/a\u003e (4) //A002464\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RANJAN02/\"\u003ehttp://www.spoj.com/problems/RANJAN02/\u003c/a\u003e (3) //A024023\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BOMARBLE/\"\u003ehttp://www.spoj.com/problems/BOMARBLE/\u003c/a\u003e (2) //A000326\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/57/problem/C\"\u003ehttp://codeforces.com/contest/57/problem/C\u003c/a\u003e (4) //A045992\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eoffline\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADARAIN/\"\u003ehttp://www.spoj.com/problems/ADARAIN/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADARAINB/\"\u003ehttp://www.spoj.com/problems/ADARAINB/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAROBOT/\"\u003ehttp://www.spoj.com/problems/ADAROBOT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/816/B\"\u003ehttp://codeforces.com/problemset/problem/816/B\u003c/a\u003e //Easier ST\u003c/p\u003e\u003cp\u003e11266 UVA (6) //slightly knapsack || [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/761/problem/F\"\u003ehttp://codeforces.com/contest/761/problem/F\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UPDATEIT/\"\u003ehttp://www.spoj.com/problems/UPDATEIT/\u003c/a\u003e (2) //basic method\u003c/p\u003e\u003cp\u003e13189 UVA (4) //simulation + sort queries\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HAYBALE/\"\u003ehttp://www.spoj.com/problems/HAYBALE/\u003c/a\u003e (3) //Basic sum + sort (segment tree would work too)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101597/problem/H\"\u003ehttp://codeforces.com/gym/101597/problem/H\u003c/a\u003e (6) //Offline 2D sum + geometry\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003epalindromes\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/883/problem/H\"\u003ehttp://codeforces.com/contest/883/problem/H\u003c/a\u003e (3) //Make as least odd as possible\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_c\"\u003ehttp://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_c\u003c/a\u003e (3) //Similar to remove-dp, but greedy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_d\"\u003ehttp://code-festival-2017-qualc.contest.atcoder.jp/tasks/code_festival_2017_qualc_d\u003c/a\u003e (4) //DP with greedy thinking\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/59/problem/C\"\u003ehttp://codeforces.com/contest/59/problem/C\u003c/a\u003e (3) //Implementation [constructive]\u003c/p\u003e\u003cp\u003eUVA 13092 //manacher\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MSUBSTR/\"\u003ehttp://www.spoj.com/problems/MSUBSTR/\u003c/a\u003e //manacher\u003c/p\u003e\u003cp\u003eUVA 11888 //manacher\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/101hack35/challenges/circular-palindromes\"\u003ehttps://www.hackerrank.com/contests/101hack35/challenges/circular-palindromes\u003c/a\u003e //manacher\u003c/p\u003e\u003cp\u003eUVA 12378 //manacher\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-5/challenges/challenging-palindromes\"\u003ehttps://www.hackerrank.com/contests/world-codesprint-5/challenges/challenging-palindromes\u003c/a\u003e //SA\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NUMOFPAL/\"\u003ehttp://www.spoj.com/problems/NUMOFPAL/\u003c/a\u003e //Palindromic Tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/245/H\"\u003ehttp://codeforces.com/problemset/problem/245/H\u003c/a\u003e //# of palindromes [DP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ANAGR/\"\u003ehttp://www.spoj.com/problems/ANAGR/\u003c/a\u003e 2 //frequency + palindromes\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR12D/\"\u003ehttp://www.spoj.com/problems/AMR12D/\u003c/a\u003e (1) //Palindrome check //Zahrivacka pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/835/D\"\u003ehttp://codeforces.com/problemset/problem/835/D\u003c/a\u003e //Hashing\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003epatter-matching\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e11019 UVA (5)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003epermutations\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/844/problem/C\"\u003ehttp://codeforces.com/contest/844/problem/C\u003c/a\u003e 3 //NICE Permutations in array\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/48/problem/D\"\u003ehttp://codeforces.com/contest/48/problem/D\u003c/a\u003e (3) //NICE [frequency array]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/56/problem/B\"\u003ehttp://codeforces.com/contest/56/problem/B\u003c/a\u003e (2) //Restore from 1 reverse [EASY]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003epersistent_segment_tree\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/F\"\u003ehttp://codeforces.com/contest/893/problem/F\u003c/a\u003e (6) //[VERY NICE][EULER TOUR]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/813/problem/E\"\u003ehttp://codeforces.com/contest/813/problem/E\u003c/a\u003e (6) //Easy but hard data structure\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003epreprocess\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPLUS/\"\u003ehttp://www.spoj.com/problems/ADAPLUS/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASQR/\"\u003ehttp://www.spoj.com/problems/ADASQR/\u003c/a\u003e [Monotone Queue]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/48/problem/B\"\u003ehttp://codeforces.com/contest/48/problem/B\u003c/a\u003e (2) //2D Prefix Sum [BF prolly works too]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/761/F\"\u003ehttp://codeforces.com/problemset/problem/761/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10360 //2D Prefix Sum\u003c/p\u003e\u003cp\u003eUVA 983 //2D Prefix Sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/777/problem/C\"\u003ehttp://codeforces.com/contest/777/problem/C\u003c/a\u003e (4) //NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/818/problem/C\"\u003ehttp://codeforces.com/contest/818/problem/C\u003c/a\u003e (4) //Prefix Sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/834/problem/B\"\u003ehttp://codeforces.com/contest/834/problem/B\u003c/a\u003e (2) //26 queries — NICE rozehrivacka pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RANGESUM/\"\u003ehttp://www.spoj.com/problems/RANGESUM/\u003c/a\u003e (4) //NICE: Offline (delta) + Prefix Sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RANDG/\"\u003ehttp://www.spoj.com/problems/RANDG/\u003c/a\u003e (3) //NICE [but too low bounds] [PrefixSum] [Try all indexes]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HARSHAD/\"\u003ehttp://www.spoj.com/problems/HARSHAD/\u003c/a\u003e (3) //Sieve + simple function\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PUCMM210/\"\u003ehttp://www.spoj.com/problems/PUCMM210/\u003c/a\u003e (3) //Number theory (thinking not necessary)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BCAKE/\"\u003ehttp://www.spoj.com/problems/BCAKE/\u003c/a\u003e (3) //Prefix sum of rectangle + N^4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PAIRSUM/\"\u003ehttp://www.spoj.com/problems/PAIRSUM/\u003c/a\u003e (4) //VERY NICE — Prefix sum + Prefix PW sum\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN111/\"\u003ehttp://www.spoj.com/problems/MAIN111/\u003c/a\u003e (3) //Sieve + Brute Force (answer in O(1))\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PLUSEVI/\"\u003ehttp://www.spoj.com/problems/PLUSEVI/\u003c/a\u003e (4) //NICE — There are not many of them\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/18/problem/C\"\u003ehttp://codeforces.com/contest/18/problem/C\u003c/a\u003e (2) //Prefix sum End\u003d\u003d2*i\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/873/problem/B\"\u003ehttp://codeforces.com/contest/873/problem/B\u003c/a\u003e (2) //Search for same prefix (+/-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/33/problem/C\"\u003ehttp://codeforces.com/contest/33/problem/C\u003c/a\u003e (4) //Prefix sum + Sweep from back + sweep from front\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/872/problem/B\"\u003ehttp://codeforces.com/contest/872/problem/B\u003c/a\u003e (3) //Sweep from both sides (RMQ works too)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eprime-count\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NTHPRIME/\"\u003ehttp://www.spoj.com/problems/NTHPRIME/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIVFACT4/\"\u003ehttp://www.spoj.com/problems/DIVFACT4/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/665/F\"\u003ehttp://codeforces.com/problemset/problem/665/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CNTPRIME\"\u003ehttps://www.codechef.com/problems/CNTPRIME\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUMPRIM1/\"\u003ehttp://www.spoj.com/problems/SUMPRIM1/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUMPRIM2/\"\u003ehttp://www.spoj.com/problems/SUMPRIM2/\u003c/a\u003e [NO — hard]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/projecteuler/challenges/euler010/problem\"\u003ehttps://www.hackerrank.com/contests/projecteuler/challenges/euler010/problem\u003c/a\u003e //easy\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eprime-testing\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGIFT/\"\u003ehttp://www.spoj.com/problems/ADAGIFT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PON/en/\"\u003ehttp://www.spoj.com/problems/PON/en/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DAYOUT2C/en/\"\u003ehttp://www.spoj.com/problems/DAYOUT2C/en/\u003c/a\u003e [EASY]\u003c/p\u003e\u003cp\u003eProject Euler #60: Prime pair sets\u003c/p\u003e\u003cp\u003eProject Euler #58: Spiral primes\u003c/p\u003e\u003cp\u003eProject Euler #131: Prime cube partnership\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/229\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/229\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/327\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/327\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGym 100753K [2015 German Collegiate Programming Contest (GCPC 15) + POI 10-T3]\u003c/p\u003e\u003cp\u003eProject Euler #130: Composites with prime repunit property\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ABA12A/\"\u003ehttp://www.spoj.com/problems/ABA12A/\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e10871 UVA (3) //Easy — fermat not necessary\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POP1/\"\u003ehttp://www.spoj.com/problems/POP1/\u003c/a\u003e (4) //Fast primality testing (or somehow)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POP2/\"\u003ehttp://www.spoj.com/problems/POP2/\u003c/a\u003e (5) //NICE — same as above (yet with ll)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POP3/\"\u003ehttp://www.spoj.com/problems/POP3/\u003c/a\u003e (6) //same as above (yet with big)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC203/\"\u003ehttp://www.spoj.com/problems/DCEPC203/\u003c/a\u003e (6) //NICE [optimalisation]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PRIMPERM/\"\u003ehttp://www.spoj.com/problems/PRIMPERM/\u003c/a\u003e (4) //NICE (next_perm + sieve)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eprobability\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/108/problem/D\"\u003ehttp://codeforces.com/contest/108/problem/D\u003c/a\u003e (4) //[NICE][SIMPLE][COMBINATORICS]\u003c/p\u003e\u003cp\u003e7998 — Election (3) //Math works too [probability][DP]\u003c/p\u003e\u003cp\u003eLightOJ 1104 //Birthday Paradox\u003c/p\u003e\u003cp\u003eGym 101064K [2016 USP Try-outs] //Birthday Paradox\u003c/p\u003e\u003cp\u003e11762 UVA (5)\u003c/p\u003e\u003cp\u003e11427 UVA (5)\u003c/p\u003e\u003cp\u003e11348 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/768/problem/D\"\u003ehttp://codeforces.com/contest/768/problem/D\u003c/a\u003e (4) //With DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITWPC4J/\"\u003ehttp://www.spoj.com/problems/IITWPC4J/\u003c/a\u003e (4) //with DP\u003c/p\u003e\u003cp\u003e10828 UVA (5) //Nice problem but bad statemend: Expected value of visits MC\u003c/p\u003e\u003cp\u003e10777 UVA (4) //NICE — yet solvable with DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/839/problem/C\"\u003ehttp://codeforces.com/contest/839/problem/C\u003c/a\u003e (3) //NICE \u0026amp; Easy \u003d\u0026gt; Tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ZCR/\"\u003ehttp://www.spoj.com/problems/ZCR/\u003c/a\u003e (3) //Easy (+DP)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCN/\"\u003ehttp://www.spoj.com/problems/IITKWPCN/\u003c/a\u003e (2) //Easy — Odd/Eve (black balls)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/846/problem/F\"\u003ehttp://codeforces.com/contest/846/problem/F\u003c/a\u003e (5) // Expected number of unique elements\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BTCODE_H/\"\u003ehttp://www.spoj.com/problems/BTCODE_H/\u003c/a\u003e (4) //DP (but main GROW is idea)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/867/problem/D\"\u003ehttp://codeforces.com/contest/867/problem/D\u003c/a\u003e (5) //VERY NICE [DP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/24/problem/D\"\u003ehttp://codeforces.com/contest/24/problem/D\u003c/a\u003e (5) //VERY NICE [DP]+[TIME]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/28/problem/C\"\u003ehttp://codeforces.com/contest/28/problem/C\u003c/a\u003e (4) //VERY NICE [DP]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003erecursion\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e6585 — Draughts (4) //[NICE][BACKTRACK][DFS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/68/problem/D\"\u003ehttp://codeforces.com/contest/68/problem/D\u003c/a\u003e (5) //[NICE] Keep max and kill branches\u003c/p\u003e\u003cp\u003eUVA 536 //Tree from dfs\u003c/p\u003e\u003cp\u003eUVA 12347 //BST from preorder\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GOC11A/\"\u003ehttp://www.spoj.com/problems/GOC11A/\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e13170 UVA (7) //heavy implementation — but NICE!\u003c/p\u003e\u003cp\u003e10854 UVA (3) //if/else\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/31/problem/D\"\u003ehttp://codeforces.com/contest/31/problem/D\u003c/a\u003e (4) //[NICE] Brute-force by recursion\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/36/problem/B\"\u003ehttp://codeforces.com/contest/36/problem/B\u003c/a\u003e (2) //[NICE][SIMPLE]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eRMQ\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/514/D\"\u003ehttp://codeforces.com/problemset/problem/514/D\u003c/a\u003e //+BS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/872/B\"\u003ehttp://codeforces.com/problemset/problem/872/B\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TNVFC1M/\"\u003ehttp://www.spoj.com/problems/TNVFC1M/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/19\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/19\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/713/problem/D\"\u003ehttp://codeforces.com/contest/713/problem/D\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/675/problem/E\"\u003ehttp://codeforces.com/contest/675/problem/E\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/POSTERIN/\"\u003ehttp://www.spoj.com/problems/POSTERIN/\u003c/a\u003e 5 //VERY NICE — Delete all minimas\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RPLN/\"\u003ehttp://www.spoj.com/problems/RPLN/\u003c/a\u003e (3) //RMQ only\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CITY2/\"\u003ehttp://www.spoj.com/problems/CITY2/\u003c/a\u003e (4) //RMQ + MAP [NICE][VAGUE STATEMENT]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DIFERENC/\"\u003ehttp://www.spoj.com/problems/DIFERENC/\u003c/a\u003e (4) //Solve separately (linear D\u0026amp;C)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/863/problem/E\"\u003ehttp://codeforces.com/contest/863/problem/E\u003c/a\u003e (4) //OR some Queue / sorting\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/5/problem/C\"\u003ehttp://codeforces.com/contest/5/problem/C\u003c/a\u003e (4) //NICE — many other options\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/15/problem/D\"\u003ehttp://codeforces.com/contest/15/problem/D\u003c/a\u003e (5) //VERY NICE 2D RM [sliding-windw][monotone-queue]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/873/problem/E\"\u003ehttp://codeforces.com/contest/873/problem/E\u003c/a\u003e (5) //[NICE][Brute-Force + RMQ]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003erope\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AROPE/\"\u003ehttp://www.spoj.com/problems/AROPE/\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AROPE2/\"\u003ehttp://www.spoj.com/problems/AROPE2/\u003c/a\u003e 5 //same as above (+time)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003escc\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPANEL/\"\u003ehttp://www.spoj.com/problems/ADAPANEL/\u003c/a\u003e [combinatorics]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/894/problem/E\"\u003ehttp://codeforces.com/contest/894/problem/E\u003c/a\u003e (5) //[NICE][DP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/79\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/79\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11838\u003c/p\u003e\u003cp\u003eUVA 247\u003c/p\u003e\u003cp\u003eUVA 13057\u003c/p\u003e\u003cp\u003eUVA 12645\u003c/p\u003e\u003cp\u003eUVA 11770\u003c/p\u003e\u003cp\u003eUVA 12926\u003c/p\u003e\u003cp\u003eUVA 11324\u003c/p\u003e\u003cp\u003eUVA 11709\u003c/p\u003e\u003cp\u003eUVA 12745\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TFRIENDS/\"\u003ehttp://www.spoj.com/problems/TFRIENDS/\u003c/a\u003e (4) //just scc size\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CAPCITY/\"\u003ehttp://www.spoj.com/problems/CAPCITY/\u003c/a\u003e (4) //scc destination [WEAK TC]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/22/problem/E\"\u003ehttp://codeforces.com/contest/22/problem/E\u003c/a\u003e (5) //[NICE][make it strongly connected][SRC\u0026gt;DST]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esegment_tree\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABERRY/\"\u003ehttp://www.spoj.com/problems/ADABERRY/\u003c/a\u003e [+TREAP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAGF/\"\u003ehttp://www.spoj.com/problems/ADAGF/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATREE/\"\u003ehttp://www.spoj.com/problems/ADATREE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/895/problem/E\"\u003ehttp://codeforces.com/contest/895/problem/E\u003c/a\u003e (5) //[PRECISION]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/52/problem/C\"\u003ehttp://codeforces.com/contest/52/problem/C\u003c/a\u003e (4) //Easy [MIN]+[INCREASE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/56/problem/E\"\u003ehttp://codeforces.com/contest/56/problem/E\u003c/a\u003e (5) //[NICE][NORMALIZE][MAX]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/877/problem/E\"\u003ehttp://codeforces.com/contest/877/problem/E\u003c/a\u003e (5) //[VERY NICE][EULER TOUR TREE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/283\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/283\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/315\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/315\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/756/C\"\u003ehttp://codeforces.com/problemset/problem/756/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/739/problem/C\"\u003ehttp://codeforces.com/contest/739/problem/C\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/718/problem/C\"\u003ehttp://codeforces.com/contest/718/problem/C\u003c/a\u003e (8)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/750/problem/E\"\u003ehttp://codeforces.com/contest/750/problem/E\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/759/problem/C\"\u003ehttp://codeforces.com/contest/759/problem/C\u003c/a\u003e (7)\u003c/p\u003e\u003cp\u003e11165 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/763/problem/E\"\u003ehttp://codeforces.com/contest/763/problem/E\u003c/a\u003e (8) //VERY NICE — [non-trivial]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BGSHOOT/\"\u003ehttp://www.spoj.com/problems/BGSHOOT/\u003c/a\u003e (5) //normalize — then easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KGSS/\"\u003ehttp://www.spoj.com/problems/KGSS/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/765/problem/F\"\u003ehttp://codeforces.com/contest/765/problem/F\u003c/a\u003e (7) //VERY NICE — CASCADE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GSS1/\"\u003ehttp://www.spoj.com/problems/GSS1/\u003c/a\u003e (5) //Idea — then easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KQUERYO/\"\u003ehttp://www.spoj.com/problems/KQUERYO/\u003c/a\u003e (5) //Seg-tree of vectors\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/633/problem/G\"\u003ehttp://codeforces.com/contest/633/problem/G\u003c/a\u003e (8) //EulerTree+Seg+Bitset\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NAJ0001/\"\u003ehttp://www.spoj.com/problems/NAJ0001/\u003c/a\u003e (7) //10^8 int — memory (and worked)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PRMQUER/\"\u003ehttp://www.spoj.com/problems/PRMQUER/\u003c/a\u003e (5) //2 segment trees + sieve\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_DIVS/\"\u003ehttp://www.spoj.com/problems/EC_DIVS/\u003c/a\u003e (5) //dunno if intended\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC11I/\"\u003ehttp://www.spoj.com/problems/DCEPC11I/\u003c/a\u003e (5) //NICE — 1,2,3,4,5,.. inc\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/QUE2/\"\u003ehttp://www.spoj.com/problems/QUE2/\u003c/a\u003e (4) //kth number\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/785/problem/E\"\u003ehttp://codeforces.com/contest/785/problem/E\u003c/a\u003e (6) //Seg+Treap [and faster]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/786/problem/B\"\u003ehttp://codeforces.com/contest/786/problem/B\u003c/a\u003e (6) //+Dijkstra\u003c/p\u003e\u003cp\u003e13183 UVA (6) //Merge-Sort-Tree [dunno]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/803/problem/G\"\u003ehttp://codeforces.com/contest/803/problem/G\u003c/a\u003e (5) //VERY NICE!! — ST 10^9 + ST/RMQ 10^5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/794/problem/F\"\u003ehttp://codeforces.com/contest/794/problem/F\u003c/a\u003e (7) //Digit by digit! (N*log(N)*100 )\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/811/problem/E\"\u003ehttp://codeforces.com/contest/811/problem/E\u003c/a\u003e (6) //VERY NICE — DSU (easier Timofey + animals)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/F\"\u003ehttp://codeforces.com/contest/817/problem/F\u003c/a\u003e (7) //10^18 + MEX ~~ NICE yet problematic\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/816/problem/B\"\u003ehttp://codeforces.com/contest/816/problem/B\u003c/a\u003e (3) //Or offline trick makes it easier\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/834/problem/D\"\u003ehttp://codeforces.com/contest/834/problem/D\u003c/a\u003e (5) //+Dynamic Programming | NICE \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SBO/\"\u003ehttp://www.spoj.com/problems/SBO/\u003c/a\u003e (5) //preLast→ last (-1), last→ now (+1) — VERY NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GOODE/\"\u003ehttp://www.spoj.com/problems/GOODE/\u003c/a\u003e (5) //NICE: Inversion + L-Mex\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CNTPRIME/\"\u003ehttp://www.spoj.com/problems/CNTPRIME/\u003c/a\u003e (3) //ST+Sieve (short range)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SEGSQRSS/\"\u003ehttp://www.spoj.com/problems/SEGSQRSS/\u003c/a\u003e (4) //NICE {weak data} ~~ SQRT works too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MON2012/\"\u003ehttp://www.spoj.com/problems/MON2012/\u003c/a\u003e (5) //NICE [Online][10^9 Range]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PARSUMS/\"\u003ehttp://www.spoj.com/problems/PARSUMS/\u003c/a\u003e (4) //But other approaches work too\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/THRBL/\"\u003ehttp://www.spoj.com/problems/THRBL/\u003c/a\u003e (4) //Simple SA — maximum on range \u0026lt;\u003d A[a]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HORRIBLE/\"\u003ehttp://www.spoj.com/problems/HORRIBLE/\u003c/a\u003e (3) //Totally classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MULTQ3/\"\u003ehttp://www.spoj.com/problems/MULTQ3/\u003c/a\u003e (4) //NICE (interesting operation)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PERMPATT/\"\u003ehttp://www.spoj.com/problems/PERMPATT/\u003c/a\u003e (4) //NICE [minimum][+IDEA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/869/problem/E\"\u003ehttp://codeforces.com/contest/869/problem/E\u003c/a\u003e (5) //NICE — 2D [random][XOR]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/19/problem/D\"\u003ehttp://codeforces.com/contest/19/problem/D\u003c/a\u003e (5) //NICE [+BS][+SET] {bs not necessary}\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esequences\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e11885 UVA 7 //Previous problem requested for statement\u003c/p\u003e\u003cp\u003e11522 UVA 3 //Trick — low numbers only :P\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esieve\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/58/problem/B\"\u003ehttp://codeforces.com/contest/58/problem/B\u003c/a\u003e (3) //[NICE][GREEDY][LEAST PRIME FACTOR]\u003c/p\u003e\u003cp\u003eProject Euler #134: Prime pair connection //Segmented\u003c/p\u003e\u003cp\u003e11610 UVA (5)\u003c/p\u003e\u003cp\u003e11353 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TDPRIMES/\"\u003ehttp://www.spoj.com/problems/TDPRIMES/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/VECTAR8/\"\u003ehttp://www.spoj.com/problems/VECTAR8/\u003c/a\u003e (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NFACTOR/\"\u003ehttp://www.spoj.com/problems/NFACTOR/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HS08PAUL/\"\u003ehttp://www.spoj.com/problems/HS08PAUL/\u003c/a\u003e (4) //simply generate\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/776/problem/B\"\u003ehttp://codeforces.com/contest/776/problem/B\u003c/a\u003e (3) //Easy — trict: PM-1/ELSE-2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GGD/\"\u003ehttp://www.spoj.com/problems/GGD/\u003c/a\u003e (4) // N/lowestDiv*(lowestDiv-1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/822/problem/D\"\u003ehttp://codeforces.com/contest/822/problem/D\u003c/a\u003e (4) //DP + Lowest factor\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/NGIRL/\"\u003ehttp://www.spoj.com/problems/NGIRL/\u003c/a\u003e (4) //Squares — Primes + BS \u003d\u003d Easiest\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PTRI/\"\u003ehttp://www.spoj.com/problems/PTRI/\u003c/a\u003e (5) //Very fast sieve necessary:/\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AFS/\"\u003ehttp://www.spoj.com/problems/AFS/\u003c/a\u003e (3) //Sum of divisort + DP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BSPRIME/\"\u003ehttp://www.spoj.com/problems/BSPRIME/\u003c/a\u003e (4) //Very fast sieve needed\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DCEPC505/\"\u003ehttp://www.spoj.com/problems/DCEPC505/\u003c/a\u003e (4) //NICE — at most 10527450\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CUBEFR/\"\u003ehttp://www.spoj.com/problems/CUBEFR/\u003c/a\u003e (3) //NICE — Sieve out k^3 numbers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PRIMES2/\"\u003ehttp://www.spoj.com/problems/PRIMES2/\u003c/a\u003e (8) //VERY NICE — Some hell-shit optimizing\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/26/problem/A\"\u003ehttp://codeforces.com/contest/26/problem/A\u003c/a\u003e (2) //Easy — many ways to solve it\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esimulation\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e7985 — Bumper-to-Bumper Traffic (4) //FINE — We have whole time-lapse\u003c/p\u003e\u003cp\u003e7988 Flow Shop (3) //Do as they say. Trivial but not bad.\u003c/p\u003e\u003cp\u003e7703 — Reading Digits (2) //Simple simulate what they ask for\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/893/problem/A\"\u003ehttp://codeforces.com/contest/893/problem/A\u003c/a\u003e (1) //Easy but nice\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/102/problem/B\"\u003ehttp://codeforces.com/contest/102/problem/B\u003c/a\u003e (2) //Do as they write — log-convergence\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/92/problem/A\"\u003ehttp://codeforces.com/contest/92/problem/A\u003c/a\u003e (1) //Way too easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/88/problem/C\"\u003ehttp://codeforces.com/contest/88/problem/C\u003c/a\u003e (3) //[NUMBER THEORY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/84/problem/D\"\u003ehttp://codeforces.com/contest/84/problem/D\u003c/a\u003e (4) //Priority queue by min*size\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/79/problem/A\"\u003ehttp://codeforces.com/contest/79/problem/A\u003c/a\u003e (1) //Simulate rules\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/A\"\u003ehttp://codeforces.com/contest/879/problem/A\u003c/a\u003e (1) //Iterate day-by-day\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/B\"\u003ehttp://codeforces.com/contest/879/problem/B\u003c/a\u003e (3) //Either at most N^2 or the biggest element [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/D\"\u003ehttp://codeforces.com/contest/879/problem/D\u003c/a\u003e (4) //[NICE][Array elimination]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/46/problem/A\"\u003ehttp://codeforces.com/contest/46/problem/A\u003c/a\u003e (2) //[EASY][MODULO]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/46/problem/B\"\u003ehttp://codeforces.com/contest/46/problem/B\u003c/a\u003e (3) //[EASY][SEARCH-EACH-QUERY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/55/problem/A\"\u003ehttp://codeforces.com/contest/55/problem/A\u003c/a\u003e (2) //Simple (long) simulation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/60/problem/A\"\u003ehttp://codeforces.com/contest/60/problem/A\u003c/a\u003e (1) //Moving LR bounds\u003c/p\u003e\u003cp\u003e12187 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/724/problem/C\"\u003ehttp://codeforces.com/contest/724/problem/C\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/746/problem/C\"\u003ehttp://codeforces.com/contest/746/problem/C\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e11093 UVA (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/768/problem/C\"\u003ehttp://codeforces.com/contest/768/problem/C\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WRONG/\"\u003ehttp://www.spoj.com/problems/WRONG/\u003c/a\u003e (5) //VERY NICE — precalculate from back, then go from front\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/864/problem/C\"\u003ehttp://codeforces.com/contest/864/problem/C\u003c/a\u003e (4) //Not nice — just iffs\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WAGE/\"\u003ehttp://www.spoj.com/problems/WAGE/\u003c/a\u003e (3) //Simple Game Of Life Modification\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/6/problem/C\"\u003ehttp://codeforces.com/contest/6/problem/C\u003c/a\u003e (2) //Simple simulate from both sides\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/9/problem/B\"\u003ehttp://codeforces.com/contest/9/problem/B\u003c/a\u003e (2) //Simulate what is given (+ doubles)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/11/problem/B\"\u003ehttp://codeforces.com/contest/11/problem/B\u003c/a\u003e (3) //sqrt(X) [diff must be even]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/30/problem/A\"\u003ehttp://codeforces.com/contest/30/problem/A\u003c/a\u003e (2) //Simply simulate process [-1000→ 1000]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esorting\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATOMAT/\"\u003ehttp://www.spoj.com/problems/ADATOMAT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAUSORT/\"\u003ehttp://www.spoj.com/problems/ADAUSORT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACUT/\"\u003ehttp://www.spoj.com/problems/ADACUT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/108/problem/B\"\u003ehttp://codeforces.com/contest/108/problem/B\u003c/a\u003e (2) //Easy \u0026amp; Adjacent\u003c/p\u003e\u003cp\u003e8025 — Stacking Cups (2) //Sorting+input\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/892/problem/A\"\u003ehttp://codeforces.com/contest/892/problem/A\u003c/a\u003e (2) //[EASY][SUM]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/2290\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/2290\u003c/a\u003e (3) //Sort+check [fast]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/81/problem/C\"\u003ehttp://codeforces.com/contest/81/problem/C\u003c/a\u003e (3) //MATH[Lesser\u003dgreater][comparator]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/53/problem/D\"\u003ehttp://codeforces.com/contest/53/problem/D\u003c/a\u003e (3) //Bubble sort\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/58/problem/D\"\u003ehttp://codeforces.com/contest/58/problem/D\u003c/a\u003e (4) //[BUCKET][GREEDY][STRING]\u003c/p\u003e\u003cp\u003eUVA 10810 //INV\u003c/p\u003e\u003cp\u003eUVA 11858 //INV\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/645/B\"\u003ehttp://codeforces.com/problemset/problem/645/B\u003c/a\u003e //INV\u003c/p\u003e\u003cp\u003eUVA 10327 //INV\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BUBBLESORT/\"\u003ehttp://www.spoj.com/problems/BUBBLESORT/\u003c/a\u003e //INV\u003c/p\u003e\u003cp\u003eUVA 11495 //INV [GAME]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODESPTB/\"\u003ehttp://www.spoj.com/problems/CODESPTB/\u003c/a\u003e //INV\u003c/p\u003e\u003cp\u003eUVA 13212 //INV\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/749/E\"\u003ehttp://codeforces.com/problemset/problem/749/E\u003c/a\u003e //INV\u003c/p\u003e\u003cp\u003e12189 UVA (3)\u003c/p\u003e\u003cp\u003e12196 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/731/problem/D\"\u003ehttp://codeforces.com/contest/731/problem/D\u003c/a\u003e 7\u003c/p\u003e\u003cp\u003e11925 UVA (4)\u003c/p\u003e\u003cp\u003e11979 UVA (3)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/747/problem/D\"\u003ehttp://codeforces.com/contest/747/problem/D\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e11890 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KAOS/\"\u003ehttp://www.spoj.com/problems/KAOS/\u003c/a\u003e (4) //INV — GOOD problem!!!!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KSMALL/\"\u003ehttp://www.spoj.com/problems/KSMALL/\u003c/a\u003e (5) //fast sort /or/ quick-select\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RKS/\"\u003ehttp://www.spoj.com/problems/RKS/\u003c/a\u003e (3) //use map\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SPCJ/\"\u003ehttp://www.spoj.com/problems/SPCJ/\u003c/a\u003e (4) //reverse + go from back\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/785/problem/B\"\u003ehttp://codeforces.com/contest/785/problem/B\u003c/a\u003e (2) //last-first + vice versa\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/798/problem/D\"\u003ehttp://codeforces.com/contest/798/problem/D\u003c/a\u003e (4) //Take 1st then take best B of every pair (sort by A)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/810/problem/B\"\u003ehttp://codeforces.com/contest/810/problem/B\u003c/a\u003e (2)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/810/problem/C\"\u003ehttp://codeforces.com/contest/810/problem/C\u003c/a\u003e (3) //+Math\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/814/problem/A\"\u003ehttp://codeforces.com/contest/814/problem/A\u003c/a\u003e (1) //Pro prváky — but nice observation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/B\"\u003ehttp://codeforces.com/contest/817/problem/B\u003c/a\u003e (3) //Frequency of TOP 3\u003c/p\u003e\u003cp\u003e10769 UVA (3) //Sadly N^4 passes\u003c/p\u003e\u003cp\u003e13208 UVA (4) //Sort + Prefix Sum\u003c/p\u003e\u003cp\u003e13212 UVA (3) //Number of inversions\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/831/problem/C\"\u003ehttp://codeforces.com/contest/831/problem/C\u003c/a\u003e (3) //NICE ~ Check all \u0026quot;add\u0026quot; against first\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/831/problem/D\"\u003ehttp://codeforces.com/contest/831/problem/D\u003c/a\u003e (4) //Can be solved with BS+Max-Match\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/841/problem/C\"\u003ehttp://codeforces.com/contest/841/problem/C\u003c/a\u003e (3) //NICE — match greatest to lowest\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/845/problem/C\"\u003ehttp://codeforces.com/contest/845/problem/C\u003c/a\u003e (2) //EASY — pro prvaky\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HSHW/\"\u003ehttp://www.spoj.com/problems/HSHW/\u003c/a\u003e (4) //Test every big/low pair + big/big low/low on +/-\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODESPTB/\"\u003ehttp://www.spoj.com/problems/CODESPTB/\u003c/a\u003e (3) //Count inversions [BASIC]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/863/problem/B\"\u003ehttp://codeforces.com/contest/863/problem/B\u003c/a\u003e (2) //Sort and omit 2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/AMR10G/\"\u003ehttp://www.spoj.com/problems/AMR10G/\u003c/a\u003e (2) //Easy yet NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/12/problem/C\"\u003ehttp://codeforces.com/contest/12/problem/C\u003c/a\u003e (2) //Very simple\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/16/problem/B\"\u003ehttp://codeforces.com/contest/16/problem/B\u003c/a\u003e (1) //[EASY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/22/problem/D\"\u003ehttp://codeforces.com/contest/22/problem/D\u003c/a\u003e (3) //Sort by begin + sweep\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/23/problem/C\"\u003ehttp://codeforces.com/contest/23/problem/C\u003c/a\u003e (3) //Take them by pairs + add last\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/24/problem/B\"\u003ehttp://codeforces.com/contest/24/problem/B\u003c/a\u003e (3) //Simple follow the rules\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/27/problem/B\"\u003ehttp://codeforces.com/contest/27/problem/B\u003c/a\u003e (3) //Compare number of victories\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/27/problem/C\"\u003ehttp://codeforces.com/contest/27/problem/C\u003c/a\u003e (4) //[NICE] Find next bigger/lesser (sort)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003espanning_tree\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/76/problem/A\"\u003ehttp://codeforces.com/contest/76/problem/A\u003c/a\u003e (4) //[VERY NICE] Sort by A and KEEP spanning + one edge\u003c/p\u003e\u003cp\u003eLA 6622 — Absurdistan Roads (4) //Plus one edge\u003c/p\u003e\u003cp\u003eUVA 12176\u003c/p\u003e\u003cp\u003eUVA 10600\u003c/p\u003e\u003cp\u003eUVA 10724\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/june-world-codesprint/challenges/johnland\"\u003ehttps://www.hackerrank.com/contests/june-world-codesprint/challenges/johnland\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 11710\u003c/p\u003e\u003cp\u003eGym 101252C [2014-2015 CT S02E05: Codeforces Trainings Season 2 Episode 5 — 2009-2010 ACM-ICPC]\u003c/p\u003e\u003cp\u003eGym 101047I [2015 USP Try-outs][HARD]\u003c/p\u003e\u003cp\u003eUVA 11183 [Directed]\u003c/p\u003e\u003cp\u003eLightOJ 1101\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CHEFELEC\"\u003ehttps://www.codechef.com/problems/CHEFELEC\u003c/a\u003e\u003c/p\u003e\u003cp\u003eUVA 10307\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/598/D\"\u003ehttp://codeforces.com/problemset/problem/598/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/32/C\"\u003ehttp://codeforces.com/problemset/problem/32/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/744/A\"\u003ehttp://codeforces.com/problemset/problem/744/A\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/344\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/344\u003c/a\u003e\u003c/p\u003e\u003cp\u003e908 — Re-connecting Computer Sites [UVA]\u003c/p\u003e\u003cp\u003e1208 — Oreon [UVA]\u003c/p\u003e\u003cp\u003e1235 — Anti Brute Force Lock [UVA]\u003c/p\u003e\u003cp\u003e10034 — Freckles [UVA]\u003c/p\u003e\u003cp\u003e11228 — Transportation system [UVA]\u003c/p\u003e\u003cp\u003e11631 — Dark roads [UVA]\u003c/p\u003e\u003cp\u003e11733 — Airports [UVA]\u003c/p\u003e\u003cp\u003e11747 — Heavy Cycle Edges [UVA]\u003c/p\u003e\u003cp\u003eBLINNET SPOJ (3)\u003c/p\u003e\u003cp\u003e11183 UVA (4) //Directed [need to know algo!]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ULM09/\"\u003ehttp://www.spoj.com/problems/ULM09/\u003c/a\u003e (3) //Sum-Kruskal\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCG/\"\u003ehttp://www.spoj.com/problems/IITKWPCG/\u003c/a\u003e (4) //VERY NICE [log instead of price]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/17/problem/B\"\u003ehttp://codeforces.com/contest/17/problem/B\u003c/a\u003e (3) //Spanning tree [no dsu]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003espfa\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eLightOJ 1074\u003c/p\u003e\u003cp\u003eUVA 1171\u003c/p\u003e\u003cp\u003eUVA 11478\u003c/p\u003e\u003cp\u003eUVA 12768\u003c/p\u003e\u003cp\u003e11478 UVA (5)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esqrt\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e12003 UVA 7\u003c/p\u003e\u003cp\u003e11990 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GIVEAWAY/\"\u003ehttp://www.spoj.com/problems/GIVEAWAY/\u003c/a\u003e (7) //SQRT + BS \u0026gt; [or Seg+Trie]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/786/problem/C\"\u003ehttp://codeforces.com/contest/786/problem/C\u003c/a\u003e (5) //Nsqrn (bg) + sqrSegs (end)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/840/problem/D\"\u003ehttp://codeforces.com/contest/840/problem/D\u003c/a\u003e (5) //NICE — Either frequent OR brute-force\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/13/problem/E\"\u003ehttp://codeforces.com/contest/13/problem/E\u003c/a\u003e //VERY NICE [SQRT-BLOCK UPDATE/JUMP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/85/problem/D\"\u003ehttp://codeforces.com/contest/85/problem/D\u003c/a\u003e (4) //NICE [ST shall work too]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003estl\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADABASET/\"\u003ehttp://www.spoj.com/problems/ADABASET/\u003c/a\u003e [IO-testing][ARRAY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADALIST/\"\u003ehttp://www.spoj.com/problems/ADALIST/\u003c/a\u003e [ROPE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFIELD/\"\u003ehttp://www.spoj.com/problems/ADAFIELD/\u003c/a\u003e [SET]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAQUEUE/\"\u003ehttp://www.spoj.com/problems/ADAQUEUE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFRIEN/\"\u003ehttp://www.spoj.com/problems/ADAFRIEN/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e3396 — Alphabetics (2) //Getline, letters identification\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/81/problem/A\"\u003ehttp://codeforces.com/contest/81/problem/A\u003c/a\u003e (2) //Stack OR string\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/78/problem/A\"\u003ehttp://codeforces.com/contest/78/problem/A\u003c/a\u003e (1) //fgets + imple\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/69/problem/E\"\u003ehttp://codeforces.com/contest/69/problem/E\u003c/a\u003e (3) //NICE [2POINTERS][SET][MAP]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RMID/\"\u003ehttp://www.spoj.com/problems/RMID/\u003c/a\u003e //Dynamic Median\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RMID2/\"\u003ehttp://www.spoj.com/problems/RMID2/\u003c/a\u003e //Dynamic Median\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/713/C\"\u003ehttp://codeforces.com/problemset/problem/713/C\u003c/a\u003e //Dynamic Median\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EC_ESTA/\"\u003ehttp://www.spoj.com/problems/EC_ESTA/\u003c/a\u003e //Dynamic median\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/799/problem/B\"\u003ehttp://codeforces.com/contest/799/problem/B\u003c/a\u003e (2) //EASY — MAP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/808/problem/D\"\u003ehttp://codeforces.com/contest/808/problem/D\u003c/a\u003e (3) //MAP\u003c/p\u003e\u003cp\u003e10887 (2) //string + map\u003c/p\u003e\u003cp\u003e10730 (3) //Easy with hash-map\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/821/problem/C\"\u003ehttp://codeforces.com/contest/821/problem/C\u003c/a\u003e (3) //STACK (vector) Nice+Easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SOLVEIT/\"\u003ehttp://www.spoj.com/problems/SOLVEIT/\u003c/a\u003e (3) //Set + lower_bound\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCA/\"\u003ehttp://www.spoj.com/problems/IITKWPCA/\u003c/a\u003e (2) //Set + getline\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/849/problem/D\"\u003ehttp://codeforces.com/contest/849/problem/D\u003c/a\u003e (5) //Queue\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CRAN02/\"\u003ehttp://www.spoj.com/problems/CRAN02/\u003c/a\u003e (4) //Map (+Math)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAX_NUM/\"\u003ehttp://www.spoj.com/problems/MAX_NUM/\u003c/a\u003e (4) //Queue (possibly multiple ways)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SID/\"\u003ehttp://www.spoj.com/problems/SID/\u003c/a\u003e (5) //Sort + Vector (or similar) [strict TLE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RPLD/\"\u003ehttp://www.spoj.com/problems/RPLD/\u003c/a\u003e (2) //Map of sets\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/861/problem/D\"\u003ehttp://codeforces.com/contest/861/problem/D\u003c/a\u003e (4) //unordered map of sets\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FACEFRND/\"\u003ehttp://www.spoj.com/problems/FACEFRND/\u003c/a\u003e (2) //Set or Bitset\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HACKRNDM/\"\u003ehttp://www.spoj.com/problems/HACKRNDM/\u003c/a\u003e (3) //Easy — map\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/K\"\u003ehttp://codeforces.com/contest/847/problem/K\u003c/a\u003e (4) //NICE Map+Queue\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/855/problem/A\"\u003ehttp://codeforces.com/contest/855/problem/A\u003c/a\u003e (1) //set\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/4/problem/C\"\u003ehttp://codeforces.com/contest/4/problem/C\u003c/a\u003e (2) //map+string\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/5/problem/E\"\u003ehttp://codeforces.com/contest/5/problem/E\u003c/a\u003e (6) //iffs + RMQ+BS+SET [or other sol]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/44/problem/A\"\u003ehttp://codeforces.com/contest/44/problem/A\u003c/a\u003e (1) //Set + pair\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/45/problem/C\"\u003ehttp://codeforces.com/contest/45/problem/C\u003c/a\u003e (4) //NICE — Handling with sets\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003estrings\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/890/problem/D\"\u003ehttp://codeforces.com/contest/890/problem/D\u003c/a\u003e (4) //[NICE][SET][SORTING][26][BRUTE-FORCE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/43/problem/B\"\u003ehttp://codeforces.com/contest/43/problem/B\u003c/a\u003e (2) //Frequency\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/50/problem/B\"\u003ehttp://codeforces.com/contest/50/problem/B\u003c/a\u003e (2) //Frequency + Power\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MINMOVE/\"\u003ehttp://www.spoj.com/problems/MINMOVE/\u003c/a\u003e (3) //Minimal lexicographical rotation\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BWHEELER/\"\u003ehttp://www.spoj.com/problems/BWHEELER/\u003c/a\u003e //Burrows Wheeler\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/EDIST/\"\u003ehttp://www.spoj.com/problems/EDIST/\u003c/a\u003e //Edit Distance\u003c/p\u003e\u003cp\u003e3189 LA //Edit Distance\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/morgan-stanley-2015/challenges/minimum-transformation-cost/problem\"\u003ehttps://www.hackerrank.com/contests/morgan-stanley-2015/challenges/minimum-transformation-cost/problem\u003c/a\u003e //Edit Distance\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/gym/101492/problem/L\"\u003ehttp://codeforces.com/gym/101492/problem/L\u003c/a\u003e //Laevenstein Distance\u003c/p\u003e\u003cp\u003eUVA 13068 //Lexicographically lowest rotation\u003c/p\u003e\u003cp\u003e2755 [LA]//Lexicographically lowest rotation\u003c/p\u003e\u003cp\u003eLightOJ 1073 //Lexicographically Shortest Superstring\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/762/problem/C\"\u003ehttp://codeforces.com/contest/762/problem/C\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCS0/\"\u003ehttp://www.spoj.com/problems/LCS0/\u003c/a\u003e 10 //LCS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITWPC4H/\"\u003ehttp://www.spoj.com/problems/IITWPC4H/\u003c/a\u003e 2 //Frequence array\u003c/p\u003e\u003cp\u003e13186 UVA (6) //Bitset + Trie ~ NICE [6-7 mby?]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/798/problem/B\"\u003ehttp://codeforces.com/contest/798/problem/B\u003c/a\u003e (2) //Brute-force .. pro prváky\u003c/p\u003e\u003cp\u003e10745 UVA (4) //Frequency (N^2 possible if efficient!!)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/822/problem/B\"\u003ehttp://codeforces.com/contest/822/problem/B\u003c/a\u003e (2) //Easy pro prvaky (slightly imple.)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/828/problem/C\"\u003ehttp://codeforces.com/contest/828/problem/C\u003c/a\u003e (4) //+Sorting (process only necessary!)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/832/problem/B\"\u003ehttp://codeforces.com/contest/832/problem/B\u003c/a\u003e (3) //Naive compare back+front [+freq]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STC04/\"\u003ehttp://www.spoj.com/problems/STC04/\u003c/a\u003e (5) //Next + pairs O(N*26) [frist look O(26^2*N)]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITKWPCJ/\"\u003ehttp://www.spoj.com/problems/IITKWPCJ/\u003c/a\u003e (4) //GCD or HASHING\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBSN/\"\u003ehttp://www.spoj.com/problems/SUBSN/\u003c/a\u003e (4) //Next (NICE — bad input): \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BOGGLE/\"\u003ehttp://www.spoj.com/problems/BOGGLE/\u003c/a\u003e (2) //EASY [MAP][STREAM]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MAIN8_E/\"\u003ehttp://www.spoj.com/problems/MAIN8_E/\u003c/a\u003e (4) //VERY NICE — Next function\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/STRMATCH/\"\u003ehttp://www.spoj.com/problems/STRMATCH/\u003c/a\u003e (3) //Nice matching, yet low constraints on \u0026quot;N\u0026quot;\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/FINDSR/\"\u003ehttp://www.spoj.com/problems/FINDSR/\u003c/a\u003e (3) //Clever bruteforce works here (NlogN)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/39/problem/J\"\u003ehttp://codeforces.com/contest/39/problem/J\u003c/a\u003e (2) //Simple iteration over string\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/876/problem/E\"\u003ehttp://codeforces.com/contest/876/problem/E\u003c/a\u003e (4) //Compare from back + make fail-pairs\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003esuffix_array\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPHOTO/\"\u003ehttp://www.spoj.com/problems/ADAPHOTO/\u003c/a\u003e [or hashing after turboanalisis]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASTRNG/\"\u003ehttp://www.spoj.com/problems/ADASTRNG/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e8086 Substring Sorting (7) //[VERY NICE][RMQ][BS][PST]\u003c/p\u003e\u003cp\u003e7702 — Castle //6 [VERY NICE][RMQ][BS][FW]\u003c/p\u003e\u003cp\u003e7701 — Favorite music //8 [VERY NICE][RMQ][SEARCH][OPTI] //WRONG TIME-LIMIT\u003d\u003dOPTI\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1530\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1530\u003c/a\u003e //7 [VERY NICE][RMQ][SET][OFFLINE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/2000\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/2000\u003c/a\u003e (5) //Basic disubstr counting\u003c/p\u003e\u003cp\u003eUVA 760 //LCS\u003c/p\u003e\u003cp\u003eUVA 1227 //LCS\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCS/en/\"\u003ehttp://www.spoj.com/problems/LCS/en/\u003c/a\u003e //LCS\u003c/p\u003e\u003cp\u003eUVA 11512\u003c/p\u003e\u003cp\u003e7502 [LA]\u003c/p\u003e\u003cp\u003eGym 100923D [2015 ACM National Contest Romania — Round 1]\u003c/p\u003e\u003cp\u003eUVA 1254\u003c/p\u003e\u003cp\u003eUVA 12191\u003c/p\u003e\u003cp\u003eUVA 12206\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/INSQ16F\"\u003ehttps://www.codechef.com/problems/INSQ16F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e3943 LA\u003c/p\u003e\u003cp\u003eUVA 11107\u003c/p\u003e\u003cp\u003eUVA 12974\u003c/p\u003e\u003cp\u003eUVA 10526\u003c/p\u003e\u003cp\u003eDavos and Reading [INSOMNIA] //Awesome problem but can\u0027t find link [hard] — non of regular judges\u003c/p\u003e\u003cp\u003eUVA 12338\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://devskill.com/CodingProblems/ViewProblem/328\"\u003ehttps://devskill.com/CodingProblems/ViewProblem/328\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12191 UVA 5\u003c/p\u003e\u003cp\u003eSARRAY SPOJ 3\u003c/p\u003e\u003cp\u003e4513 LA 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LCS2/\"\u003ehttp://www.spoj.com/problems/LCS2/\u003c/a\u003e 7 // must be linear (SA+LCP+MQ)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/802/problem/I\"\u003ehttp://codeforces.com/contest/802/problem/I\u003c/a\u003e 7 //NICE! SA+LCP+(Segmentree/queue)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/LONGCS/\"\u003ehttp://www.spoj.com/problems/LONGCS/\u003c/a\u003e //5 LCS of multiple strings (NICE)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBLEX/\"\u003ehttp://www.spoj.com/problems/SUBLEX/\u003c/a\u003e //5 VERY NICE: Kth substring\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/873/problem/F\"\u003ehttp://codeforces.com/contest/873/problem/F\u003c/a\u003e //6 VERY NICE: SA+Histogram\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/30/problem/E\"\u003ehttp://codeforces.com/contest/30/problem/E\u003c/a\u003e //7 VERY NICE: [many other sols: Manach/KMP/HASH...]\u003c/p\u003e\u003cp\u003e6856 — Circle of digits //7 [VERY NICE]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eternary_search\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eLightOJ 1146\u003c/p\u003e\u003cp\u003eGym 101482G [2014-2015 Northwestern European Regional Contest (NWERC 2014)]\u003c/p\u003e\u003cp\u003eGym 101309D [2010-2011 ACM-ICPC Northeastern European Regional Contest (NEERC 10)]\u003c/p\u003e\u003cp\u003eUVA 13010 //+Dijkstra\u003c/p\u003e\u003cp\u003e2015-2016 CTU Open Contest: Chasing the Cheetah\u003c/p\u003e\u003cp\u003e12197 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOPC12A/\"\u003ehttp://www.spoj.com/problems/KOPC12A/\u003c/a\u003e (4) //TS (sadly brute-force works too N^2)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etopo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 11686\u003c/p\u003e\u003cp\u003eLightOJ 1034\u003c/p\u003e\u003cp\u003eUVA 10305\u003c/p\u003e\u003cp\u003e124 — Following Orders [UVA]\u003c/p\u003e\u003cp\u003e200 — Rare Order [UVA]\u003c/p\u003e\u003cp\u003e872 — Ordering [UVA]\u003c/p\u003e\u003cp\u003e11060 — Beverages [UVA]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/765/problem/E\"\u003ehttp://codeforces.com/contest/765/problem/E\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/770/problem/C\"\u003ehttp://codeforces.com/contest/770/problem/C\u003c/a\u003e 4 //reduce + toposort\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/825/problem/E\"\u003ehttp://codeforces.com/contest/825/problem/E\u003c/a\u003e 4 //Toposort from biggest/backward\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODESPTI/\"\u003ehttp://www.spoj.com/problems/CODESPTI/\u003c/a\u003e (6) //VERY NICE — Hard/Weak children\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/47/problem/B\"\u003ehttp://codeforces.com/contest/47/problem/B\u003c/a\u003e (2) //[EASY][Toposort on 3 elements]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etreap\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/879/problem/E\"\u003ehttp://codeforces.com/contest/879/problem/E\u003c/a\u003e (6) //[VERY NICE][Making somponents]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAAPHID/\"\u003ehttp://www.spoj.com/problems/ADAAPHID/\u003c/a\u003e [or clever fenwick][or SQRT-tree]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADACROP/\"\u003ehttp://www.spoj.com/problems/ADACROP/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/762/problem/E\"\u003ehttp://codeforces.com/contest/762/problem/E\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/COUNT1IT/\"\u003ehttp://www.spoj.com/problems/COUNT1IT/\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/IITWPC4D/\"\u003ehttp://www.spoj.com/problems/IITWPC4D/\u003c/a\u003e 4 //From end — pick i-th + del i-th\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ALLIN1/\"\u003ehttp://www.spoj.com/problems/ALLIN1/\u003c/a\u003e 4 //Typical treap operations\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/847/problem/D\"\u003ehttp://codeforces.com/contest/847/problem/D\u003c/a\u003e 5 //Prolly overkill — VERY NICE\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/863/problem/D\"\u003ehttp://codeforces.com/contest/863/problem/D\u003c/a\u003e 4 //Not desired solution\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOILINE/\"\u003ehttp://www.spoj.com/problems/KOILINE/\u003c/a\u003e (4) //VERY NICE — Iterate from back — get+remove\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TWIST/\"\u003ehttp://www.spoj.com/problems/TWIST/\u003c/a\u003e (5) //NICE: Reverse \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MEANARR/\"\u003ehttp://www.spoj.com/problems/MEANARR/\u003c/a\u003e (5) //VERY NICE! [POLICY][SHORT]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etree\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADATOMEL/\"\u003ehttp://www.spoj.com/problems/ADATOMEL/\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/894/problem/D\"\u003ehttp://codeforces.com/contest/894/problem/D\u003c/a\u003e (5) //[NICE][MERGING][BINARY]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/746/problem/G\"\u003ehttp://codeforces.com/contest/746/problem/G\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/750/problem/F\"\u003ehttp://codeforces.com/contest/750/problem/F\u003c/a\u003e 9\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/RTREE/\"\u003ehttp://www.spoj.com/problems/RTREE/\u003c/a\u003e 3 //longest path tree — query\u003c/p\u003e\u003cp\u003e13175 UVA (2) //something like preorder build\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/796/problem/C\"\u003ehttp://codeforces.com/contest/796/problem/C\u003c/a\u003e (3) //Just counting — inc by at most 2\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/797/problem/D\"\u003ehttp://codeforces.com/contest/797/problem/D\u003c/a\u003e (4) //VERY NICE — sort + D\u0026amp;C all\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/805/problem/E\"\u003ehttp://codeforces.com/contest/805/problem/E\u003c/a\u003e (4) //NICE — Treewidth coloring (greedy)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/828/problem/D\"\u003ehttp://codeforces.com/contest/828/problem/D\u003c/a\u003e (3) //Star construction\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TREEDEGREE/\"\u003ehttp://www.spoj.com/problems/TREEDEGREE/\u003c/a\u003e (3) //Degree from euler tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/UCV2013J/\"\u003ehttp://www.spoj.com/problems/UCV2013J/\u003c/a\u003e (3) //Find what is leaf in Binary Tree\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GCPC11J/\"\u003ehttp://www.spoj.com/problems/GCPC11J/\u003c/a\u003e (3) //Finding ceter\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/34/problem/D\"\u003ehttp://codeforces.com/contest/34/problem/D\u003c/a\u003e (3) //Simple reconstruction + DFS\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etree-dp\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADASALES/\"\u003ehttp://www.spoj.com/problems/ADASALES/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PT07X/\"\u003ehttp://www.spoj.com/problems/PT07X/\u003c/a\u003e (4) //Classical- VC on tree [NICE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/81/problem/E\"\u003ehttp://codeforces.com/contest/81/problem/E\u003c/a\u003e (6) //[NICE][PSEUDOFOREST REDUCTION]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/61/problem/D\"\u003ehttp://codeforces.com/contest/61/problem/D\u003c/a\u003e (4) //dfs-only might works too \u003c/p\u003e\u003cp\u003eLA 6631 — Jingle Balls (4) //[NICE][SIMPLE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/TRANDED\"\u003ehttps://www.codechef.com/problems/TRANDED\u003c/a\u003e //By \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/sahil070197\" title\u003d\"Specialist sahil070197\"\u003esahil070197\u003c/a\u003e\u003c/p\u003e\u003cp\u003e13089 — Golden Coins (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/855/C\"\u003ehttp://codeforces.com/problemset/problem/855/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/718/D\"\u003ehttp://codeforces.com/problemset/problem/718/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/TWOCOINS\"\u003ehttps://www.codechef.com/problems/TWOCOINS\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/101hack35/challenges/road-maintenance/problem\"\u003ehttps://www.hackerrank.com/contests/101hack35/challenges/road-maintenance/problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003e7649 — Performance Review (LA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/741/D\"\u003ehttp://codeforces.com/problemset/problem/741/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/592/D\"\u003ehttp://codeforces.com/problemset/problem/592/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/TOMJERGA\"\u003ehttps://www.codechef.com/problems/TOMJERGA\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/814/D\"\u003ehttp://codeforces.com/problemset/problem/814/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e1220 — Party at Hali-Bula (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/june-world-codesprint/challenges/r-tree-decoration/problem\"\u003ehttps://www.hackerrank.com/contests/june-world-codesprint/challenges/r-tree-decoration/problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12452 — Plants vs. Zombies HD SP (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/735/E\"\u003ehttp://codeforces.com/problemset/problem/735/E\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/COLTREE\"\u003ehttps://www.codechef.com/problems/COLTREE\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12466 — Ancestors (UVA)\u003c/p\u003e\u003cp\u003e6829 — Intrepid climber (LA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/101hack35/challenges/jeanies-route\"\u003ehttps://www.hackerrank.com/contests/101hack35/challenges/jeanies-route\u003c/a\u003e\u003c/p\u003e\u003cp\u003e12257 — The Queue (UVA)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/805/F\"\u003ehttp://codeforces.com/problemset/problem/805/F\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/763/D\"\u003ehttp://codeforces.com/problemset/problem/763/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e1218 — Perfect Service\u003c/p\u003e\u003cp\u003e3346 — Perfect Domination on Trees (same as above -_-)\u003c/p\u003e\u003cp\u003e12093 — Protecting Zonk\u003c/p\u003e\u003cp\u003e10859 — Placing Lampposts\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/23/E\"\u003ehttp://codeforces.com/problemset/problem/23/E\u003c/a\u003e //NICE [but requires big int]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/14/D\"\u003ehttp://codeforces.com/problemset/problem/14/D\u003c/a\u003e (5) //NICE [sorting-one][2DFS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TWOPATHS/\"\u003ehttp://www.spoj.com/problems/TWOPATHS/\u003c/a\u003e (6) //VERY NICE Same as above ~ bigger constraints\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/868/problem/E\"\u003ehttp://codeforces.com/contest/868/problem/E\u003c/a\u003e (8) //VERY NICE — HARD — on tree\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etrie_bit\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/888/problem/G\"\u003ehttp://codeforces.com/contest/888/problem/G\u003c/a\u003e (5) //NICE[BIT-BY-BIT D\u0026amp;C]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/842/problem/D\"\u003ehttp://codeforces.com/contest/842/problem/D\u003c/a\u003e //Proposed by \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/usernameson\" title\u003d\"Expert usernameson\"\u003eusernameson\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/706/D\"\u003ehttp://codeforces.com/problemset/problem/706/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/w8/challenges/black-box-1\"\u003ehttps://www.hackerrank.com/contests/w8/challenges/black-box-1\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://csacademy.com/contest/round-42/task/xor-submatrix/\"\u003ehttps://csacademy.com/contest/round-42/task/xor-submatrix/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/714/problem/C\"\u003ehttp://codeforces.com/contest/714/problem/C\u003c/a\u003e 5\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUBXOR/\"\u003ehttp://www.spoj.com/problems/SUBXOR/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/817/problem/E\"\u003ehttp://codeforces.com/contest/817/problem/E\u003c/a\u003e (5) //Classical — remember sum! NICE!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/37/problem/C\"\u003ehttp://codeforces.com/contest/37/problem/C\u003c/a\u003e (4) //NICE — Prefix dictionary [or math]\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etrie_string\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAINDEX/\"\u003ehttp://www.spoj.com/problems/ADAINDEX/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e2642 [LA]\u003c/p\u003e\u003cp\u003eUVA 10860\u003c/p\u003e\u003cp\u003eUVA 10295\u003c/p\u003e\u003cp\u003eUVA 13186 //+Bitset\u003c/p\u003e\u003cp\u003eUVA 1123\u003c/p\u003e\u003cp\u003eUVA 12506\u003c/p\u003e\u003cp\u003eUVA 11539\u003c/p\u003e\u003cp\u003eUVA 1142\u003c/p\u003e\u003cp\u003eUVA 12359\u003c/p\u003e\u003cp\u003eUVA 10282\u003c/p\u003e\u003cp\u003e11732 UVA (5)\u003c/p\u003e\u003cp\u003e11539 UVA (5)\u003c/p\u003e\u003cp\u003e11488 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TRYCOMP/\"\u003ehttp://www.spoj.com/problems/TRYCOMP/\u003c/a\u003e (4)\u003c/p\u003e\u003cp\u003e10860 UVA (4) //DP + Trie [nice — slightly generic]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/DICT/\"\u003ehttp://www.spoj.com/problems/DICT/\u003c/a\u003e (4) //Sample trie — but slightly weak/wrong data-set\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTSP\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eGym 100818E [2015-2016 ACM-ICPC Southeastern European Regional Programming Contest (SEERC 2015)]\u003c/p\u003e\u003cp\u003e3725 [LA]\u003c/p\u003e\u003cp\u003eUVA 10496\u003c/p\u003e\u003cp\u003eGym 101020H [2015 Syrian Private Universities Collegiate Programming Contest] N!\u003c/p\u003e\u003cp\u003eLightOJ 1057\u003c/p\u003e\u003cp\u003eUVA 11643 //[NICE][BFS]\u003c/p\u003e\u003cp\u003e3305 [LA] //On plane\u003c/p\u003e\u003cp\u003e10937 UVA (4) //find \u0027!\u0027 / BFS / TSP — NICE!\u003c/p\u003e\u003cp\u003e10944 UVA (4) \u003c/p\u003e\u003cp\u003e10818 UVA (5) //Easy — but not-easy implementation: ++Dijkstra [LEX!]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/A_W_S_N/\"\u003ehttp://www.spoj.com/problems/A_W_S_N/\u003c/a\u003e (4) //BFS + TSP (path) — NICE\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etwo-pointers\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAFENCE/\"\u003ehttp://www.spoj.com/problems/ADAFENCE/\u003c/a\u003e [Multiple Pointers]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ADAPLANT/\"\u003ehttp://www.spoj.com/problems/ADAPLANT/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/895/problem/B\"\u003ehttp://codeforces.com/contest/895/problem/B\u003c/a\u003e (3) //[OR BS]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/84/problem/B\"\u003ehttp://codeforces.com/contest/84/problem/B\u003c/a\u003e (2) //EASY //ll\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/79/problem/C\"\u003ehttp://codeforces.com/contest/79/problem/C\u003c/a\u003e (4) //NICE — [STRINGS][SET][COMPARE]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/746/problem/F\"\u003ehttp://codeforces.com/contest/746/problem/F\u003c/a\u003e 6\u003c/p\u003e\u003cp\u003e11436 UVA (5)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/760/problem/D\"\u003ehttp://codeforces.com/contest/760/problem/D\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e11386 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/WOWSUBSTR2/\"\u003ehttp://www.spoj.com/problems/WOWSUBSTR2/\u003c/a\u003e 3\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ARRAYSUB/\"\u003ehttp://www.spoj.com/problems/ARRAYSUB/\u003c/a\u003e 4\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CODFURY/\"\u003ehttp://www.spoj.com/problems/CODFURY/\u003c/a\u003e 3 //easy — ukazkove\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/769/problem/B\"\u003ehttp://codeforces.com/contest/769/problem/B\u003c/a\u003e 3 //sort + TP\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/814/problem/C\"\u003ehttp://codeforces.com/contest/814/problem/C\u003c/a\u003e 4 //NICE — maybe some DP +/-\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/CRAN04/\"\u003ehttp://www.spoj.com/problems/CRAN04/\u003c/a\u003e 4 //NICE — (more or less) 3 pointers\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/OPCPIZZA/\"\u003ehttp://www.spoj.com/problems/OPCPIZZA/\u003c/a\u003e 3 //NICE [EASY] [AGAINS EACH OTHER]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ALIEN/\"\u003ehttp://www.spoj.com/problems/ALIEN/\u003c/a\u003e (3) //Classical\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/HOTELS/\"\u003ehttp://www.spoj.com/problems/HOTELS/\u003c/a\u003e (3) //Classical \u0026amp; Easy\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/KOIREP/\"\u003ehttp://www.spoj.com/problems/KOIREP/\u003c/a\u003e (4) //VERY NICE — N buckedt find mid diff\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/6/problem/E\"\u003ehttp://codeforces.com/contest/6/problem/E\u003c/a\u003e (4) //NICE — Multiset\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/873/problem/C\"\u003ehttp://codeforces.com/contest/873/problem/C\u003c/a\u003e (3) //NICE — M times 2P tenchique\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ewavelet_tree\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUVA 1480\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/ILKQUERY/\"\u003ehttp://www.spoj.com/problems/ILKQUERY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/840/problem/D\"\u003ehttp://codeforces.com/contest/840/problem/D\u003c/a\u003e //Proposed by \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/GreenGrape\" title\u003d\"Candidate Master GreenGrape\"\u003eGreenGrape\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eZfunction\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/problems/CHSTR\"\u003ehttps://www.codechef.com/problems/CHSTR\u003c/a\u003e //Proposed by \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Apptica\" title\u003d\"Expert Apptica\"\u003eApptica\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/SUFEQPRE/\"\u003ehttp://www.spoj.com/problems/SUFEQPRE/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/problemset/problem/126/B\"\u003ehttp://codeforces.com/problemset/problem/126/B\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e2SAT\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e11930 UVA (4)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://codeforces.com/contest/776/problem/D\"\u003ehttp://codeforces.com/contest/776/problem/D\u003c/a\u003e (5) \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eFinally if you would like to add some problem to the list — even though I would be glad, please do so only in case of:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eIt is very interesting\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eThere is nothing, or low number of problems in the topic\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eYou add it in \u0026quot;bigger amount\u0026quot; at once\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThank you.\u003c/p\u003e\u003cp\u003eOffcourse if you have any remarks, questionns or requests, don\u0027t hesitate to ask.\u003c/p\u003e\u003cp\u003ePS: I\u0027m sorry but there might be some duplicities. In that case, either report it or ignore it (unless they are in different topics, then it have reason :) )\u003c/p\u003e\u003cp\u003eGood Luck \u0026amp; Have Nice Day\u003c/p\u003e\u003c/div\u003e","tags":["all problems","algorithms blog list","#algorithms"]}}